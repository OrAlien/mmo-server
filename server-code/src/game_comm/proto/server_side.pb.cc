// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_side.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_side.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ServerMSG {

namespace {

const ::google::protobuf::Descriptor* ServiceCmd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceCmd_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceHttpRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceHttpRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceHttpRequest_KvmapEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ServiceHttpResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceHttpResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServiceReady_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServiceReady_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerEnterZone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerEnterZone_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerChangeZone_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerChangeZone_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerChangeZone_Data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerChangeZone_Data_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerLogout_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerLogout_reflection_ = NULL;
const ::google::protobuf::Descriptor* SystemVarChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SystemVarChange_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SystemVarChange_SystemVarChangeType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SceneCreate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SceneCreate_reflection_ = NULL;
const ::google::protobuf::Descriptor* SceneDestory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SceneDestory_reflection_ = NULL;
const ::google::protobuf::Descriptor* MonsterGen_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MonsterGen_reflection_ = NULL;
const ::google::protobuf::Descriptor* MonsterDestory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MonsterDestory_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActiveGen_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActiveGen_reflection_ = NULL;
const ::google::protobuf::Descriptor* KillGen_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KillGen_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActorCreate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActorCreate_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActorDestory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActorDestory_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActorMove_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActorMove_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActorCastSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActorCastSkill_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActorCastSkill_Fail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActorCastSkill_Fail_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActorSetHide_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActorSetHide_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamCreate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamCreate_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamDestory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamDestory_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamQuit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamQuit_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamKickMember_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamKickMember_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamInviteMember_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamInviteMember_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamAcceptInvite_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamAcceptInvite_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamApplyMember_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamApplyMember_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamAcceptApply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamAcceptApply_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamNewLeader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamNewLeader_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamAddMember_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamAddMember_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamDelMember_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamDelMember_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamMemberInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamMemberInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* TeamMemberInfo_Info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TeamMemberInfo_Info_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* OMsgID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_server_5fside_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_server_5fside_2eproto() {
  protobuf_AddDesc_server_5fside_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "server_side.proto");
  GOOGLE_CHECK(file != NULL);
  ServiceCmd_descriptor_ = file->message_type(0);
  static const int ServiceCmd_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceCmd, cmds_),
  };
  ServiceCmd_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServiceCmd_descriptor_,
      ServiceCmd::internal_default_instance(),
      ServiceCmd_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServiceCmd),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceCmd, _internal_metadata_));
  ServiceHttpRequest_descriptor_ = file->message_type(1);
  static const int ServiceHttpRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceHttpRequest, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceHttpRequest, kvmap_),
  };
  ServiceHttpRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServiceHttpRequest_descriptor_,
      ServiceHttpRequest::internal_default_instance(),
      ServiceHttpRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServiceHttpRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceHttpRequest, _internal_metadata_));
  ServiceHttpRequest_KvmapEntry_descriptor_ = ServiceHttpRequest_descriptor_->nested_type(0);
  ServiceHttpResponse_descriptor_ = file->message_type(2);
  static const int ServiceHttpResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceHttpResponse, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceHttpResponse, response_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceHttpResponse, response_reason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceHttpResponse, response_txt_),
  };
  ServiceHttpResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServiceHttpResponse_descriptor_,
      ServiceHttpResponse::internal_default_instance(),
      ServiceHttpResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServiceHttpResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceHttpResponse, _internal_metadata_));
  ServiceReady_descriptor_ = file->message_type(3);
  static const int ServiceReady_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceReady, serverport_),
  };
  ServiceReady_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServiceReady_descriptor_,
      ServiceReady::internal_default_instance(),
      ServiceReady_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServiceReady),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServiceReady, _internal_metadata_));
  PlayerEnterZone_descriptor_ = file->message_type(4);
  static const int PlayerEnterZone_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterZone, idplayer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterZone, socket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterZone, idscene_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterZone, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterZone, posy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterZone, face_),
  };
  PlayerEnterZone_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayerEnterZone_descriptor_,
      PlayerEnterZone::internal_default_instance(),
      PlayerEnterZone_offsets_,
      -1,
      -1,
      -1,
      sizeof(PlayerEnterZone),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterZone, _internal_metadata_));
  PlayerChangeZone_descriptor_ = file->message_type(5);
  static const int PlayerChangeZone_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChangeZone, idplayer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChangeZone, socket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChangeZone, idzone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChangeZone, idscene_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChangeZone, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChangeZone, posy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChangeZone, range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChangeZone, face_),
  };
  PlayerChangeZone_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayerChangeZone_descriptor_,
      PlayerChangeZone::internal_default_instance(),
      PlayerChangeZone_offsets_,
      -1,
      -1,
      -1,
      sizeof(PlayerChangeZone),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChangeZone, _internal_metadata_));
  PlayerChangeZone_Data_descriptor_ = file->message_type(6);
  static const int PlayerChangeZone_Data_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChangeZone_Data, idplayer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChangeZone_Data, socket_),
  };
  PlayerChangeZone_Data_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayerChangeZone_Data_descriptor_,
      PlayerChangeZone_Data::internal_default_instance(),
      PlayerChangeZone_Data_offsets_,
      -1,
      -1,
      -1,
      sizeof(PlayerChangeZone_Data),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChangeZone_Data, _internal_metadata_));
  PlayerLogout_descriptor_ = file->message_type(7);
  static const int PlayerLogout_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogout, idplayer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogout, socket_),
  };
  PlayerLogout_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayerLogout_descriptor_,
      PlayerLogout::internal_default_instance(),
      PlayerLogout_offsets_,
      -1,
      -1,
      -1,
      sizeof(PlayerLogout),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLogout, _internal_metadata_));
  SystemVarChange_descriptor_ = file->message_type(8);
  static const int SystemVarChange_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVarChange, keyidx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVarChange, idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVarChange, val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVarChange, str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVarChange, type_),
  };
  SystemVarChange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SystemVarChange_descriptor_,
      SystemVarChange::internal_default_instance(),
      SystemVarChange_offsets_,
      -1,
      -1,
      -1,
      sizeof(SystemVarChange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemVarChange, _internal_metadata_));
  SystemVarChange_SystemVarChangeType_descriptor_ = SystemVarChange_descriptor_->enum_type(0);
  SceneCreate_descriptor_ = file->message_type(9);
  static const int SceneCreate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneCreate, scene_id_),
  };
  SceneCreate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SceneCreate_descriptor_,
      SceneCreate::internal_default_instance(),
      SceneCreate_offsets_,
      -1,
      -1,
      -1,
      sizeof(SceneCreate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneCreate, _internal_metadata_));
  SceneDestory_descriptor_ = file->message_type(10);
  static const int SceneDestory_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneDestory, scene_id_),
  };
  SceneDestory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SceneDestory_descriptor_,
      SceneDestory::internal_default_instance(),
      SceneDestory_offsets_,
      -1,
      -1,
      -1,
      sizeof(SceneDestory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneDestory, _internal_metadata_));
  MonsterGen_descriptor_ = file->message_type(11);
  static const int MonsterGen_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterGen, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterGen, gen_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterGen, monster_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterGen, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterGen, posy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterGen, camp_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterGen, monster_id_),
  };
  MonsterGen_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MonsterGen_descriptor_,
      MonsterGen::internal_default_instance(),
      MonsterGen_offsets_,
      -1,
      -1,
      -1,
      sizeof(MonsterGen),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterGen, _internal_metadata_));
  MonsterDestory_descriptor_ = file->message_type(12);
  static const int MonsterDestory_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterDestory, monster_id_),
  };
  MonsterDestory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MonsterDestory_descriptor_,
      MonsterDestory::internal_default_instance(),
      MonsterDestory_offsets_,
      -1,
      -1,
      -1,
      sizeof(MonsterDestory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterDestory, _internal_metadata_));
  ActiveGen_descriptor_ = file->message_type(13);
  static const int ActiveGen_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveGen, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveGen, gen_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveGen, active_),
  };
  ActiveGen_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActiveGen_descriptor_,
      ActiveGen::internal_default_instance(),
      ActiveGen_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActiveGen),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActiveGen, _internal_metadata_));
  KillGen_descriptor_ = file->message_type(14);
  static const int KillGen_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillGen, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillGen, gen_id_),
  };
  KillGen_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KillGen_descriptor_,
      KillGen::internal_default_instance(),
      KillGen_offsets_,
      -1,
      -1,
      -1,
      sizeof(KillGen),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillGen, _internal_metadata_));
  ActorCreate_descriptor_ = file->message_type(15);
  static const int ActorCreate_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, actor_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, actortype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, baselook_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, prof_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, lev_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, campid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, hpmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, mp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, mpmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, movespd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, ownerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, posy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, face_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, monster_gen_id_),
  };
  ActorCreate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActorCreate_descriptor_,
      ActorCreate::internal_default_instance(),
      ActorCreate_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActorCreate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCreate, _internal_metadata_));
  ActorDestory_descriptor_ = file->message_type(16);
  static const int ActorDestory_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorDestory, actor_id_),
  };
  ActorDestory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActorDestory_descriptor_,
      ActorDestory::internal_default_instance(),
      ActorDestory_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActorDestory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorDestory, _internal_metadata_));
  ActorMove_descriptor_ = file->message_type(17);
  static const int ActorMove_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorMove, actor_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorMove, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorMove, y_),
  };
  ActorMove_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActorMove_descriptor_,
      ActorMove::internal_default_instance(),
      ActorMove_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActorMove),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorMove, _internal_metadata_));
  ActorCastSkill_descriptor_ = file->message_type(18);
  static const int ActorCastSkill_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCastSkill, actor_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCastSkill, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCastSkill, skill_id_),
  };
  ActorCastSkill_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActorCastSkill_descriptor_,
      ActorCastSkill::internal_default_instance(),
      ActorCastSkill_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActorCastSkill),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCastSkill, _internal_metadata_));
  ActorCastSkill_Fail_descriptor_ = file->message_type(19);
  static const int ActorCastSkill_Fail_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCastSkill_Fail, actor_id_),
  };
  ActorCastSkill_Fail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActorCastSkill_Fail_descriptor_,
      ActorCastSkill_Fail::internal_default_instance(),
      ActorCastSkill_Fail_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActorCastSkill_Fail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorCastSkill_Fail, _internal_metadata_));
  ActorSetHide_descriptor_ = file->message_type(20);
  static const int ActorSetHide_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorSetHide, actor_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorSetHide, hide_count_),
  };
  ActorSetHide_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActorSetHide_descriptor_,
      ActorSetHide::internal_default_instance(),
      ActorSetHide_offsets_,
      -1,
      -1,
      -1,
      sizeof(ActorSetHide),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActorSetHide, _internal_metadata_));
  TeamCreate_descriptor_ = file->message_type(21);
  static const int TeamCreate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamCreate, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamCreate, leader_id_),
  };
  TeamCreate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamCreate_descriptor_,
      TeamCreate::internal_default_instance(),
      TeamCreate_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamCreate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamCreate, _internal_metadata_));
  TeamDestory_descriptor_ = file->message_type(22);
  static const int TeamDestory_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamDestory, team_id_),
  };
  TeamDestory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamDestory_descriptor_,
      TeamDestory::internal_default_instance(),
      TeamDestory_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamDestory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamDestory, _internal_metadata_));
  TeamQuit_descriptor_ = file->message_type(23);
  static const int TeamQuit_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamQuit, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamQuit, operator_id_),
  };
  TeamQuit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamQuit_descriptor_,
      TeamQuit::internal_default_instance(),
      TeamQuit_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamQuit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamQuit, _internal_metadata_));
  TeamKickMember_descriptor_ = file->message_type(24);
  static const int TeamKickMember_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamKickMember, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamKickMember, operator_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamKickMember, kick_id_),
  };
  TeamKickMember_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamKickMember_descriptor_,
      TeamKickMember::internal_default_instance(),
      TeamKickMember_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamKickMember),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamKickMember, _internal_metadata_));
  TeamInviteMember_descriptor_ = file->message_type(25);
  static const int TeamInviteMember_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamInviteMember, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamInviteMember, operator_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamInviteMember, invitee_id_),
  };
  TeamInviteMember_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamInviteMember_descriptor_,
      TeamInviteMember::internal_default_instance(),
      TeamInviteMember_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamInviteMember),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamInviteMember, _internal_metadata_));
  TeamAcceptInvite_descriptor_ = file->message_type(26);
  static const int TeamAcceptInvite_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamAcceptInvite, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamAcceptInvite, inviter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamAcceptInvite, invitee_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamAcceptInvite, result_),
  };
  TeamAcceptInvite_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamAcceptInvite_descriptor_,
      TeamAcceptInvite::internal_default_instance(),
      TeamAcceptInvite_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamAcceptInvite),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamAcceptInvite, _internal_metadata_));
  TeamApplyMember_descriptor_ = file->message_type(27);
  static const int TeamApplyMember_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamApplyMember, applicant_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamApplyMember, respondent_id_),
  };
  TeamApplyMember_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamApplyMember_descriptor_,
      TeamApplyMember::internal_default_instance(),
      TeamApplyMember_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamApplyMember),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamApplyMember, _internal_metadata_));
  TeamAcceptApply_descriptor_ = file->message_type(28);
  static const int TeamAcceptApply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamAcceptApply, applicant_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamAcceptApply, respondent_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamAcceptApply, result_),
  };
  TeamAcceptApply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamAcceptApply_descriptor_,
      TeamAcceptApply::internal_default_instance(),
      TeamAcceptApply_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamAcceptApply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamAcceptApply, _internal_metadata_));
  TeamNewLeader_descriptor_ = file->message_type(29);
  static const int TeamNewLeader_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamNewLeader, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamNewLeader, operator_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamNewLeader, new_leader_id_),
  };
  TeamNewLeader_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamNewLeader_descriptor_,
      TeamNewLeader::internal_default_instance(),
      TeamNewLeader_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamNewLeader),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamNewLeader, _internal_metadata_));
  TeamAddMember_descriptor_ = file->message_type(30);
  static const int TeamAddMember_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamAddMember, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamAddMember, member_id_),
  };
  TeamAddMember_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamAddMember_descriptor_,
      TeamAddMember::internal_default_instance(),
      TeamAddMember_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamAddMember),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamAddMember, _internal_metadata_));
  TeamDelMember_descriptor_ = file->message_type(31);
  static const int TeamDelMember_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamDelMember, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamDelMember, member_id_),
  };
  TeamDelMember_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamDelMember_descriptor_,
      TeamDelMember::internal_default_instance(),
      TeamDelMember_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamDelMember),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamDelMember, _internal_metadata_));
  TeamMemberInfo_descriptor_ = file->message_type(32);
  static const int TeamMemberInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamMemberInfo, member_list_),
  };
  TeamMemberInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamMemberInfo_descriptor_,
      TeamMemberInfo::internal_default_instance(),
      TeamMemberInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamMemberInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamMemberInfo, _internal_metadata_));
  TeamMemberInfo_Info_descriptor_ = TeamMemberInfo_descriptor_->nested_type(0);
  static const int TeamMemberInfo_Info_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamMemberInfo_Info, member_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamMemberInfo_Info, member_lev_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamMemberInfo_Info, member_online_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamMemberInfo_Info, member_name_),
  };
  TeamMemberInfo_Info_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TeamMemberInfo_Info_descriptor_,
      TeamMemberInfo_Info::internal_default_instance(),
      TeamMemberInfo_Info_offsets_,
      -1,
      -1,
      -1,
      sizeof(TeamMemberInfo_Info),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamMemberInfo_Info, _internal_metadata_));
  OMsgID_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_server_5fside_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServiceCmd_descriptor_, ServiceCmd::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServiceHttpRequest_descriptor_, ServiceHttpRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        ServiceHttpRequest_KvmapEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                ServiceHttpRequest_KvmapEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServiceHttpResponse_descriptor_, ServiceHttpResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServiceReady_descriptor_, ServiceReady::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayerEnterZone_descriptor_, PlayerEnterZone::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayerChangeZone_descriptor_, PlayerChangeZone::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayerChangeZone_Data_descriptor_, PlayerChangeZone_Data::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayerLogout_descriptor_, PlayerLogout::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SystemVarChange_descriptor_, SystemVarChange::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SceneCreate_descriptor_, SceneCreate::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SceneDestory_descriptor_, SceneDestory::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MonsterGen_descriptor_, MonsterGen::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MonsterDestory_descriptor_, MonsterDestory::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActiveGen_descriptor_, ActiveGen::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KillGen_descriptor_, KillGen::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActorCreate_descriptor_, ActorCreate::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActorDestory_descriptor_, ActorDestory::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActorMove_descriptor_, ActorMove::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActorCastSkill_descriptor_, ActorCastSkill::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActorCastSkill_Fail_descriptor_, ActorCastSkill_Fail::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActorSetHide_descriptor_, ActorSetHide::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamCreate_descriptor_, TeamCreate::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamDestory_descriptor_, TeamDestory::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamQuit_descriptor_, TeamQuit::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamKickMember_descriptor_, TeamKickMember::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamInviteMember_descriptor_, TeamInviteMember::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamAcceptInvite_descriptor_, TeamAcceptInvite::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamApplyMember_descriptor_, TeamApplyMember::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamAcceptApply_descriptor_, TeamAcceptApply::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamNewLeader_descriptor_, TeamNewLeader::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamAddMember_descriptor_, TeamAddMember::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamDelMember_descriptor_, TeamDelMember::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamMemberInfo_descriptor_, TeamMemberInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TeamMemberInfo_Info_descriptor_, TeamMemberInfo_Info::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_server_5fside_2eproto() {
  ServiceCmd_default_instance_.Shutdown();
  delete ServiceCmd_reflection_;
  ServiceHttpRequest_default_instance_.Shutdown();
  delete ServiceHttpRequest_reflection_;
  ServiceHttpResponse_default_instance_.Shutdown();
  delete ServiceHttpResponse_reflection_;
  ServiceReady_default_instance_.Shutdown();
  delete ServiceReady_reflection_;
  PlayerEnterZone_default_instance_.Shutdown();
  delete PlayerEnterZone_reflection_;
  PlayerChangeZone_default_instance_.Shutdown();
  delete PlayerChangeZone_reflection_;
  PlayerChangeZone_Data_default_instance_.Shutdown();
  delete PlayerChangeZone_Data_reflection_;
  PlayerLogout_default_instance_.Shutdown();
  delete PlayerLogout_reflection_;
  SystemVarChange_default_instance_.Shutdown();
  delete SystemVarChange_reflection_;
  SceneCreate_default_instance_.Shutdown();
  delete SceneCreate_reflection_;
  SceneDestory_default_instance_.Shutdown();
  delete SceneDestory_reflection_;
  MonsterGen_default_instance_.Shutdown();
  delete MonsterGen_reflection_;
  MonsterDestory_default_instance_.Shutdown();
  delete MonsterDestory_reflection_;
  ActiveGen_default_instance_.Shutdown();
  delete ActiveGen_reflection_;
  KillGen_default_instance_.Shutdown();
  delete KillGen_reflection_;
  ActorCreate_default_instance_.Shutdown();
  delete ActorCreate_reflection_;
  ActorDestory_default_instance_.Shutdown();
  delete ActorDestory_reflection_;
  ActorMove_default_instance_.Shutdown();
  delete ActorMove_reflection_;
  ActorCastSkill_default_instance_.Shutdown();
  delete ActorCastSkill_reflection_;
  ActorCastSkill_Fail_default_instance_.Shutdown();
  delete ActorCastSkill_Fail_reflection_;
  ActorSetHide_default_instance_.Shutdown();
  delete ActorSetHide_reflection_;
  TeamCreate_default_instance_.Shutdown();
  delete TeamCreate_reflection_;
  TeamDestory_default_instance_.Shutdown();
  delete TeamDestory_reflection_;
  TeamQuit_default_instance_.Shutdown();
  delete TeamQuit_reflection_;
  TeamKickMember_default_instance_.Shutdown();
  delete TeamKickMember_reflection_;
  TeamInviteMember_default_instance_.Shutdown();
  delete TeamInviteMember_reflection_;
  TeamAcceptInvite_default_instance_.Shutdown();
  delete TeamAcceptInvite_reflection_;
  TeamApplyMember_default_instance_.Shutdown();
  delete TeamApplyMember_reflection_;
  TeamAcceptApply_default_instance_.Shutdown();
  delete TeamAcceptApply_reflection_;
  TeamNewLeader_default_instance_.Shutdown();
  delete TeamNewLeader_reflection_;
  TeamAddMember_default_instance_.Shutdown();
  delete TeamAddMember_reflection_;
  TeamDelMember_default_instance_.Shutdown();
  delete TeamDelMember_reflection_;
  TeamMemberInfo_default_instance_.Shutdown();
  delete TeamMemberInfo_reflection_;
  TeamMemberInfo_Info_default_instance_.Shutdown();
  delete TeamMemberInfo_Info_reflection_;
}

void protobuf_InitDefaults_server_5fside_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  ServiceCmd_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ServiceHttpRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ServiceHttpResponse_default_instance_.DefaultConstruct();
  ServiceReady_default_instance_.DefaultConstruct();
  PlayerEnterZone_default_instance_.DefaultConstruct();
  PlayerChangeZone_default_instance_.DefaultConstruct();
  PlayerChangeZone_Data_default_instance_.DefaultConstruct();
  PlayerLogout_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SystemVarChange_default_instance_.DefaultConstruct();
  SceneCreate_default_instance_.DefaultConstruct();
  SceneDestory_default_instance_.DefaultConstruct();
  MonsterGen_default_instance_.DefaultConstruct();
  MonsterDestory_default_instance_.DefaultConstruct();
  ActiveGen_default_instance_.DefaultConstruct();
  KillGen_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ActorCreate_default_instance_.DefaultConstruct();
  ActorDestory_default_instance_.DefaultConstruct();
  ActorMove_default_instance_.DefaultConstruct();
  ActorCastSkill_default_instance_.DefaultConstruct();
  ActorCastSkill_Fail_default_instance_.DefaultConstruct();
  ActorSetHide_default_instance_.DefaultConstruct();
  TeamCreate_default_instance_.DefaultConstruct();
  TeamDestory_default_instance_.DefaultConstruct();
  TeamQuit_default_instance_.DefaultConstruct();
  TeamKickMember_default_instance_.DefaultConstruct();
  TeamInviteMember_default_instance_.DefaultConstruct();
  TeamAcceptInvite_default_instance_.DefaultConstruct();
  TeamApplyMember_default_instance_.DefaultConstruct();
  TeamAcceptApply_default_instance_.DefaultConstruct();
  TeamNewLeader_default_instance_.DefaultConstruct();
  TeamAddMember_default_instance_.DefaultConstruct();
  TeamDelMember_default_instance_.DefaultConstruct();
  TeamMemberInfo_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TeamMemberInfo_Info_default_instance_.DefaultConstruct();
  ServiceCmd_default_instance_.get_mutable()->InitAsDefaultInstance();
  ServiceHttpRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ServiceHttpResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ServiceReady_default_instance_.get_mutable()->InitAsDefaultInstance();
  PlayerEnterZone_default_instance_.get_mutable()->InitAsDefaultInstance();
  PlayerChangeZone_default_instance_.get_mutable()->InitAsDefaultInstance();
  PlayerChangeZone_Data_default_instance_.get_mutable()->InitAsDefaultInstance();
  PlayerLogout_default_instance_.get_mutable()->InitAsDefaultInstance();
  SystemVarChange_default_instance_.get_mutable()->InitAsDefaultInstance();
  SceneCreate_default_instance_.get_mutable()->InitAsDefaultInstance();
  SceneDestory_default_instance_.get_mutable()->InitAsDefaultInstance();
  MonsterGen_default_instance_.get_mutable()->InitAsDefaultInstance();
  MonsterDestory_default_instance_.get_mutable()->InitAsDefaultInstance();
  ActiveGen_default_instance_.get_mutable()->InitAsDefaultInstance();
  KillGen_default_instance_.get_mutable()->InitAsDefaultInstance();
  ActorCreate_default_instance_.get_mutable()->InitAsDefaultInstance();
  ActorDestory_default_instance_.get_mutable()->InitAsDefaultInstance();
  ActorMove_default_instance_.get_mutable()->InitAsDefaultInstance();
  ActorCastSkill_default_instance_.get_mutable()->InitAsDefaultInstance();
  ActorCastSkill_Fail_default_instance_.get_mutable()->InitAsDefaultInstance();
  ActorSetHide_default_instance_.get_mutable()->InitAsDefaultInstance();
  TeamCreate_default_instance_.get_mutable()->InitAsDefaultInstance();
  TeamDestory_default_instance_.get_mutable()->InitAsDefaultInstance();
  TeamQuit_default_instance_.get_mutable()->InitAsDefaultInstance();
  TeamKickMember_default_instance_.get_mutable()->InitAsDefaultInstance();
  TeamInviteMember_default_instance_.get_mutable()->InitAsDefaultInstance();
  TeamAcceptInvite_default_instance_.get_mutable()->InitAsDefaultInstance();
  TeamApplyMember_default_instance_.get_mutable()->InitAsDefaultInstance();
  TeamAcceptApply_default_instance_.get_mutable()->InitAsDefaultInstance();
  TeamNewLeader_default_instance_.get_mutable()->InitAsDefaultInstance();
  TeamAddMember_default_instance_.get_mutable()->InitAsDefaultInstance();
  TeamDelMember_default_instance_.get_mutable()->InitAsDefaultInstance();
  TeamMemberInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  TeamMemberInfo_Info_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_server_5fside_2eproto_once_);
void protobuf_InitDefaults_server_5fside_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_server_5fside_2eproto_once_,
                 &protobuf_InitDefaults_server_5fside_2eproto_impl);
}
void protobuf_AddDesc_server_5fside_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_server_5fside_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021server_side.proto\022\tServerMSG\"\032\n\nServic"
    "eCmd\022\014\n\004cmds\030\001 \003(\t\"\210\001\n\022ServiceHttpReques"
    "t\022\013\n\003uid\030\001 \001(\004\0227\n\005kvmap\030\002 \003(\0132(.ServerMS"
    "G.ServiceHttpRequest.KvmapEntry\032,\n\nKvmap"
    "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"h\n"
    "\023ServiceHttpResponse\022\013\n\003uid\030\001 \001(\004\022\025\n\rres"
    "ponse_code\030\002 \001(\005\022\027\n\017response_reason\030\003 \001("
    "\t\022\024\n\014response_txt\030\004 \001(\014\"\"\n\014ServiceReady\022"
    "\022\n\nserverport\030\001 \001(\r\"n\n\017PlayerEnterZone\022\020"
    "\n\010idplayer\030\001 \001(\004\022\016\n\006socket\030\002 \001(\004\022\017\n\007idsc"
    "ene\030\003 \001(\004\022\014\n\004posx\030\004 \001(\002\022\014\n\004posy\030\005 \001(\002\022\014\n"
    "\004face\030\006 \001(\002\"\216\001\n\020PlayerChangeZone\022\020\n\010idpl"
    "ayer\030\001 \001(\004\022\016\n\006socket\030\002 \001(\004\022\016\n\006idzone\030\003 \001"
    "(\r\022\017\n\007idscene\030\004 \001(\004\022\014\n\004posx\030\005 \001(\002\022\014\n\004pos"
    "y\030\006 \001(\002\022\r\n\005range\030\007 \001(\002\022\014\n\004face\030\010 \001(\002\"9\n\025"
    "PlayerChangeZone_Data\022\020\n\010idplayer\030\001 \001(\004\022"
    "\016\n\006socket\030\002 \001(\004\"0\n\014PlayerLogout\022\020\n\010idpla"
    "yer\030\001 \001(\004\022\016\n\006socket\030\002 \001(\004\"\346\001\n\017SystemVarC"
    "hange\022\016\n\006keyidx\030\001 \001(\r\022\013\n\003idx\030\002 \001(\r\022\013\n\003va"
    "l\030\003 \001(\r\022\013\n\003str\030\004 \001(\t\022<\n\004type\030\005 \001(\0162..Ser"
    "verMSG.SystemVarChange.SystemVarChangeTy"
    "pe\"^\n\023SystemVarChangeType\022\017\n\013SVCT_CREATE"
    "\020\000\022\021\n\rSVCT_SET_DATA\020\001\022\021\n\rSVCT_ADD_DATA\020\002"
    "\022\020\n\014SVCT_SET_STR\020\003\"\037\n\013SceneCreate\022\020\n\010sce"
    "ne_id\030\001 \001(\004\" \n\014SceneDestory\022\020\n\010scene_id\030"
    "\001 \001(\004\"\205\001\n\nMonsterGen\022\020\n\010scene_id\030\001 \001(\004\022\016"
    "\n\006gen_id\030\002 \001(\r\022\024\n\014monster_type\030\003 \001(\r\022\014\n\004"
    "posx\030\004 \001(\002\022\014\n\004posy\030\005 \001(\002\022\017\n\007camp_id\030\006 \001("
    "\r\022\022\n\nmonster_id\030\007 \001(\r\"$\n\016MonsterDestory\022"
    "\022\n\nmonster_id\030\001 \003(\004\"=\n\tActiveGen\022\020\n\010scen"
    "e_id\030\001 \001(\004\022\016\n\006gen_id\030\002 \001(\r\022\016\n\006active\030\003 \001"
    "(\010\"+\n\007KillGen\022\020\n\010scene_id\030\001 \001(\004\022\016\n\006gen_i"
    "d\030\002 \001(\r\"\251\002\n\013ActorCreate\022\020\n\010actor_id\030\001 \001("
    "\004\022\020\n\010scene_id\030\002 \001(\004\022\014\n\004name\030\004 \001(\t\022\021\n\tact"
    "ortype\030\005 \001(\r\022\020\n\010baselook\030\006 \001(\r\022\014\n\004prof\030\007"
    " \001(\r\022\013\n\003lev\030\010 \001(\r\022\016\n\006campid\030\t \001(\r\022\n\n\002hp\030"
    "\n \001(\r\022\r\n\005hpmax\030\013 \001(\r\022\n\n\002mp\030\014 \001(\r\022\r\n\005mpma"
    "x\030\r \001(\r\022\017\n\007movespd\030\016 \001(\r\022\017\n\007ownerid\030\017 \001("
    "\004\022\014\n\004posx\030\020 \001(\002\022\014\n\004posy\030\021 \001(\002\022\014\n\004face\030\022 "
    "\001(\002\022\026\n\016monster_gen_id\030\024 \001(\r\" \n\014ActorDest"
    "ory\022\020\n\010actor_id\030\001 \001(\004\"3\n\tActorMove\022\020\n\010ac"
    "tor_id\030\001 \001(\004\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\"G\n\016Ac"
    "torCastSkill\022\020\n\010actor_id\030\001 \001(\004\022\021\n\ttarget"
    "_id\030\002 \001(\004\022\020\n\010skill_id\030\003 \001(\r\"\'\n\023ActorCast"
    "Skill_Fail\022\020\n\010actor_id\030\001 \001(\004\"4\n\014ActorSet"
    "Hide\022\020\n\010actor_id\030\001 \001(\004\022\022\n\nhide_count\030\002 \001"
    "(\005\"0\n\nTeamCreate\022\017\n\007team_id\030\001 \001(\004\022\021\n\tlea"
    "der_id\030\002 \001(\004\"\036\n\013TeamDestory\022\017\n\007team_id\030\001"
    " \001(\004\"0\n\010TeamQuit\022\017\n\007team_id\030\001 \001(\004\022\023\n\013ope"
    "rator_id\030\002 \001(\004\"G\n\016TeamKickMember\022\017\n\007team"
    "_id\030\001 \001(\004\022\023\n\013operator_id\030\002 \001(\004\022\017\n\007kick_i"
    "d\030\003 \001(\004\"L\n\020TeamInviteMember\022\017\n\007team_id\030\001"
    " \001(\004\022\023\n\013operator_id\030\002 \001(\004\022\022\n\ninvitee_id\030"
    "\003 \001(\004\"[\n\020TeamAcceptInvite\022\017\n\007team_id\030\001 \001"
    "(\004\022\022\n\ninviter_id\030\002 \001(\004\022\022\n\ninvitee_id\030\003 \001"
    "(\004\022\016\n\006result\030\004 \001(\010\">\n\017TeamApplyMember\022\024\n"
    "\014applicant_id\030\001 \001(\004\022\025\n\rrespondent_id\030\002 \001"
    "(\004\"N\n\017TeamAcceptApply\022\024\n\014applicant_id\030\001 "
    "\001(\004\022\025\n\rrespondent_id\030\002 \001(\004\022\016\n\006result\030\003 \001"
    "(\010\"L\n\rTeamNewLeader\022\017\n\007team_id\030\001 \001(\004\022\023\n\013"
    "operator_id\030\002 \001(\004\022\025\n\rnew_leader_id\030\003 \001(\004"
    "\"3\n\rTeamAddMember\022\017\n\007team_id\030\001 \001(\004\022\021\n\tme"
    "mber_id\030\002 \001(\004\"3\n\rTeamDelMember\022\017\n\007team_i"
    "d\030\001 \001(\004\022\021\n\tmember_id\030\002 \001(\004\"\240\001\n\016TeamMembe"
    "rInfo\0223\n\013member_list\030\001 \003(\0132\036.ServerMSG.T"
    "eamMemberInfo.Info\032Y\n\004Info\022\021\n\tmember_id\030"
    "\001 \001(\004\022\022\n\nmember_lev\030\002 \001(\r\022\025\n\rmember_onli"
    "ne\030\003 \001(\010\022\023\n\013member_name\030\004 \001(\t*\233\007\n\006OMsgID"
    "\022\017\n\013OMSGID_NONE\020\000\022\026\n\020MsgID_ServiceCmd\020\240\234"
    "\001\022\036\n\030MsgID_ServiceHttpRequest\020\241\234\001\022\037\n\031Msg"
    "ID_ServiceHttpResponse\020\242\234\001\022\030\n\022MsgID_Serv"
    "iceReady\020\252\234\001\022\033\n\025MsgID_PlayerEnterZone\020\265\234"
    "\001\022\034\n\026MsgID_PlayerChangeZone\020\266\234\001\022!\n\033MsgID"
    "_PlayerChangeZone_Data\020\267\234\001\022\030\n\022MsgID_Play"
    "erLogout\020\270\234\001\022\033\n\025MsgID_SystemVarChange\020\276\234"
    "\001\022\027\n\021MsgID_SceneCreate\020\277\234\001\022\030\n\022MsgID_Scen"
    "eDestory\020\300\234\001\022\026\n\020MsgID_MonsterGen\020\301\234\001\022\032\n\024"
    "MsgID_MonsterDestory\020\302\234\001\022\025\n\017MsgID_Active"
    "Gen\020\303\234\001\022\023\n\rMsgID_KillGen\020\304\234\001\022\027\n\021MsgID_Ac"
    "torCreate\020\204\235\001\022\030\n\022MsgID_ActorDestory\020\205\235\001\022"
    "\025\n\017MsgID_ActorMove\020\206\235\001\022\032\n\024MsgID_ActorCas"
    "tSkill\020\207\235\001\022\037\n\031MsgID_ActorCastSkill_Fail\020"
    "\210\235\001\022\030\n\022MsgID_ActorSetHide\020\211\235\001\022\026\n\020MsgID_T"
    "eamCreate\020\216\235\001\022\027\n\021MsgID_TeamDestory\020\217\235\001\022\024"
    "\n\016MsgID_TeamQuit\020\220\235\001\022\032\n\024MsgID_TeamKickMe"
    "mber\020\221\235\001\022\034\n\026MsgID_TeamInviteMember\020\222\235\001\022\034"
    "\n\026MsgID_TeamAcceptInvite\020\223\235\001\022\033\n\025MsgID_Te"
    "amApplyMember\020\224\235\001\022\033\n\025MsgID_TeamAcceptApp"
    "ly\020\225\235\001\022\031\n\023MsgID_TeamNewLeader\020\226\235\001\022\032\n\024Msg"
    "ID_TeamMemberInfo\020\227\235\001\022\031\n\023MsgID_TeamAddMe"
    "mber\020\230\235\001\022\031\n\023MsgID_TeamDelMember\020\231\235\001b\006pro"
    "to3", 3643);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_side.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_server_5fside_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_server_5fside_2eproto_once_);
void protobuf_AddDesc_server_5fside_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_server_5fside_2eproto_once_,
                 &protobuf_AddDesc_server_5fside_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_server_5fside_2eproto {
  StaticDescriptorInitializer_server_5fside_2eproto() {
    protobuf_AddDesc_server_5fside_2eproto();
  }
} static_descriptor_initializer_server_5fside_2eproto_;
const ::google::protobuf::EnumDescriptor* OMsgID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OMsgID_descriptor_;
}
bool OMsgID_IsValid(int value) {
  switch (value) {
    case 0:
    case 20000:
    case 20001:
    case 20002:
    case 20010:
    case 20021:
    case 20022:
    case 20023:
    case 20024:
    case 20030:
    case 20031:
    case 20032:
    case 20033:
    case 20034:
    case 20035:
    case 20036:
    case 20100:
    case 20101:
    case 20102:
    case 20103:
    case 20104:
    case 20105:
    case 20110:
    case 20111:
    case 20112:
    case 20113:
    case 20114:
    case 20115:
    case 20116:
    case 20117:
    case 20118:
    case 20119:
    case 20120:
    case 20121:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceCmd::kCmdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceCmd::ServiceCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.ServiceCmd)
}

void ServiceCmd::InitAsDefaultInstance() {
}

ServiceCmd::ServiceCmd(const ServiceCmd& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.ServiceCmd)
}

void ServiceCmd::SharedCtor() {
  _cached_size_ = 0;
}

ServiceCmd::~ServiceCmd() {
  // @@protoc_insertion_point(destructor:ServerMSG.ServiceCmd)
  SharedDtor();
}

void ServiceCmd::SharedDtor() {
}

void ServiceCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceCmd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceCmd_descriptor_;
}

const ServiceCmd& ServiceCmd::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ServiceCmd> ServiceCmd_default_instance_;

ServiceCmd* ServiceCmd::New(::google::protobuf::Arena* arena) const {
  ServiceCmd* n = new ServiceCmd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.ServiceCmd)
  cmds_.Clear();
}

bool ServiceCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.ServiceCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string cmds = 1;
      case 1: {
        if (tag == 10) {
         parse_cmds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cmds()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmds(this->cmds_size() - 1).data(),
            this->cmds(this->cmds_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerMSG.ServiceCmd.cmds"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_cmds;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.ServiceCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.ServiceCmd)
  return false;
#undef DO_
}

void ServiceCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.ServiceCmd)
  // repeated string cmds = 1;
  for (int i = 0; i < this->cmds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmds(i).data(), this->cmds(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerMSG.ServiceCmd.cmds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->cmds(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.ServiceCmd)
}

::google::protobuf::uint8* ServiceCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.ServiceCmd)
  // repeated string cmds = 1;
  for (int i = 0; i < this->cmds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmds(i).data(), this->cmds(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerMSG.ServiceCmd.cmds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->cmds(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.ServiceCmd)
  return target;
}

size_t ServiceCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.ServiceCmd)
  size_t total_size = 0;

  // repeated string cmds = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cmds_size());
  for (int i = 0; i < this->cmds_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cmds(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.ServiceCmd)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServiceCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.ServiceCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.ServiceCmd)
    UnsafeMergeFrom(*source);
  }
}

void ServiceCmd::MergeFrom(const ServiceCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.ServiceCmd)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ServiceCmd::UnsafeMergeFrom(const ServiceCmd& from) {
  GOOGLE_DCHECK(&from != this);
  cmds_.UnsafeMergeFrom(from.cmds_);
}

void ServiceCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.ServiceCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceCmd::CopyFrom(const ServiceCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.ServiceCmd)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ServiceCmd::IsInitialized() const {

  return true;
}

void ServiceCmd::Swap(ServiceCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceCmd::InternalSwap(ServiceCmd* other) {
  cmds_.UnsafeArenaSwap(&other->cmds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceCmd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceCmd_descriptor_;
  metadata.reflection = ServiceCmd_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServiceCmd

// repeated string cmds = 1;
int ServiceCmd::cmds_size() const {
  return cmds_.size();
}
void ServiceCmd::clear_cmds() {
  cmds_.Clear();
}
const ::std::string& ServiceCmd::cmds(int index) const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceCmd.cmds)
  return cmds_.Get(index);
}
::std::string* ServiceCmd::mutable_cmds(int index) {
  // @@protoc_insertion_point(field_mutable:ServerMSG.ServiceCmd.cmds)
  return cmds_.Mutable(index);
}
void ServiceCmd::set_cmds(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceCmd.cmds)
  cmds_.Mutable(index)->assign(value);
}
void ServiceCmd::set_cmds(int index, const char* value) {
  cmds_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ServerMSG.ServiceCmd.cmds)
}
void ServiceCmd::set_cmds(int index, const char* value, size_t size) {
  cmds_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.ServiceCmd.cmds)
}
::std::string* ServiceCmd::add_cmds() {
  // @@protoc_insertion_point(field_add_mutable:ServerMSG.ServiceCmd.cmds)
  return cmds_.Add();
}
void ServiceCmd::add_cmds(const ::std::string& value) {
  cmds_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ServerMSG.ServiceCmd.cmds)
}
void ServiceCmd::add_cmds(const char* value) {
  cmds_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ServerMSG.ServiceCmd.cmds)
}
void ServiceCmd::add_cmds(const char* value, size_t size) {
  cmds_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ServerMSG.ServiceCmd.cmds)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ServiceCmd::cmds() const {
  // @@protoc_insertion_point(field_list:ServerMSG.ServiceCmd.cmds)
  return cmds_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ServiceCmd::mutable_cmds() {
  // @@protoc_insertion_point(field_mutable_list:ServerMSG.ServiceCmd.cmds)
  return &cmds_;
}

inline const ServiceCmd* ServiceCmd::internal_default_instance() {
  return &ServiceCmd_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceHttpRequest::kUidFieldNumber;
const int ServiceHttpRequest::kKvmapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceHttpRequest::ServiceHttpRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.ServiceHttpRequest)
}

void ServiceHttpRequest::InitAsDefaultInstance() {
}

ServiceHttpRequest::ServiceHttpRequest(const ServiceHttpRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.ServiceHttpRequest)
}

void ServiceHttpRequest::SharedCtor() {
  kvmap_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  kvmap_.SetEntryDescriptor(
      &::ServerMSG::ServiceHttpRequest_KvmapEntry_descriptor_);
  uid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ServiceHttpRequest::~ServiceHttpRequest() {
  // @@protoc_insertion_point(destructor:ServerMSG.ServiceHttpRequest)
  SharedDtor();
}

void ServiceHttpRequest::SharedDtor() {
}

void ServiceHttpRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceHttpRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceHttpRequest_descriptor_;
}

const ServiceHttpRequest& ServiceHttpRequest::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ServiceHttpRequest> ServiceHttpRequest_default_instance_;

ServiceHttpRequest* ServiceHttpRequest::New(::google::protobuf::Arena* arena) const {
  ServiceHttpRequest* n = new ServiceHttpRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceHttpRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.ServiceHttpRequest)
  uid_ = GOOGLE_ULONGLONG(0);
  kvmap_.Clear();
}

bool ServiceHttpRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.ServiceHttpRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 uid = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_kvmap;
        break;
      }

      // map<string, string> kvmap = 2;
      case 2: {
        if (tag == 18) {
         parse_kvmap:
          DO_(input->IncrementRecursionDepth());
         parse_loop_kvmap:
          ServiceHttpRequest_KvmapEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&kvmap_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerMSG.ServiceHttpRequest.KvmapEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerMSG.ServiceHttpRequest.KvmapEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_kvmap;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.ServiceHttpRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.ServiceHttpRequest)
  return false;
#undef DO_
}

void ServiceHttpRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.ServiceHttpRequest)
  // optional uint64 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // map<string, string> kvmap = 2;
  if (!this->kvmap().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ServerMSG.ServiceHttpRequest.KvmapEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ServerMSG.ServiceHttpRequest.KvmapEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->kvmap().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->kvmap().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kvmap().begin();
          it != this->kvmap().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<ServiceHttpRequest_KvmapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(kvmap_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ServiceHttpRequest_KvmapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kvmap().begin();
          it != this->kvmap().end(); ++it) {
        entry.reset(kvmap_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.ServiceHttpRequest)
}

::google::protobuf::uint8* ServiceHttpRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.ServiceHttpRequest)
  // optional uint64 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // map<string, string> kvmap = 2;
  if (!this->kvmap().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ServerMSG.ServiceHttpRequest.KvmapEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ServerMSG.ServiceHttpRequest.KvmapEntry.value");
      }
    };

    if (deterministic &&
        this->kvmap().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->kvmap().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kvmap().begin();
          it != this->kvmap().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<ServiceHttpRequest_KvmapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(kvmap_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ServiceHttpRequest_KvmapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->kvmap().begin();
          it != this->kvmap().end(); ++it) {
        entry.reset(kvmap_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.ServiceHttpRequest)
  return target;
}

size_t ServiceHttpRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.ServiceHttpRequest)
  size_t total_size = 0;

  // optional uint64 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  // map<string, string> kvmap = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->kvmap_size());
  {
    ::google::protobuf::scoped_ptr<ServiceHttpRequest_KvmapEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->kvmap().begin();
        it != this->kvmap().end(); ++it) {
      entry.reset(kvmap_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceHttpRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.ServiceHttpRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServiceHttpRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceHttpRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.ServiceHttpRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.ServiceHttpRequest)
    UnsafeMergeFrom(*source);
  }
}

void ServiceHttpRequest::MergeFrom(const ServiceHttpRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.ServiceHttpRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ServiceHttpRequest::UnsafeMergeFrom(const ServiceHttpRequest& from) {
  GOOGLE_DCHECK(&from != this);
  kvmap_.MergeFrom(from.kvmap_);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void ServiceHttpRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.ServiceHttpRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceHttpRequest::CopyFrom(const ServiceHttpRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.ServiceHttpRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ServiceHttpRequest::IsInitialized() const {

  return true;
}

void ServiceHttpRequest::Swap(ServiceHttpRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceHttpRequest::InternalSwap(ServiceHttpRequest* other) {
  std::swap(uid_, other->uid_);
  kvmap_.Swap(&other->kvmap_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceHttpRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceHttpRequest_descriptor_;
  metadata.reflection = ServiceHttpRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServiceHttpRequest

// optional uint64 uid = 1;
void ServiceHttpRequest::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServiceHttpRequest::uid() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceHttpRequest.uid)
  return uid_;
}
void ServiceHttpRequest::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceHttpRequest.uid)
}

// map<string, string> kvmap = 2;
int ServiceHttpRequest::kvmap_size() const {
  return kvmap_.size();
}
void ServiceHttpRequest::clear_kvmap() {
  kvmap_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
ServiceHttpRequest::kvmap() const {
  // @@protoc_insertion_point(field_map:ServerMSG.ServiceHttpRequest.kvmap)
  return kvmap_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
ServiceHttpRequest::mutable_kvmap() {
  // @@protoc_insertion_point(field_mutable_map:ServerMSG.ServiceHttpRequest.kvmap)
  return kvmap_.MutableMap();
}

inline const ServiceHttpRequest* ServiceHttpRequest::internal_default_instance() {
  return &ServiceHttpRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceHttpResponse::kUidFieldNumber;
const int ServiceHttpResponse::kResponseCodeFieldNumber;
const int ServiceHttpResponse::kResponseReasonFieldNumber;
const int ServiceHttpResponse::kResponseTxtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceHttpResponse::ServiceHttpResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.ServiceHttpResponse)
}

void ServiceHttpResponse::InitAsDefaultInstance() {
}

ServiceHttpResponse::ServiceHttpResponse(const ServiceHttpResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.ServiceHttpResponse)
}

void ServiceHttpResponse::SharedCtor() {
  response_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_txt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, reinterpret_cast<char*>(&response_code_) -
    reinterpret_cast<char*>(&uid_) + sizeof(response_code_));
  _cached_size_ = 0;
}

ServiceHttpResponse::~ServiceHttpResponse() {
  // @@protoc_insertion_point(destructor:ServerMSG.ServiceHttpResponse)
  SharedDtor();
}

void ServiceHttpResponse::SharedDtor() {
  response_reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_txt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceHttpResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceHttpResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceHttpResponse_descriptor_;
}

const ServiceHttpResponse& ServiceHttpResponse::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ServiceHttpResponse> ServiceHttpResponse_default_instance_;

ServiceHttpResponse* ServiceHttpResponse::New(::google::protobuf::Arena* arena) const {
  ServiceHttpResponse* n = new ServiceHttpResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceHttpResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.ServiceHttpResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ServiceHttpResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ServiceHttpResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uid_, response_code_);
  response_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_txt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ServiceHttpResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.ServiceHttpResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 uid = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_response_code;
        break;
      }

      // optional int32 response_code = 2;
      case 2: {
        if (tag == 16) {
         parse_response_code:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_code_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_response_reason;
        break;
      }

      // optional string response_reason = 3;
      case 3: {
        if (tag == 26) {
         parse_response_reason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_reason().data(), this->response_reason().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerMSG.ServiceHttpResponse.response_reason"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_response_txt;
        break;
      }

      // optional bytes response_txt = 4;
      case 4: {
        if (tag == 34) {
         parse_response_txt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_response_txt()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.ServiceHttpResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.ServiceHttpResponse)
  return false;
#undef DO_
}

void ServiceHttpResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.ServiceHttpResponse)
  // optional uint64 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // optional int32 response_code = 2;
  if (this->response_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->response_code(), output);
  }

  // optional string response_reason = 3;
  if (this->response_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_reason().data(), this->response_reason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerMSG.ServiceHttpResponse.response_reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->response_reason(), output);
  }

  // optional bytes response_txt = 4;
  if (this->response_txt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->response_txt(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.ServiceHttpResponse)
}

::google::protobuf::uint8* ServiceHttpResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.ServiceHttpResponse)
  // optional uint64 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // optional int32 response_code = 2;
  if (this->response_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->response_code(), target);
  }

  // optional string response_reason = 3;
  if (this->response_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_reason().data(), this->response_reason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerMSG.ServiceHttpResponse.response_reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->response_reason(), target);
  }

  // optional bytes response_txt = 4;
  if (this->response_txt().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->response_txt(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.ServiceHttpResponse)
  return target;
}

size_t ServiceHttpResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.ServiceHttpResponse)
  size_t total_size = 0;

  // optional uint64 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  // optional int32 response_code = 2;
  if (this->response_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->response_code());
  }

  // optional string response_reason = 3;
  if (this->response_reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_reason());
  }

  // optional bytes response_txt = 4;
  if (this->response_txt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->response_txt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceHttpResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.ServiceHttpResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServiceHttpResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceHttpResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.ServiceHttpResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.ServiceHttpResponse)
    UnsafeMergeFrom(*source);
  }
}

void ServiceHttpResponse::MergeFrom(const ServiceHttpResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.ServiceHttpResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ServiceHttpResponse::UnsafeMergeFrom(const ServiceHttpResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.response_code() != 0) {
    set_response_code(from.response_code());
  }
  if (from.response_reason().size() > 0) {

    response_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_reason_);
  }
  if (from.response_txt().size() > 0) {

    response_txt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_txt_);
  }
}

void ServiceHttpResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.ServiceHttpResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceHttpResponse::CopyFrom(const ServiceHttpResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.ServiceHttpResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ServiceHttpResponse::IsInitialized() const {

  return true;
}

void ServiceHttpResponse::Swap(ServiceHttpResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceHttpResponse::InternalSwap(ServiceHttpResponse* other) {
  std::swap(uid_, other->uid_);
  std::swap(response_code_, other->response_code_);
  response_reason_.Swap(&other->response_reason_);
  response_txt_.Swap(&other->response_txt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceHttpResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceHttpResponse_descriptor_;
  metadata.reflection = ServiceHttpResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServiceHttpResponse

// optional uint64 uid = 1;
void ServiceHttpResponse::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServiceHttpResponse::uid() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceHttpResponse.uid)
  return uid_;
}
void ServiceHttpResponse::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceHttpResponse.uid)
}

// optional int32 response_code = 2;
void ServiceHttpResponse::clear_response_code() {
  response_code_ = 0;
}
::google::protobuf::int32 ServiceHttpResponse::response_code() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceHttpResponse.response_code)
  return response_code_;
}
void ServiceHttpResponse::set_response_code(::google::protobuf::int32 value) {
  
  response_code_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceHttpResponse.response_code)
}

// optional string response_reason = 3;
void ServiceHttpResponse::clear_response_reason() {
  response_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServiceHttpResponse::response_reason() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceHttpResponse.response_reason)
  return response_reason_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceHttpResponse::set_response_reason(const ::std::string& value) {
  
  response_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceHttpResponse.response_reason)
}
void ServiceHttpResponse::set_response_reason(const char* value) {
  
  response_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.ServiceHttpResponse.response_reason)
}
void ServiceHttpResponse::set_response_reason(const char* value, size_t size) {
  
  response_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.ServiceHttpResponse.response_reason)
}
::std::string* ServiceHttpResponse::mutable_response_reason() {
  
  // @@protoc_insertion_point(field_mutable:ServerMSG.ServiceHttpResponse.response_reason)
  return response_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServiceHttpResponse::release_response_reason() {
  // @@protoc_insertion_point(field_release:ServerMSG.ServiceHttpResponse.response_reason)
  
  return response_reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceHttpResponse::set_allocated_response_reason(::std::string* response_reason) {
  if (response_reason != NULL) {
    
  } else {
    
  }
  response_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_reason);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.ServiceHttpResponse.response_reason)
}

// optional bytes response_txt = 4;
void ServiceHttpResponse::clear_response_txt() {
  response_txt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServiceHttpResponse::response_txt() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceHttpResponse.response_txt)
  return response_txt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceHttpResponse::set_response_txt(const ::std::string& value) {
  
  response_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceHttpResponse.response_txt)
}
void ServiceHttpResponse::set_response_txt(const char* value) {
  
  response_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.ServiceHttpResponse.response_txt)
}
void ServiceHttpResponse::set_response_txt(const void* value, size_t size) {
  
  response_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.ServiceHttpResponse.response_txt)
}
::std::string* ServiceHttpResponse::mutable_response_txt() {
  
  // @@protoc_insertion_point(field_mutable:ServerMSG.ServiceHttpResponse.response_txt)
  return response_txt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServiceHttpResponse::release_response_txt() {
  // @@protoc_insertion_point(field_release:ServerMSG.ServiceHttpResponse.response_txt)
  
  return response_txt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServiceHttpResponse::set_allocated_response_txt(::std::string* response_txt) {
  if (response_txt != NULL) {
    
  } else {
    
  }
  response_txt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_txt);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.ServiceHttpResponse.response_txt)
}

inline const ServiceHttpResponse* ServiceHttpResponse::internal_default_instance() {
  return &ServiceHttpResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceReady::kServerportFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceReady::ServiceReady()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.ServiceReady)
}

void ServiceReady::InitAsDefaultInstance() {
}

ServiceReady::ServiceReady(const ServiceReady& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.ServiceReady)
}

void ServiceReady::SharedCtor() {
  serverport_ = 0u;
  _cached_size_ = 0;
}

ServiceReady::~ServiceReady() {
  // @@protoc_insertion_point(destructor:ServerMSG.ServiceReady)
  SharedDtor();
}

void ServiceReady::SharedDtor() {
}

void ServiceReady::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServiceReady::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceReady_descriptor_;
}

const ServiceReady& ServiceReady::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ServiceReady> ServiceReady_default_instance_;

ServiceReady* ServiceReady::New(::google::protobuf::Arena* arena) const {
  ServiceReady* n = new ServiceReady;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServiceReady::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.ServiceReady)
  serverport_ = 0u;
}

bool ServiceReady::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.ServiceReady)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 serverport = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serverport_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.ServiceReady)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.ServiceReady)
  return false;
#undef DO_
}

void ServiceReady::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.ServiceReady)
  // optional uint32 serverport = 1;
  if (this->serverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->serverport(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.ServiceReady)
}

::google::protobuf::uint8* ServiceReady::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.ServiceReady)
  // optional uint32 serverport = 1;
  if (this->serverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->serverport(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.ServiceReady)
  return target;
}

size_t ServiceReady::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.ServiceReady)
  size_t total_size = 0;

  // optional uint32 serverport = 1;
  if (this->serverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serverport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServiceReady::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.ServiceReady)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ServiceReady* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceReady>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.ServiceReady)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.ServiceReady)
    UnsafeMergeFrom(*source);
  }
}

void ServiceReady::MergeFrom(const ServiceReady& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.ServiceReady)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ServiceReady::UnsafeMergeFrom(const ServiceReady& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.serverport() != 0) {
    set_serverport(from.serverport());
  }
}

void ServiceReady::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.ServiceReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceReady::CopyFrom(const ServiceReady& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.ServiceReady)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ServiceReady::IsInitialized() const {

  return true;
}

void ServiceReady::Swap(ServiceReady* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceReady::InternalSwap(ServiceReady* other) {
  std::swap(serverport_, other->serverport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServiceReady::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServiceReady_descriptor_;
  metadata.reflection = ServiceReady_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServiceReady

// optional uint32 serverport = 1;
void ServiceReady::clear_serverport() {
  serverport_ = 0u;
}
::google::protobuf::uint32 ServiceReady::serverport() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceReady.serverport)
  return serverport_;
}
void ServiceReady::set_serverport(::google::protobuf::uint32 value) {
  
  serverport_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceReady.serverport)
}

inline const ServiceReady* ServiceReady::internal_default_instance() {
  return &ServiceReady_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerEnterZone::kIdplayerFieldNumber;
const int PlayerEnterZone::kSocketFieldNumber;
const int PlayerEnterZone::kIdsceneFieldNumber;
const int PlayerEnterZone::kPosxFieldNumber;
const int PlayerEnterZone::kPosyFieldNumber;
const int PlayerEnterZone::kFaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerEnterZone::PlayerEnterZone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.PlayerEnterZone)
}

void PlayerEnterZone::InitAsDefaultInstance() {
}

PlayerEnterZone::PlayerEnterZone(const PlayerEnterZone& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.PlayerEnterZone)
}

void PlayerEnterZone::SharedCtor() {
  ::memset(&idplayer_, 0, reinterpret_cast<char*>(&face_) -
    reinterpret_cast<char*>(&idplayer_) + sizeof(face_));
  _cached_size_ = 0;
}

PlayerEnterZone::~PlayerEnterZone() {
  // @@protoc_insertion_point(destructor:ServerMSG.PlayerEnterZone)
  SharedDtor();
}

void PlayerEnterZone::SharedDtor() {
}

void PlayerEnterZone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerEnterZone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerEnterZone_descriptor_;
}

const PlayerEnterZone& PlayerEnterZone::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PlayerEnterZone> PlayerEnterZone_default_instance_;

PlayerEnterZone* PlayerEnterZone::New(::google::protobuf::Arena* arena) const {
  PlayerEnterZone* n = new PlayerEnterZone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerEnterZone::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.PlayerEnterZone)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PlayerEnterZone, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PlayerEnterZone*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(idplayer_, face_);

#undef ZR_HELPER_
#undef ZR_

}

bool PlayerEnterZone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.PlayerEnterZone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 idplayer = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idplayer_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_socket;
        break;
      }

      // optional uint64 socket = 2;
      case 2: {
        if (tag == 16) {
         parse_socket:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &socket_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_idscene;
        break;
      }

      // optional uint64 idscene = 3;
      case 3: {
        if (tag == 24) {
         parse_idscene:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idscene_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_posx;
        break;
      }

      // optional float posx = 4;
      case 4: {
        if (tag == 37) {
         parse_posx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_posy;
        break;
      }

      // optional float posy = 5;
      case 5: {
        if (tag == 45) {
         parse_posy:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_face;
        break;
      }

      // optional float face = 6;
      case 6: {
        if (tag == 53) {
         parse_face:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &face_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.PlayerEnterZone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.PlayerEnterZone)
  return false;
#undef DO_
}

void PlayerEnterZone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.PlayerEnterZone)
  // optional uint64 idplayer = 1;
  if (this->idplayer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->idplayer(), output);
  }

  // optional uint64 socket = 2;
  if (this->socket() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->socket(), output);
  }

  // optional uint64 idscene = 3;
  if (this->idscene() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->idscene(), output);
  }

  // optional float posx = 4;
  if (this->posx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->posx(), output);
  }

  // optional float posy = 5;
  if (this->posy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->posy(), output);
  }

  // optional float face = 6;
  if (this->face() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->face(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.PlayerEnterZone)
}

::google::protobuf::uint8* PlayerEnterZone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.PlayerEnterZone)
  // optional uint64 idplayer = 1;
  if (this->idplayer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->idplayer(), target);
  }

  // optional uint64 socket = 2;
  if (this->socket() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->socket(), target);
  }

  // optional uint64 idscene = 3;
  if (this->idscene() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->idscene(), target);
  }

  // optional float posx = 4;
  if (this->posx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->posx(), target);
  }

  // optional float posy = 5;
  if (this->posy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->posy(), target);
  }

  // optional float face = 6;
  if (this->face() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->face(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.PlayerEnterZone)
  return target;
}

size_t PlayerEnterZone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.PlayerEnterZone)
  size_t total_size = 0;

  // optional uint64 idplayer = 1;
  if (this->idplayer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->idplayer());
  }

  // optional uint64 socket = 2;
  if (this->socket() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->socket());
  }

  // optional uint64 idscene = 3;
  if (this->idscene() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->idscene());
  }

  // optional float posx = 4;
  if (this->posx() != 0) {
    total_size += 1 + 4;
  }

  // optional float posy = 5;
  if (this->posy() != 0) {
    total_size += 1 + 4;
  }

  // optional float face = 6;
  if (this->face() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerEnterZone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.PlayerEnterZone)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PlayerEnterZone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerEnterZone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.PlayerEnterZone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.PlayerEnterZone)
    UnsafeMergeFrom(*source);
  }
}

void PlayerEnterZone::MergeFrom(const PlayerEnterZone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.PlayerEnterZone)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PlayerEnterZone::UnsafeMergeFrom(const PlayerEnterZone& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.idplayer() != 0) {
    set_idplayer(from.idplayer());
  }
  if (from.socket() != 0) {
    set_socket(from.socket());
  }
  if (from.idscene() != 0) {
    set_idscene(from.idscene());
  }
  if (from.posx() != 0) {
    set_posx(from.posx());
  }
  if (from.posy() != 0) {
    set_posy(from.posy());
  }
  if (from.face() != 0) {
    set_face(from.face());
  }
}

void PlayerEnterZone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.PlayerEnterZone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerEnterZone::CopyFrom(const PlayerEnterZone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.PlayerEnterZone)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PlayerEnterZone::IsInitialized() const {

  return true;
}

void PlayerEnterZone::Swap(PlayerEnterZone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerEnterZone::InternalSwap(PlayerEnterZone* other) {
  std::swap(idplayer_, other->idplayer_);
  std::swap(socket_, other->socket_);
  std::swap(idscene_, other->idscene_);
  std::swap(posx_, other->posx_);
  std::swap(posy_, other->posy_);
  std::swap(face_, other->face_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerEnterZone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerEnterZone_descriptor_;
  metadata.reflection = PlayerEnterZone_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerEnterZone

// optional uint64 idplayer = 1;
void PlayerEnterZone::clear_idplayer() {
  idplayer_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerEnterZone::idplayer() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerEnterZone.idplayer)
  return idplayer_;
}
void PlayerEnterZone::set_idplayer(::google::protobuf::uint64 value) {
  
  idplayer_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerEnterZone.idplayer)
}

// optional uint64 socket = 2;
void PlayerEnterZone::clear_socket() {
  socket_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerEnterZone::socket() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerEnterZone.socket)
  return socket_;
}
void PlayerEnterZone::set_socket(::google::protobuf::uint64 value) {
  
  socket_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerEnterZone.socket)
}

// optional uint64 idscene = 3;
void PlayerEnterZone::clear_idscene() {
  idscene_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerEnterZone::idscene() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerEnterZone.idscene)
  return idscene_;
}
void PlayerEnterZone::set_idscene(::google::protobuf::uint64 value) {
  
  idscene_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerEnterZone.idscene)
}

// optional float posx = 4;
void PlayerEnterZone::clear_posx() {
  posx_ = 0;
}
float PlayerEnterZone::posx() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerEnterZone.posx)
  return posx_;
}
void PlayerEnterZone::set_posx(float value) {
  
  posx_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerEnterZone.posx)
}

// optional float posy = 5;
void PlayerEnterZone::clear_posy() {
  posy_ = 0;
}
float PlayerEnterZone::posy() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerEnterZone.posy)
  return posy_;
}
void PlayerEnterZone::set_posy(float value) {
  
  posy_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerEnterZone.posy)
}

// optional float face = 6;
void PlayerEnterZone::clear_face() {
  face_ = 0;
}
float PlayerEnterZone::face() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerEnterZone.face)
  return face_;
}
void PlayerEnterZone::set_face(float value) {
  
  face_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerEnterZone.face)
}

inline const PlayerEnterZone* PlayerEnterZone::internal_default_instance() {
  return &PlayerEnterZone_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerChangeZone::kIdplayerFieldNumber;
const int PlayerChangeZone::kSocketFieldNumber;
const int PlayerChangeZone::kIdzoneFieldNumber;
const int PlayerChangeZone::kIdsceneFieldNumber;
const int PlayerChangeZone::kPosxFieldNumber;
const int PlayerChangeZone::kPosyFieldNumber;
const int PlayerChangeZone::kRangeFieldNumber;
const int PlayerChangeZone::kFaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerChangeZone::PlayerChangeZone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.PlayerChangeZone)
}

void PlayerChangeZone::InitAsDefaultInstance() {
}

PlayerChangeZone::PlayerChangeZone(const PlayerChangeZone& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.PlayerChangeZone)
}

void PlayerChangeZone::SharedCtor() {
  ::memset(&idplayer_, 0, reinterpret_cast<char*>(&face_) -
    reinterpret_cast<char*>(&idplayer_) + sizeof(face_));
  _cached_size_ = 0;
}

PlayerChangeZone::~PlayerChangeZone() {
  // @@protoc_insertion_point(destructor:ServerMSG.PlayerChangeZone)
  SharedDtor();
}

void PlayerChangeZone::SharedDtor() {
}

void PlayerChangeZone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerChangeZone::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerChangeZone_descriptor_;
}

const PlayerChangeZone& PlayerChangeZone::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PlayerChangeZone> PlayerChangeZone_default_instance_;

PlayerChangeZone* PlayerChangeZone::New(::google::protobuf::Arena* arena) const {
  PlayerChangeZone* n = new PlayerChangeZone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerChangeZone::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.PlayerChangeZone)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PlayerChangeZone, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PlayerChangeZone*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(idplayer_, face_);

#undef ZR_HELPER_
#undef ZR_

}

bool PlayerChangeZone::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.PlayerChangeZone)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 idplayer = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idplayer_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_socket;
        break;
      }

      // optional uint64 socket = 2;
      case 2: {
        if (tag == 16) {
         parse_socket:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &socket_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_idzone;
        break;
      }

      // optional uint32 idzone = 3;
      case 3: {
        if (tag == 24) {
         parse_idzone:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idzone_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_idscene;
        break;
      }

      // optional uint64 idscene = 4;
      case 4: {
        if (tag == 32) {
         parse_idscene:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idscene_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_posx;
        break;
      }

      // optional float posx = 5;
      case 5: {
        if (tag == 45) {
         parse_posx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_posy;
        break;
      }

      // optional float posy = 6;
      case 6: {
        if (tag == 53) {
         parse_posy:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_range;
        break;
      }

      // optional float range = 7;
      case 7: {
        if (tag == 61) {
         parse_range:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_face;
        break;
      }

      // optional float face = 8;
      case 8: {
        if (tag == 69) {
         parse_face:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &face_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.PlayerChangeZone)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.PlayerChangeZone)
  return false;
#undef DO_
}

void PlayerChangeZone::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.PlayerChangeZone)
  // optional uint64 idplayer = 1;
  if (this->idplayer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->idplayer(), output);
  }

  // optional uint64 socket = 2;
  if (this->socket() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->socket(), output);
  }

  // optional uint32 idzone = 3;
  if (this->idzone() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->idzone(), output);
  }

  // optional uint64 idscene = 4;
  if (this->idscene() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->idscene(), output);
  }

  // optional float posx = 5;
  if (this->posx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->posx(), output);
  }

  // optional float posy = 6;
  if (this->posy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->posy(), output);
  }

  // optional float range = 7;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->range(), output);
  }

  // optional float face = 8;
  if (this->face() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->face(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.PlayerChangeZone)
}

::google::protobuf::uint8* PlayerChangeZone::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.PlayerChangeZone)
  // optional uint64 idplayer = 1;
  if (this->idplayer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->idplayer(), target);
  }

  // optional uint64 socket = 2;
  if (this->socket() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->socket(), target);
  }

  // optional uint32 idzone = 3;
  if (this->idzone() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->idzone(), target);
  }

  // optional uint64 idscene = 4;
  if (this->idscene() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->idscene(), target);
  }

  // optional float posx = 5;
  if (this->posx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->posx(), target);
  }

  // optional float posy = 6;
  if (this->posy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->posy(), target);
  }

  // optional float range = 7;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->range(), target);
  }

  // optional float face = 8;
  if (this->face() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->face(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.PlayerChangeZone)
  return target;
}

size_t PlayerChangeZone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.PlayerChangeZone)
  size_t total_size = 0;

  // optional uint64 idplayer = 1;
  if (this->idplayer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->idplayer());
  }

  // optional uint64 socket = 2;
  if (this->socket() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->socket());
  }

  // optional uint32 idzone = 3;
  if (this->idzone() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->idzone());
  }

  // optional uint64 idscene = 4;
  if (this->idscene() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->idscene());
  }

  // optional float posx = 5;
  if (this->posx() != 0) {
    total_size += 1 + 4;
  }

  // optional float posy = 6;
  if (this->posy() != 0) {
    total_size += 1 + 4;
  }

  // optional float range = 7;
  if (this->range() != 0) {
    total_size += 1 + 4;
  }

  // optional float face = 8;
  if (this->face() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerChangeZone::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.PlayerChangeZone)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PlayerChangeZone* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerChangeZone>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.PlayerChangeZone)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.PlayerChangeZone)
    UnsafeMergeFrom(*source);
  }
}

void PlayerChangeZone::MergeFrom(const PlayerChangeZone& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.PlayerChangeZone)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PlayerChangeZone::UnsafeMergeFrom(const PlayerChangeZone& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.idplayer() != 0) {
    set_idplayer(from.idplayer());
  }
  if (from.socket() != 0) {
    set_socket(from.socket());
  }
  if (from.idzone() != 0) {
    set_idzone(from.idzone());
  }
  if (from.idscene() != 0) {
    set_idscene(from.idscene());
  }
  if (from.posx() != 0) {
    set_posx(from.posx());
  }
  if (from.posy() != 0) {
    set_posy(from.posy());
  }
  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.face() != 0) {
    set_face(from.face());
  }
}

void PlayerChangeZone::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.PlayerChangeZone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerChangeZone::CopyFrom(const PlayerChangeZone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.PlayerChangeZone)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PlayerChangeZone::IsInitialized() const {

  return true;
}

void PlayerChangeZone::Swap(PlayerChangeZone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerChangeZone::InternalSwap(PlayerChangeZone* other) {
  std::swap(idplayer_, other->idplayer_);
  std::swap(socket_, other->socket_);
  std::swap(idzone_, other->idzone_);
  std::swap(idscene_, other->idscene_);
  std::swap(posx_, other->posx_);
  std::swap(posy_, other->posy_);
  std::swap(range_, other->range_);
  std::swap(face_, other->face_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerChangeZone::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerChangeZone_descriptor_;
  metadata.reflection = PlayerChangeZone_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerChangeZone

// optional uint64 idplayer = 1;
void PlayerChangeZone::clear_idplayer() {
  idplayer_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerChangeZone::idplayer() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.idplayer)
  return idplayer_;
}
void PlayerChangeZone::set_idplayer(::google::protobuf::uint64 value) {
  
  idplayer_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.idplayer)
}

// optional uint64 socket = 2;
void PlayerChangeZone::clear_socket() {
  socket_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerChangeZone::socket() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.socket)
  return socket_;
}
void PlayerChangeZone::set_socket(::google::protobuf::uint64 value) {
  
  socket_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.socket)
}

// optional uint32 idzone = 3;
void PlayerChangeZone::clear_idzone() {
  idzone_ = 0u;
}
::google::protobuf::uint32 PlayerChangeZone::idzone() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.idzone)
  return idzone_;
}
void PlayerChangeZone::set_idzone(::google::protobuf::uint32 value) {
  
  idzone_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.idzone)
}

// optional uint64 idscene = 4;
void PlayerChangeZone::clear_idscene() {
  idscene_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerChangeZone::idscene() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.idscene)
  return idscene_;
}
void PlayerChangeZone::set_idscene(::google::protobuf::uint64 value) {
  
  idscene_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.idscene)
}

// optional float posx = 5;
void PlayerChangeZone::clear_posx() {
  posx_ = 0;
}
float PlayerChangeZone::posx() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.posx)
  return posx_;
}
void PlayerChangeZone::set_posx(float value) {
  
  posx_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.posx)
}

// optional float posy = 6;
void PlayerChangeZone::clear_posy() {
  posy_ = 0;
}
float PlayerChangeZone::posy() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.posy)
  return posy_;
}
void PlayerChangeZone::set_posy(float value) {
  
  posy_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.posy)
}

// optional float range = 7;
void PlayerChangeZone::clear_range() {
  range_ = 0;
}
float PlayerChangeZone::range() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.range)
  return range_;
}
void PlayerChangeZone::set_range(float value) {
  
  range_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.range)
}

// optional float face = 8;
void PlayerChangeZone::clear_face() {
  face_ = 0;
}
float PlayerChangeZone::face() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.face)
  return face_;
}
void PlayerChangeZone::set_face(float value) {
  
  face_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.face)
}

inline const PlayerChangeZone* PlayerChangeZone::internal_default_instance() {
  return &PlayerChangeZone_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerChangeZone_Data::kIdplayerFieldNumber;
const int PlayerChangeZone_Data::kSocketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerChangeZone_Data::PlayerChangeZone_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.PlayerChangeZone_Data)
}

void PlayerChangeZone_Data::InitAsDefaultInstance() {
}

PlayerChangeZone_Data::PlayerChangeZone_Data(const PlayerChangeZone_Data& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.PlayerChangeZone_Data)
}

void PlayerChangeZone_Data::SharedCtor() {
  ::memset(&idplayer_, 0, reinterpret_cast<char*>(&socket_) -
    reinterpret_cast<char*>(&idplayer_) + sizeof(socket_));
  _cached_size_ = 0;
}

PlayerChangeZone_Data::~PlayerChangeZone_Data() {
  // @@protoc_insertion_point(destructor:ServerMSG.PlayerChangeZone_Data)
  SharedDtor();
}

void PlayerChangeZone_Data::SharedDtor() {
}

void PlayerChangeZone_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerChangeZone_Data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerChangeZone_Data_descriptor_;
}

const PlayerChangeZone_Data& PlayerChangeZone_Data::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PlayerChangeZone_Data> PlayerChangeZone_Data_default_instance_;

PlayerChangeZone_Data* PlayerChangeZone_Data::New(::google::protobuf::Arena* arena) const {
  PlayerChangeZone_Data* n = new PlayerChangeZone_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerChangeZone_Data::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.PlayerChangeZone_Data)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PlayerChangeZone_Data, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PlayerChangeZone_Data*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(idplayer_, socket_);

#undef ZR_HELPER_
#undef ZR_

}

bool PlayerChangeZone_Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.PlayerChangeZone_Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 idplayer = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idplayer_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_socket;
        break;
      }

      // optional uint64 socket = 2;
      case 2: {
        if (tag == 16) {
         parse_socket:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &socket_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.PlayerChangeZone_Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.PlayerChangeZone_Data)
  return false;
#undef DO_
}

void PlayerChangeZone_Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.PlayerChangeZone_Data)
  // optional uint64 idplayer = 1;
  if (this->idplayer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->idplayer(), output);
  }

  // optional uint64 socket = 2;
  if (this->socket() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->socket(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.PlayerChangeZone_Data)
}

::google::protobuf::uint8* PlayerChangeZone_Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.PlayerChangeZone_Data)
  // optional uint64 idplayer = 1;
  if (this->idplayer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->idplayer(), target);
  }

  // optional uint64 socket = 2;
  if (this->socket() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->socket(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.PlayerChangeZone_Data)
  return target;
}

size_t PlayerChangeZone_Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.PlayerChangeZone_Data)
  size_t total_size = 0;

  // optional uint64 idplayer = 1;
  if (this->idplayer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->idplayer());
  }

  // optional uint64 socket = 2;
  if (this->socket() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->socket());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerChangeZone_Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.PlayerChangeZone_Data)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PlayerChangeZone_Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerChangeZone_Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.PlayerChangeZone_Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.PlayerChangeZone_Data)
    UnsafeMergeFrom(*source);
  }
}

void PlayerChangeZone_Data::MergeFrom(const PlayerChangeZone_Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.PlayerChangeZone_Data)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PlayerChangeZone_Data::UnsafeMergeFrom(const PlayerChangeZone_Data& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.idplayer() != 0) {
    set_idplayer(from.idplayer());
  }
  if (from.socket() != 0) {
    set_socket(from.socket());
  }
}

void PlayerChangeZone_Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.PlayerChangeZone_Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerChangeZone_Data::CopyFrom(const PlayerChangeZone_Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.PlayerChangeZone_Data)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PlayerChangeZone_Data::IsInitialized() const {

  return true;
}

void PlayerChangeZone_Data::Swap(PlayerChangeZone_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerChangeZone_Data::InternalSwap(PlayerChangeZone_Data* other) {
  std::swap(idplayer_, other->idplayer_);
  std::swap(socket_, other->socket_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerChangeZone_Data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerChangeZone_Data_descriptor_;
  metadata.reflection = PlayerChangeZone_Data_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerChangeZone_Data

// optional uint64 idplayer = 1;
void PlayerChangeZone_Data::clear_idplayer() {
  idplayer_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerChangeZone_Data::idplayer() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone_Data.idplayer)
  return idplayer_;
}
void PlayerChangeZone_Data::set_idplayer(::google::protobuf::uint64 value) {
  
  idplayer_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone_Data.idplayer)
}

// optional uint64 socket = 2;
void PlayerChangeZone_Data::clear_socket() {
  socket_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerChangeZone_Data::socket() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone_Data.socket)
  return socket_;
}
void PlayerChangeZone_Data::set_socket(::google::protobuf::uint64 value) {
  
  socket_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone_Data.socket)
}

inline const PlayerChangeZone_Data* PlayerChangeZone_Data::internal_default_instance() {
  return &PlayerChangeZone_Data_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLogout::kIdplayerFieldNumber;
const int PlayerLogout::kSocketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLogout::PlayerLogout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.PlayerLogout)
}

void PlayerLogout::InitAsDefaultInstance() {
}

PlayerLogout::PlayerLogout(const PlayerLogout& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.PlayerLogout)
}

void PlayerLogout::SharedCtor() {
  ::memset(&idplayer_, 0, reinterpret_cast<char*>(&socket_) -
    reinterpret_cast<char*>(&idplayer_) + sizeof(socket_));
  _cached_size_ = 0;
}

PlayerLogout::~PlayerLogout() {
  // @@protoc_insertion_point(destructor:ServerMSG.PlayerLogout)
  SharedDtor();
}

void PlayerLogout::SharedDtor() {
}

void PlayerLogout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLogout::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerLogout_descriptor_;
}

const PlayerLogout& PlayerLogout::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PlayerLogout> PlayerLogout_default_instance_;

PlayerLogout* PlayerLogout::New(::google::protobuf::Arena* arena) const {
  PlayerLogout* n = new PlayerLogout;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLogout::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.PlayerLogout)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PlayerLogout, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PlayerLogout*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(idplayer_, socket_);

#undef ZR_HELPER_
#undef ZR_

}

bool PlayerLogout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.PlayerLogout)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 idplayer = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &idplayer_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_socket;
        break;
      }

      // optional uint64 socket = 2;
      case 2: {
        if (tag == 16) {
         parse_socket:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &socket_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.PlayerLogout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.PlayerLogout)
  return false;
#undef DO_
}

void PlayerLogout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.PlayerLogout)
  // optional uint64 idplayer = 1;
  if (this->idplayer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->idplayer(), output);
  }

  // optional uint64 socket = 2;
  if (this->socket() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->socket(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.PlayerLogout)
}

::google::protobuf::uint8* PlayerLogout::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.PlayerLogout)
  // optional uint64 idplayer = 1;
  if (this->idplayer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->idplayer(), target);
  }

  // optional uint64 socket = 2;
  if (this->socket() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->socket(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.PlayerLogout)
  return target;
}

size_t PlayerLogout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.PlayerLogout)
  size_t total_size = 0;

  // optional uint64 idplayer = 1;
  if (this->idplayer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->idplayer());
  }

  // optional uint64 socket = 2;
  if (this->socket() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->socket());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLogout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.PlayerLogout)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PlayerLogout* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLogout>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.PlayerLogout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.PlayerLogout)
    UnsafeMergeFrom(*source);
  }
}

void PlayerLogout::MergeFrom(const PlayerLogout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.PlayerLogout)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PlayerLogout::UnsafeMergeFrom(const PlayerLogout& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.idplayer() != 0) {
    set_idplayer(from.idplayer());
  }
  if (from.socket() != 0) {
    set_socket(from.socket());
  }
}

void PlayerLogout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.PlayerLogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLogout::CopyFrom(const PlayerLogout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.PlayerLogout)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PlayerLogout::IsInitialized() const {

  return true;
}

void PlayerLogout::Swap(PlayerLogout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLogout::InternalSwap(PlayerLogout* other) {
  std::swap(idplayer_, other->idplayer_);
  std::swap(socket_, other->socket_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLogout::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerLogout_descriptor_;
  metadata.reflection = PlayerLogout_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLogout

// optional uint64 idplayer = 1;
void PlayerLogout::clear_idplayer() {
  idplayer_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerLogout::idplayer() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerLogout.idplayer)
  return idplayer_;
}
void PlayerLogout::set_idplayer(::google::protobuf::uint64 value) {
  
  idplayer_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerLogout.idplayer)
}

// optional uint64 socket = 2;
void PlayerLogout::clear_socket() {
  socket_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerLogout::socket() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerLogout.socket)
  return socket_;
}
void PlayerLogout::set_socket(::google::protobuf::uint64 value) {
  
  socket_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerLogout.socket)
}

inline const PlayerLogout* PlayerLogout::internal_default_instance() {
  return &PlayerLogout_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* SystemVarChange_SystemVarChangeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SystemVarChange_SystemVarChangeType_descriptor_;
}
bool SystemVarChange_SystemVarChangeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SystemVarChange_SystemVarChangeType SystemVarChange::SVCT_CREATE;
const SystemVarChange_SystemVarChangeType SystemVarChange::SVCT_SET_DATA;
const SystemVarChange_SystemVarChangeType SystemVarChange::SVCT_ADD_DATA;
const SystemVarChange_SystemVarChangeType SystemVarChange::SVCT_SET_STR;
const SystemVarChange_SystemVarChangeType SystemVarChange::SystemVarChangeType_MIN;
const SystemVarChange_SystemVarChangeType SystemVarChange::SystemVarChangeType_MAX;
const int SystemVarChange::SystemVarChangeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemVarChange::kKeyidxFieldNumber;
const int SystemVarChange::kIdxFieldNumber;
const int SystemVarChange::kValFieldNumber;
const int SystemVarChange::kStrFieldNumber;
const int SystemVarChange::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemVarChange::SystemVarChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.SystemVarChange)
}

void SystemVarChange::InitAsDefaultInstance() {
}

SystemVarChange::SystemVarChange(const SystemVarChange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.SystemVarChange)
}

void SystemVarChange::SharedCtor() {
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&keyidx_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&keyidx_) + sizeof(type_));
  _cached_size_ = 0;
}

SystemVarChange::~SystemVarChange() {
  // @@protoc_insertion_point(destructor:ServerMSG.SystemVarChange)
  SharedDtor();
}

void SystemVarChange::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SystemVarChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemVarChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SystemVarChange_descriptor_;
}

const SystemVarChange& SystemVarChange::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SystemVarChange> SystemVarChange_default_instance_;

SystemVarChange* SystemVarChange::New(::google::protobuf::Arena* arena) const {
  SystemVarChange* n = new SystemVarChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SystemVarChange::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.SystemVarChange)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SystemVarChange, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SystemVarChange*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(keyidx_, type_);
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SystemVarChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.SystemVarChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 keyidx = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &keyidx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_idx;
        break;
      }

      // optional uint32 idx = 2;
      case 2: {
        if (tag == 16) {
         parse_idx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_val;
        break;
      }

      // optional uint32 val = 3;
      case 3: {
        if (tag == 24) {
         parse_val:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &val_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_str;
        break;
      }

      // optional string str = 4;
      case 4: {
        if (tag == 34) {
         parse_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerMSG.SystemVarChange.str"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional .ServerMSG.SystemVarChange.SystemVarChangeType type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ServerMSG::SystemVarChange_SystemVarChangeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.SystemVarChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.SystemVarChange)
  return false;
#undef DO_
}

void SystemVarChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.SystemVarChange)
  // optional uint32 keyidx = 1;
  if (this->keyidx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->keyidx(), output);
  }

  // optional uint32 idx = 2;
  if (this->idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->idx(), output);
  }

  // optional uint32 val = 3;
  if (this->val() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->val(), output);
  }

  // optional string str = 4;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerMSG.SystemVarChange.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->str(), output);
  }

  // optional .ServerMSG.SystemVarChange.SystemVarChangeType type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.SystemVarChange)
}

::google::protobuf::uint8* SystemVarChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.SystemVarChange)
  // optional uint32 keyidx = 1;
  if (this->keyidx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->keyidx(), target);
  }

  // optional uint32 idx = 2;
  if (this->idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->idx(), target);
  }

  // optional uint32 val = 3;
  if (this->val() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->val(), target);
  }

  // optional string str = 4;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerMSG.SystemVarChange.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->str(), target);
  }

  // optional .ServerMSG.SystemVarChange.SystemVarChangeType type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.SystemVarChange)
  return target;
}

size_t SystemVarChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.SystemVarChange)
  size_t total_size = 0;

  // optional uint32 keyidx = 1;
  if (this->keyidx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->keyidx());
  }

  // optional uint32 idx = 2;
  if (this->idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->idx());
  }

  // optional uint32 val = 3;
  if (this->val() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->val());
  }

  // optional string str = 4;
  if (this->str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  // optional .ServerMSG.SystemVarChange.SystemVarChangeType type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemVarChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.SystemVarChange)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SystemVarChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemVarChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.SystemVarChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.SystemVarChange)
    UnsafeMergeFrom(*source);
  }
}

void SystemVarChange::MergeFrom(const SystemVarChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.SystemVarChange)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SystemVarChange::UnsafeMergeFrom(const SystemVarChange& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.keyidx() != 0) {
    set_keyidx(from.keyidx());
  }
  if (from.idx() != 0) {
    set_idx(from.idx());
  }
  if (from.val() != 0) {
    set_val(from.val());
  }
  if (from.str().size() > 0) {

    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void SystemVarChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.SystemVarChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemVarChange::CopyFrom(const SystemVarChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.SystemVarChange)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SystemVarChange::IsInitialized() const {

  return true;
}

void SystemVarChange::Swap(SystemVarChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemVarChange::InternalSwap(SystemVarChange* other) {
  std::swap(keyidx_, other->keyidx_);
  std::swap(idx_, other->idx_);
  std::swap(val_, other->val_);
  str_.Swap(&other->str_);
  std::swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SystemVarChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SystemVarChange_descriptor_;
  metadata.reflection = SystemVarChange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SystemVarChange

// optional uint32 keyidx = 1;
void SystemVarChange::clear_keyidx() {
  keyidx_ = 0u;
}
::google::protobuf::uint32 SystemVarChange::keyidx() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SystemVarChange.keyidx)
  return keyidx_;
}
void SystemVarChange::set_keyidx(::google::protobuf::uint32 value) {
  
  keyidx_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.SystemVarChange.keyidx)
}

// optional uint32 idx = 2;
void SystemVarChange::clear_idx() {
  idx_ = 0u;
}
::google::protobuf::uint32 SystemVarChange::idx() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SystemVarChange.idx)
  return idx_;
}
void SystemVarChange::set_idx(::google::protobuf::uint32 value) {
  
  idx_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.SystemVarChange.idx)
}

// optional uint32 val = 3;
void SystemVarChange::clear_val() {
  val_ = 0u;
}
::google::protobuf::uint32 SystemVarChange::val() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SystemVarChange.val)
  return val_;
}
void SystemVarChange::set_val(::google::protobuf::uint32 value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.SystemVarChange.val)
}

// optional string str = 4;
void SystemVarChange::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SystemVarChange::str() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SystemVarChange.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SystemVarChange::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ServerMSG.SystemVarChange.str)
}
void SystemVarChange::set_str(const char* value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.SystemVarChange.str)
}
void SystemVarChange::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.SystemVarChange.str)
}
::std::string* SystemVarChange::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:ServerMSG.SystemVarChange.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SystemVarChange::release_str() {
  // @@protoc_insertion_point(field_release:ServerMSG.SystemVarChange.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SystemVarChange::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.SystemVarChange.str)
}

// optional .ServerMSG.SystemVarChange.SystemVarChangeType type = 5;
void SystemVarChange::clear_type() {
  type_ = 0;
}
::ServerMSG::SystemVarChange_SystemVarChangeType SystemVarChange::type() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SystemVarChange.type)
  return static_cast< ::ServerMSG::SystemVarChange_SystemVarChangeType >(type_);
}
void SystemVarChange::set_type(::ServerMSG::SystemVarChange_SystemVarChangeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.SystemVarChange.type)
}

inline const SystemVarChange* SystemVarChange::internal_default_instance() {
  return &SystemVarChange_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneCreate::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneCreate::SceneCreate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.SceneCreate)
}

void SceneCreate::InitAsDefaultInstance() {
}

SceneCreate::SceneCreate(const SceneCreate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.SceneCreate)
}

void SceneCreate::SharedCtor() {
  scene_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

SceneCreate::~SceneCreate() {
  // @@protoc_insertion_point(destructor:ServerMSG.SceneCreate)
  SharedDtor();
}

void SceneCreate::SharedDtor() {
}

void SceneCreate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneCreate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SceneCreate_descriptor_;
}

const SceneCreate& SceneCreate::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SceneCreate> SceneCreate_default_instance_;

SceneCreate* SceneCreate::New(::google::protobuf::Arena* arena) const {
  SceneCreate* n = new SceneCreate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneCreate::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.SceneCreate)
  scene_id_ = GOOGLE_ULONGLONG(0);
}

bool SceneCreate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.SceneCreate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 scene_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.SceneCreate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.SceneCreate)
  return false;
#undef DO_
}

void SceneCreate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.SceneCreate)
  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->scene_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.SceneCreate)
}

::google::protobuf::uint8* SceneCreate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.SceneCreate)
  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->scene_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.SceneCreate)
  return target;
}

size_t SceneCreate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.SceneCreate)
  size_t total_size = 0;

  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneCreate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.SceneCreate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SceneCreate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneCreate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.SceneCreate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.SceneCreate)
    UnsafeMergeFrom(*source);
  }
}

void SceneCreate::MergeFrom(const SceneCreate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.SceneCreate)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SceneCreate::UnsafeMergeFrom(const SceneCreate& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void SceneCreate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.SceneCreate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneCreate::CopyFrom(const SceneCreate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.SceneCreate)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SceneCreate::IsInitialized() const {

  return true;
}

void SceneCreate::Swap(SceneCreate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneCreate::InternalSwap(SceneCreate* other) {
  std::swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneCreate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SceneCreate_descriptor_;
  metadata.reflection = SceneCreate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneCreate

// optional uint64 scene_id = 1;
void SceneCreate::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneCreate::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SceneCreate.scene_id)
  return scene_id_;
}
void SceneCreate::set_scene_id(::google::protobuf::uint64 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.SceneCreate.scene_id)
}

inline const SceneCreate* SceneCreate::internal_default_instance() {
  return &SceneCreate_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneDestory::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneDestory::SceneDestory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.SceneDestory)
}

void SceneDestory::InitAsDefaultInstance() {
}

SceneDestory::SceneDestory(const SceneDestory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.SceneDestory)
}

void SceneDestory::SharedCtor() {
  scene_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

SceneDestory::~SceneDestory() {
  // @@protoc_insertion_point(destructor:ServerMSG.SceneDestory)
  SharedDtor();
}

void SceneDestory::SharedDtor() {
}

void SceneDestory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneDestory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SceneDestory_descriptor_;
}

const SceneDestory& SceneDestory::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SceneDestory> SceneDestory_default_instance_;

SceneDestory* SceneDestory::New(::google::protobuf::Arena* arena) const {
  SceneDestory* n = new SceneDestory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneDestory::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.SceneDestory)
  scene_id_ = GOOGLE_ULONGLONG(0);
}

bool SceneDestory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.SceneDestory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 scene_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.SceneDestory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.SceneDestory)
  return false;
#undef DO_
}

void SceneDestory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.SceneDestory)
  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->scene_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.SceneDestory)
}

::google::protobuf::uint8* SceneDestory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.SceneDestory)
  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->scene_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.SceneDestory)
  return target;
}

size_t SceneDestory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.SceneDestory)
  size_t total_size = 0;

  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneDestory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.SceneDestory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SceneDestory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneDestory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.SceneDestory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.SceneDestory)
    UnsafeMergeFrom(*source);
  }
}

void SceneDestory::MergeFrom(const SceneDestory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.SceneDestory)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SceneDestory::UnsafeMergeFrom(const SceneDestory& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void SceneDestory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.SceneDestory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneDestory::CopyFrom(const SceneDestory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.SceneDestory)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SceneDestory::IsInitialized() const {

  return true;
}

void SceneDestory::Swap(SceneDestory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneDestory::InternalSwap(SceneDestory* other) {
  std::swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneDestory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SceneDestory_descriptor_;
  metadata.reflection = SceneDestory_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneDestory

// optional uint64 scene_id = 1;
void SceneDestory::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneDestory::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SceneDestory.scene_id)
  return scene_id_;
}
void SceneDestory::set_scene_id(::google::protobuf::uint64 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.SceneDestory.scene_id)
}

inline const SceneDestory* SceneDestory::internal_default_instance() {
  return &SceneDestory_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonsterGen::kSceneIdFieldNumber;
const int MonsterGen::kGenIdFieldNumber;
const int MonsterGen::kMonsterTypeFieldNumber;
const int MonsterGen::kPosxFieldNumber;
const int MonsterGen::kPosyFieldNumber;
const int MonsterGen::kCampIdFieldNumber;
const int MonsterGen::kMonsterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonsterGen::MonsterGen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.MonsterGen)
}

void MonsterGen::InitAsDefaultInstance() {
}

MonsterGen::MonsterGen(const MonsterGen& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.MonsterGen)
}

void MonsterGen::SharedCtor() {
  ::memset(&scene_id_, 0, reinterpret_cast<char*>(&monster_id_) -
    reinterpret_cast<char*>(&scene_id_) + sizeof(monster_id_));
  _cached_size_ = 0;
}

MonsterGen::~MonsterGen() {
  // @@protoc_insertion_point(destructor:ServerMSG.MonsterGen)
  SharedDtor();
}

void MonsterGen::SharedDtor() {
}

void MonsterGen::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonsterGen::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MonsterGen_descriptor_;
}

const MonsterGen& MonsterGen::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MonsterGen> MonsterGen_default_instance_;

MonsterGen* MonsterGen::New(::google::protobuf::Arena* arena) const {
  MonsterGen* n = new MonsterGen;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MonsterGen::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.MonsterGen)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MonsterGen, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MonsterGen*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(scene_id_, monster_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool MonsterGen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.MonsterGen)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 scene_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_gen_id;
        break;
      }

      // optional uint32 gen_id = 2;
      case 2: {
        if (tag == 16) {
         parse_gen_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gen_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_monster_type;
        break;
      }

      // optional uint32 monster_type = 3;
      case 3: {
        if (tag == 24) {
         parse_monster_type:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monster_type_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_posx;
        break;
      }

      // optional float posx = 4;
      case 4: {
        if (tag == 37) {
         parse_posx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_posy;
        break;
      }

      // optional float posy = 5;
      case 5: {
        if (tag == 45) {
         parse_posy:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_camp_id;
        break;
      }

      // optional uint32 camp_id = 6;
      case 6: {
        if (tag == 48) {
         parse_camp_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &camp_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_monster_id;
        break;
      }

      // optional uint32 monster_id = 7;
      case 7: {
        if (tag == 56) {
         parse_monster_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monster_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.MonsterGen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.MonsterGen)
  return false;
#undef DO_
}

void MonsterGen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.MonsterGen)
  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->scene_id(), output);
  }

  // optional uint32 gen_id = 2;
  if (this->gen_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gen_id(), output);
  }

  // optional uint32 monster_type = 3;
  if (this->monster_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->monster_type(), output);
  }

  // optional float posx = 4;
  if (this->posx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->posx(), output);
  }

  // optional float posy = 5;
  if (this->posy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->posy(), output);
  }

  // optional uint32 camp_id = 6;
  if (this->camp_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->camp_id(), output);
  }

  // optional uint32 monster_id = 7;
  if (this->monster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->monster_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.MonsterGen)
}

::google::protobuf::uint8* MonsterGen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.MonsterGen)
  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->scene_id(), target);
  }

  // optional uint32 gen_id = 2;
  if (this->gen_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gen_id(), target);
  }

  // optional uint32 monster_type = 3;
  if (this->monster_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->monster_type(), target);
  }

  // optional float posx = 4;
  if (this->posx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->posx(), target);
  }

  // optional float posy = 5;
  if (this->posy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->posy(), target);
  }

  // optional uint32 camp_id = 6;
  if (this->camp_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->camp_id(), target);
  }

  // optional uint32 monster_id = 7;
  if (this->monster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->monster_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.MonsterGen)
  return target;
}

size_t MonsterGen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.MonsterGen)
  size_t total_size = 0;

  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->scene_id());
  }

  // optional uint32 gen_id = 2;
  if (this->gen_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gen_id());
  }

  // optional uint32 monster_type = 3;
  if (this->monster_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->monster_type());
  }

  // optional float posx = 4;
  if (this->posx() != 0) {
    total_size += 1 + 4;
  }

  // optional float posy = 5;
  if (this->posy() != 0) {
    total_size += 1 + 4;
  }

  // optional uint32 camp_id = 6;
  if (this->camp_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->camp_id());
  }

  // optional uint32 monster_id = 7;
  if (this->monster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->monster_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonsterGen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.MonsterGen)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MonsterGen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonsterGen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.MonsterGen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.MonsterGen)
    UnsafeMergeFrom(*source);
  }
}

void MonsterGen::MergeFrom(const MonsterGen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.MonsterGen)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MonsterGen::UnsafeMergeFrom(const MonsterGen& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.gen_id() != 0) {
    set_gen_id(from.gen_id());
  }
  if (from.monster_type() != 0) {
    set_monster_type(from.monster_type());
  }
  if (from.posx() != 0) {
    set_posx(from.posx());
  }
  if (from.posy() != 0) {
    set_posy(from.posy());
  }
  if (from.camp_id() != 0) {
    set_camp_id(from.camp_id());
  }
  if (from.monster_id() != 0) {
    set_monster_id(from.monster_id());
  }
}

void MonsterGen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.MonsterGen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonsterGen::CopyFrom(const MonsterGen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.MonsterGen)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MonsterGen::IsInitialized() const {

  return true;
}

void MonsterGen::Swap(MonsterGen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonsterGen::InternalSwap(MonsterGen* other) {
  std::swap(scene_id_, other->scene_id_);
  std::swap(gen_id_, other->gen_id_);
  std::swap(monster_type_, other->monster_type_);
  std::swap(posx_, other->posx_);
  std::swap(posy_, other->posy_);
  std::swap(camp_id_, other->camp_id_);
  std::swap(monster_id_, other->monster_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MonsterGen::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MonsterGen_descriptor_;
  metadata.reflection = MonsterGen_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MonsterGen

// optional uint64 scene_id = 1;
void MonsterGen::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 MonsterGen::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.scene_id)
  return scene_id_;
}
void MonsterGen::set_scene_id(::google::protobuf::uint64 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.scene_id)
}

// optional uint32 gen_id = 2;
void MonsterGen::clear_gen_id() {
  gen_id_ = 0u;
}
::google::protobuf::uint32 MonsterGen::gen_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.gen_id)
  return gen_id_;
}
void MonsterGen::set_gen_id(::google::protobuf::uint32 value) {
  
  gen_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.gen_id)
}

// optional uint32 monster_type = 3;
void MonsterGen::clear_monster_type() {
  monster_type_ = 0u;
}
::google::protobuf::uint32 MonsterGen::monster_type() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.monster_type)
  return monster_type_;
}
void MonsterGen::set_monster_type(::google::protobuf::uint32 value) {
  
  monster_type_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.monster_type)
}

// optional float posx = 4;
void MonsterGen::clear_posx() {
  posx_ = 0;
}
float MonsterGen::posx() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.posx)
  return posx_;
}
void MonsterGen::set_posx(float value) {
  
  posx_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.posx)
}

// optional float posy = 5;
void MonsterGen::clear_posy() {
  posy_ = 0;
}
float MonsterGen::posy() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.posy)
  return posy_;
}
void MonsterGen::set_posy(float value) {
  
  posy_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.posy)
}

// optional uint32 camp_id = 6;
void MonsterGen::clear_camp_id() {
  camp_id_ = 0u;
}
::google::protobuf::uint32 MonsterGen::camp_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.camp_id)
  return camp_id_;
}
void MonsterGen::set_camp_id(::google::protobuf::uint32 value) {
  
  camp_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.camp_id)
}

// optional uint32 monster_id = 7;
void MonsterGen::clear_monster_id() {
  monster_id_ = 0u;
}
::google::protobuf::uint32 MonsterGen::monster_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.monster_id)
  return monster_id_;
}
void MonsterGen::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.monster_id)
}

inline const MonsterGen* MonsterGen::internal_default_instance() {
  return &MonsterGen_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonsterDestory::kMonsterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonsterDestory::MonsterDestory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.MonsterDestory)
}

void MonsterDestory::InitAsDefaultInstance() {
}

MonsterDestory::MonsterDestory(const MonsterDestory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.MonsterDestory)
}

void MonsterDestory::SharedCtor() {
  _cached_size_ = 0;
}

MonsterDestory::~MonsterDestory() {
  // @@protoc_insertion_point(destructor:ServerMSG.MonsterDestory)
  SharedDtor();
}

void MonsterDestory::SharedDtor() {
}

void MonsterDestory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonsterDestory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MonsterDestory_descriptor_;
}

const MonsterDestory& MonsterDestory::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MonsterDestory> MonsterDestory_default_instance_;

MonsterDestory* MonsterDestory::New(::google::protobuf::Arena* arena) const {
  MonsterDestory* n = new MonsterDestory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MonsterDestory::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.MonsterDestory)
  monster_id_.Clear();
}

bool MonsterDestory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.MonsterDestory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 monster_id = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_monster_id())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10, input, this->mutable_monster_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.MonsterDestory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.MonsterDestory)
  return false;
#undef DO_
}

void MonsterDestory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.MonsterDestory)
  // repeated uint64 monster_id = 1;
  if (this->monster_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_monster_id_cached_byte_size_);
  }
  for (int i = 0; i < this->monster_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->monster_id(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.MonsterDestory)
}

::google::protobuf::uint8* MonsterDestory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.MonsterDestory)
  // repeated uint64 monster_id = 1;
  if (this->monster_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _monster_id_cached_byte_size_, target);
  }
  for (int i = 0; i < this->monster_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->monster_id(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.MonsterDestory)
  return target;
}

size_t MonsterDestory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.MonsterDestory)
  size_t total_size = 0;

  // repeated uint64 monster_id = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->monster_id_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->monster_id(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _monster_id_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonsterDestory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.MonsterDestory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MonsterDestory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonsterDestory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.MonsterDestory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.MonsterDestory)
    UnsafeMergeFrom(*source);
  }
}

void MonsterDestory::MergeFrom(const MonsterDestory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.MonsterDestory)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MonsterDestory::UnsafeMergeFrom(const MonsterDestory& from) {
  GOOGLE_DCHECK(&from != this);
  monster_id_.UnsafeMergeFrom(from.monster_id_);
}

void MonsterDestory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.MonsterDestory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonsterDestory::CopyFrom(const MonsterDestory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.MonsterDestory)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MonsterDestory::IsInitialized() const {

  return true;
}

void MonsterDestory::Swap(MonsterDestory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonsterDestory::InternalSwap(MonsterDestory* other) {
  monster_id_.UnsafeArenaSwap(&other->monster_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MonsterDestory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MonsterDestory_descriptor_;
  metadata.reflection = MonsterDestory_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MonsterDestory

// repeated uint64 monster_id = 1;
int MonsterDestory::monster_id_size() const {
  return monster_id_.size();
}
void MonsterDestory::clear_monster_id() {
  monster_id_.Clear();
}
::google::protobuf::uint64 MonsterDestory::monster_id(int index) const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterDestory.monster_id)
  return monster_id_.Get(index);
}
void MonsterDestory::set_monster_id(int index, ::google::protobuf::uint64 value) {
  monster_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterDestory.monster_id)
}
void MonsterDestory::add_monster_id(::google::protobuf::uint64 value) {
  monster_id_.Add(value);
  // @@protoc_insertion_point(field_add:ServerMSG.MonsterDestory.monster_id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MonsterDestory::monster_id() const {
  // @@protoc_insertion_point(field_list:ServerMSG.MonsterDestory.monster_id)
  return monster_id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MonsterDestory::mutable_monster_id() {
  // @@protoc_insertion_point(field_mutable_list:ServerMSG.MonsterDestory.monster_id)
  return &monster_id_;
}

inline const MonsterDestory* MonsterDestory::internal_default_instance() {
  return &MonsterDestory_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActiveGen::kSceneIdFieldNumber;
const int ActiveGen::kGenIdFieldNumber;
const int ActiveGen::kActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActiveGen::ActiveGen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.ActiveGen)
}

void ActiveGen::InitAsDefaultInstance() {
}

ActiveGen::ActiveGen(const ActiveGen& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.ActiveGen)
}

void ActiveGen::SharedCtor() {
  ::memset(&scene_id_, 0, reinterpret_cast<char*>(&active_) -
    reinterpret_cast<char*>(&scene_id_) + sizeof(active_));
  _cached_size_ = 0;
}

ActiveGen::~ActiveGen() {
  // @@protoc_insertion_point(destructor:ServerMSG.ActiveGen)
  SharedDtor();
}

void ActiveGen::SharedDtor() {
}

void ActiveGen::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActiveGen::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActiveGen_descriptor_;
}

const ActiveGen& ActiveGen::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ActiveGen> ActiveGen_default_instance_;

ActiveGen* ActiveGen::New(::google::protobuf::Arena* arena) const {
  ActiveGen* n = new ActiveGen;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActiveGen::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.ActiveGen)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ActiveGen, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ActiveGen*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(scene_id_, active_);

#undef ZR_HELPER_
#undef ZR_

}

bool ActiveGen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.ActiveGen)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 scene_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_gen_id;
        break;
      }

      // optional uint32 gen_id = 2;
      case 2: {
        if (tag == 16) {
         parse_gen_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gen_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_active;
        break;
      }

      // optional bool active = 3;
      case 3: {
        if (tag == 24) {
         parse_active:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.ActiveGen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.ActiveGen)
  return false;
#undef DO_
}

void ActiveGen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.ActiveGen)
  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->scene_id(), output);
  }

  // optional uint32 gen_id = 2;
  if (this->gen_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gen_id(), output);
  }

  // optional bool active = 3;
  if (this->active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->active(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.ActiveGen)
}

::google::protobuf::uint8* ActiveGen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.ActiveGen)
  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->scene_id(), target);
  }

  // optional uint32 gen_id = 2;
  if (this->gen_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gen_id(), target);
  }

  // optional bool active = 3;
  if (this->active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->active(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.ActiveGen)
  return target;
}

size_t ActiveGen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.ActiveGen)
  size_t total_size = 0;

  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->scene_id());
  }

  // optional uint32 gen_id = 2;
  if (this->gen_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gen_id());
  }

  // optional bool active = 3;
  if (this->active() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActiveGen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.ActiveGen)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ActiveGen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActiveGen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.ActiveGen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.ActiveGen)
    UnsafeMergeFrom(*source);
  }
}

void ActiveGen::MergeFrom(const ActiveGen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.ActiveGen)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ActiveGen::UnsafeMergeFrom(const ActiveGen& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.gen_id() != 0) {
    set_gen_id(from.gen_id());
  }
  if (from.active() != 0) {
    set_active(from.active());
  }
}

void ActiveGen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.ActiveGen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActiveGen::CopyFrom(const ActiveGen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.ActiveGen)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ActiveGen::IsInitialized() const {

  return true;
}

void ActiveGen::Swap(ActiveGen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActiveGen::InternalSwap(ActiveGen* other) {
  std::swap(scene_id_, other->scene_id_);
  std::swap(gen_id_, other->gen_id_);
  std::swap(active_, other->active_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActiveGen::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActiveGen_descriptor_;
  metadata.reflection = ActiveGen_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActiveGen

// optional uint64 scene_id = 1;
void ActiveGen::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ActiveGen::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActiveGen.scene_id)
  return scene_id_;
}
void ActiveGen::set_scene_id(::google::protobuf::uint64 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActiveGen.scene_id)
}

// optional uint32 gen_id = 2;
void ActiveGen::clear_gen_id() {
  gen_id_ = 0u;
}
::google::protobuf::uint32 ActiveGen::gen_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActiveGen.gen_id)
  return gen_id_;
}
void ActiveGen::set_gen_id(::google::protobuf::uint32 value) {
  
  gen_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActiveGen.gen_id)
}

// optional bool active = 3;
void ActiveGen::clear_active() {
  active_ = false;
}
bool ActiveGen::active() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActiveGen.active)
  return active_;
}
void ActiveGen::set_active(bool value) {
  
  active_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActiveGen.active)
}

inline const ActiveGen* ActiveGen::internal_default_instance() {
  return &ActiveGen_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KillGen::kSceneIdFieldNumber;
const int KillGen::kGenIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KillGen::KillGen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.KillGen)
}

void KillGen::InitAsDefaultInstance() {
}

KillGen::KillGen(const KillGen& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.KillGen)
}

void KillGen::SharedCtor() {
  ::memset(&scene_id_, 0, reinterpret_cast<char*>(&gen_id_) -
    reinterpret_cast<char*>(&scene_id_) + sizeof(gen_id_));
  _cached_size_ = 0;
}

KillGen::~KillGen() {
  // @@protoc_insertion_point(destructor:ServerMSG.KillGen)
  SharedDtor();
}

void KillGen::SharedDtor() {
}

void KillGen::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KillGen::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KillGen_descriptor_;
}

const KillGen& KillGen::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<KillGen> KillGen_default_instance_;

KillGen* KillGen::New(::google::protobuf::Arena* arena) const {
  KillGen* n = new KillGen;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KillGen::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.KillGen)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(KillGen, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<KillGen*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(scene_id_, gen_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool KillGen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.KillGen)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 scene_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_gen_id;
        break;
      }

      // optional uint32 gen_id = 2;
      case 2: {
        if (tag == 16) {
         parse_gen_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gen_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.KillGen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.KillGen)
  return false;
#undef DO_
}

void KillGen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.KillGen)
  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->scene_id(), output);
  }

  // optional uint32 gen_id = 2;
  if (this->gen_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gen_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.KillGen)
}

::google::protobuf::uint8* KillGen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.KillGen)
  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->scene_id(), target);
  }

  // optional uint32 gen_id = 2;
  if (this->gen_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gen_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.KillGen)
  return target;
}

size_t KillGen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.KillGen)
  size_t total_size = 0;

  // optional uint64 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->scene_id());
  }

  // optional uint32 gen_id = 2;
  if (this->gen_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gen_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KillGen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.KillGen)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const KillGen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KillGen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.KillGen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.KillGen)
    UnsafeMergeFrom(*source);
  }
}

void KillGen::MergeFrom(const KillGen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.KillGen)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void KillGen::UnsafeMergeFrom(const KillGen& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.gen_id() != 0) {
    set_gen_id(from.gen_id());
  }
}

void KillGen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.KillGen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KillGen::CopyFrom(const KillGen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.KillGen)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool KillGen::IsInitialized() const {

  return true;
}

void KillGen::Swap(KillGen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KillGen::InternalSwap(KillGen* other) {
  std::swap(scene_id_, other->scene_id_);
  std::swap(gen_id_, other->gen_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KillGen::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KillGen_descriptor_;
  metadata.reflection = KillGen_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KillGen

// optional uint64 scene_id = 1;
void KillGen::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 KillGen::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.KillGen.scene_id)
  return scene_id_;
}
void KillGen::set_scene_id(::google::protobuf::uint64 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.KillGen.scene_id)
}

// optional uint32 gen_id = 2;
void KillGen::clear_gen_id() {
  gen_id_ = 0u;
}
::google::protobuf::uint32 KillGen::gen_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.KillGen.gen_id)
  return gen_id_;
}
void KillGen::set_gen_id(::google::protobuf::uint32 value) {
  
  gen_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.KillGen.gen_id)
}

inline const KillGen* KillGen::internal_default_instance() {
  return &KillGen_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorCreate::kActorIdFieldNumber;
const int ActorCreate::kSceneIdFieldNumber;
const int ActorCreate::kNameFieldNumber;
const int ActorCreate::kActortypeFieldNumber;
const int ActorCreate::kBaselookFieldNumber;
const int ActorCreate::kProfFieldNumber;
const int ActorCreate::kLevFieldNumber;
const int ActorCreate::kCampidFieldNumber;
const int ActorCreate::kHpFieldNumber;
const int ActorCreate::kHpmaxFieldNumber;
const int ActorCreate::kMpFieldNumber;
const int ActorCreate::kMpmaxFieldNumber;
const int ActorCreate::kMovespdFieldNumber;
const int ActorCreate::kOwneridFieldNumber;
const int ActorCreate::kPosxFieldNumber;
const int ActorCreate::kPosyFieldNumber;
const int ActorCreate::kFaceFieldNumber;
const int ActorCreate::kMonsterGenIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorCreate::ActorCreate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.ActorCreate)
}

void ActorCreate::InitAsDefaultInstance() {
}

ActorCreate::ActorCreate(const ActorCreate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.ActorCreate)
}

void ActorCreate::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&actor_id_, 0, reinterpret_cast<char*>(&monster_gen_id_) -
    reinterpret_cast<char*>(&actor_id_) + sizeof(monster_gen_id_));
  _cached_size_ = 0;
}

ActorCreate::~ActorCreate() {
  // @@protoc_insertion_point(destructor:ServerMSG.ActorCreate)
  SharedDtor();
}

void ActorCreate::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ActorCreate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorCreate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActorCreate_descriptor_;
}

const ActorCreate& ActorCreate::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ActorCreate> ActorCreate_default_instance_;

ActorCreate* ActorCreate::New(::google::protobuf::Arena* arena) const {
  ActorCreate* n = new ActorCreate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorCreate::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.ActorCreate)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ActorCreate, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ActorCreate*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(actor_id_, campid_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(hp_, posy_);
  ZR_(face_, monster_gen_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool ActorCreate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.ActorCreate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 actor_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &actor_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_scene_id;
        break;
      }

      // optional uint64 scene_id = 2;
      case 2: {
        if (tag == 16) {
         parse_scene_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // optional string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerMSG.ActorCreate.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_actortype;
        break;
      }

      // optional uint32 actortype = 5;
      case 5: {
        if (tag == 40) {
         parse_actortype:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &actortype_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_baselook;
        break;
      }

      // optional uint32 baselook = 6;
      case 6: {
        if (tag == 48) {
         parse_baselook:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &baselook_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_prof;
        break;
      }

      // optional uint32 prof = 7;
      case 7: {
        if (tag == 56) {
         parse_prof:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prof_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_lev;
        break;
      }

      // optional uint32 lev = 8;
      case 8: {
        if (tag == 64) {
         parse_lev:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lev_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_campid;
        break;
      }

      // optional uint32 campid = 9;
      case 9: {
        if (tag == 72) {
         parse_campid:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &campid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_hp;
        break;
      }

      // optional uint32 hp = 10;
      case 10: {
        if (tag == 80) {
         parse_hp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_hpmax;
        break;
      }

      // optional uint32 hpmax = 11;
      case 11: {
        if (tag == 88) {
         parse_hpmax:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hpmax_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_mp;
        break;
      }

      // optional uint32 mp = 12;
      case 12: {
        if (tag == 96) {
         parse_mp:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_mpmax;
        break;
      }

      // optional uint32 mpmax = 13;
      case 13: {
        if (tag == 104) {
         parse_mpmax:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mpmax_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_movespd;
        break;
      }

      // optional uint32 movespd = 14;
      case 14: {
        if (tag == 112) {
         parse_movespd:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &movespd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_ownerid;
        break;
      }

      // optional uint64 ownerid = 15;
      case 15: {
        if (tag == 120) {
         parse_ownerid:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ownerid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(133)) goto parse_posx;
        break;
      }

      // optional float posx = 16;
      case 16: {
        if (tag == 133) {
         parse_posx:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posx_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(141)) goto parse_posy;
        break;
      }

      // optional float posy = 17;
      case 17: {
        if (tag == 141) {
         parse_posy:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &posy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(149)) goto parse_face;
        break;
      }

      // optional float face = 18;
      case 18: {
        if (tag == 149) {
         parse_face:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &face_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_monster_gen_id;
        break;
      }

      // optional uint32 monster_gen_id = 20;
      case 20: {
        if (tag == 160) {
         parse_monster_gen_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monster_gen_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.ActorCreate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.ActorCreate)
  return false;
#undef DO_
}

void ActorCreate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.ActorCreate)
  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->actor_id(), output);
  }

  // optional uint64 scene_id = 2;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->scene_id(), output);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerMSG.ActorCreate.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional uint32 actortype = 5;
  if (this->actortype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->actortype(), output);
  }

  // optional uint32 baselook = 6;
  if (this->baselook() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->baselook(), output);
  }

  // optional uint32 prof = 7;
  if (this->prof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->prof(), output);
  }

  // optional uint32 lev = 8;
  if (this->lev() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->lev(), output);
  }

  // optional uint32 campid = 9;
  if (this->campid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->campid(), output);
  }

  // optional uint32 hp = 10;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->hp(), output);
  }

  // optional uint32 hpmax = 11;
  if (this->hpmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->hpmax(), output);
  }

  // optional uint32 mp = 12;
  if (this->mp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->mp(), output);
  }

  // optional uint32 mpmax = 13;
  if (this->mpmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->mpmax(), output);
  }

  // optional uint32 movespd = 14;
  if (this->movespd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->movespd(), output);
  }

  // optional uint64 ownerid = 15;
  if (this->ownerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->ownerid(), output);
  }

  // optional float posx = 16;
  if (this->posx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->posx(), output);
  }

  // optional float posy = 17;
  if (this->posy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(17, this->posy(), output);
  }

  // optional float face = 18;
  if (this->face() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->face(), output);
  }

  // optional uint32 monster_gen_id = 20;
  if (this->monster_gen_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->monster_gen_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.ActorCreate)
}

::google::protobuf::uint8* ActorCreate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.ActorCreate)
  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->actor_id(), target);
  }

  // optional uint64 scene_id = 2;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->scene_id(), target);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerMSG.ActorCreate.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional uint32 actortype = 5;
  if (this->actortype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->actortype(), target);
  }

  // optional uint32 baselook = 6;
  if (this->baselook() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->baselook(), target);
  }

  // optional uint32 prof = 7;
  if (this->prof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->prof(), target);
  }

  // optional uint32 lev = 8;
  if (this->lev() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->lev(), target);
  }

  // optional uint32 campid = 9;
  if (this->campid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->campid(), target);
  }

  // optional uint32 hp = 10;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->hp(), target);
  }

  // optional uint32 hpmax = 11;
  if (this->hpmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->hpmax(), target);
  }

  // optional uint32 mp = 12;
  if (this->mp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->mp(), target);
  }

  // optional uint32 mpmax = 13;
  if (this->mpmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->mpmax(), target);
  }

  // optional uint32 movespd = 14;
  if (this->movespd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->movespd(), target);
  }

  // optional uint64 ownerid = 15;
  if (this->ownerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->ownerid(), target);
  }

  // optional float posx = 16;
  if (this->posx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->posx(), target);
  }

  // optional float posy = 17;
  if (this->posy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(17, this->posy(), target);
  }

  // optional float face = 18;
  if (this->face() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->face(), target);
  }

  // optional uint32 monster_gen_id = 20;
  if (this->monster_gen_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->monster_gen_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.ActorCreate)
  return target;
}

size_t ActorCreate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.ActorCreate)
  size_t total_size = 0;

  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->actor_id());
  }

  // optional uint64 scene_id = 2;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->scene_id());
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint32 actortype = 5;
  if (this->actortype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->actortype());
  }

  // optional uint32 baselook = 6;
  if (this->baselook() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->baselook());
  }

  // optional uint32 prof = 7;
  if (this->prof() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prof());
  }

  // optional uint32 lev = 8;
  if (this->lev() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lev());
  }

  // optional uint32 campid = 9;
  if (this->campid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->campid());
  }

  // optional uint32 hp = 10;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hp());
  }

  // optional uint32 hpmax = 11;
  if (this->hpmax() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hpmax());
  }

  // optional uint32 mp = 12;
  if (this->mp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp());
  }

  // optional uint32 mpmax = 13;
  if (this->mpmax() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mpmax());
  }

  // optional uint32 movespd = 14;
  if (this->movespd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->movespd());
  }

  // optional uint64 ownerid = 15;
  if (this->ownerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ownerid());
  }

  // optional float posx = 16;
  if (this->posx() != 0) {
    total_size += 2 + 4;
  }

  // optional float posy = 17;
  if (this->posy() != 0) {
    total_size += 2 + 4;
  }

  // optional float face = 18;
  if (this->face() != 0) {
    total_size += 2 + 4;
  }

  // optional uint32 monster_gen_id = 20;
  if (this->monster_gen_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->monster_gen_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorCreate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.ActorCreate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ActorCreate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorCreate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.ActorCreate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.ActorCreate)
    UnsafeMergeFrom(*source);
  }
}

void ActorCreate::MergeFrom(const ActorCreate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.ActorCreate)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ActorCreate::UnsafeMergeFrom(const ActorCreate& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.actor_id() != 0) {
    set_actor_id(from.actor_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.actortype() != 0) {
    set_actortype(from.actortype());
  }
  if (from.baselook() != 0) {
    set_baselook(from.baselook());
  }
  if (from.prof() != 0) {
    set_prof(from.prof());
  }
  if (from.lev() != 0) {
    set_lev(from.lev());
  }
  if (from.campid() != 0) {
    set_campid(from.campid());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
  if (from.hpmax() != 0) {
    set_hpmax(from.hpmax());
  }
  if (from.mp() != 0) {
    set_mp(from.mp());
  }
  if (from.mpmax() != 0) {
    set_mpmax(from.mpmax());
  }
  if (from.movespd() != 0) {
    set_movespd(from.movespd());
  }
  if (from.ownerid() != 0) {
    set_ownerid(from.ownerid());
  }
  if (from.posx() != 0) {
    set_posx(from.posx());
  }
  if (from.posy() != 0) {
    set_posy(from.posy());
  }
  if (from.face() != 0) {
    set_face(from.face());
  }
  if (from.monster_gen_id() != 0) {
    set_monster_gen_id(from.monster_gen_id());
  }
}

void ActorCreate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.ActorCreate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorCreate::CopyFrom(const ActorCreate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.ActorCreate)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ActorCreate::IsInitialized() const {

  return true;
}

void ActorCreate::Swap(ActorCreate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorCreate::InternalSwap(ActorCreate* other) {
  std::swap(actor_id_, other->actor_id_);
  std::swap(scene_id_, other->scene_id_);
  name_.Swap(&other->name_);
  std::swap(actortype_, other->actortype_);
  std::swap(baselook_, other->baselook_);
  std::swap(prof_, other->prof_);
  std::swap(lev_, other->lev_);
  std::swap(campid_, other->campid_);
  std::swap(hp_, other->hp_);
  std::swap(hpmax_, other->hpmax_);
  std::swap(mp_, other->mp_);
  std::swap(mpmax_, other->mpmax_);
  std::swap(movespd_, other->movespd_);
  std::swap(ownerid_, other->ownerid_);
  std::swap(posx_, other->posx_);
  std::swap(posy_, other->posy_);
  std::swap(face_, other->face_);
  std::swap(monster_gen_id_, other->monster_gen_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorCreate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActorCreate_descriptor_;
  metadata.reflection = ActorCreate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorCreate

// optional uint64 actor_id = 1;
void ActorCreate::clear_actor_id() {
  actor_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ActorCreate::actor_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.actor_id)
  return actor_id_;
}
void ActorCreate::set_actor_id(::google::protobuf::uint64 value) {
  
  actor_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.actor_id)
}

// optional uint64 scene_id = 2;
void ActorCreate::clear_scene_id() {
  scene_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ActorCreate::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.scene_id)
  return scene_id_;
}
void ActorCreate::set_scene_id(::google::protobuf::uint64 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.scene_id)
}

// optional string name = 4;
void ActorCreate::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ActorCreate::name() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActorCreate::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.name)
}
void ActorCreate::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.ActorCreate.name)
}
void ActorCreate::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.ActorCreate.name)
}
::std::string* ActorCreate::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ServerMSG.ActorCreate.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActorCreate::release_name() {
  // @@protoc_insertion_point(field_release:ServerMSG.ActorCreate.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActorCreate::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.ActorCreate.name)
}

// optional uint32 actortype = 5;
void ActorCreate::clear_actortype() {
  actortype_ = 0u;
}
::google::protobuf::uint32 ActorCreate::actortype() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.actortype)
  return actortype_;
}
void ActorCreate::set_actortype(::google::protobuf::uint32 value) {
  
  actortype_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.actortype)
}

// optional uint32 baselook = 6;
void ActorCreate::clear_baselook() {
  baselook_ = 0u;
}
::google::protobuf::uint32 ActorCreate::baselook() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.baselook)
  return baselook_;
}
void ActorCreate::set_baselook(::google::protobuf::uint32 value) {
  
  baselook_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.baselook)
}

// optional uint32 prof = 7;
void ActorCreate::clear_prof() {
  prof_ = 0u;
}
::google::protobuf::uint32 ActorCreate::prof() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.prof)
  return prof_;
}
void ActorCreate::set_prof(::google::protobuf::uint32 value) {
  
  prof_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.prof)
}

// optional uint32 lev = 8;
void ActorCreate::clear_lev() {
  lev_ = 0u;
}
::google::protobuf::uint32 ActorCreate::lev() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.lev)
  return lev_;
}
void ActorCreate::set_lev(::google::protobuf::uint32 value) {
  
  lev_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.lev)
}

// optional uint32 campid = 9;
void ActorCreate::clear_campid() {
  campid_ = 0u;
}
::google::protobuf::uint32 ActorCreate::campid() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.campid)
  return campid_;
}
void ActorCreate::set_campid(::google::protobuf::uint32 value) {
  
  campid_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.campid)
}

// optional uint32 hp = 10;
void ActorCreate::clear_hp() {
  hp_ = 0u;
}
::google::protobuf::uint32 ActorCreate::hp() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.hp)
  return hp_;
}
void ActorCreate::set_hp(::google::protobuf::uint32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.hp)
}

// optional uint32 hpmax = 11;
void ActorCreate::clear_hpmax() {
  hpmax_ = 0u;
}
::google::protobuf::uint32 ActorCreate::hpmax() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.hpmax)
  return hpmax_;
}
void ActorCreate::set_hpmax(::google::protobuf::uint32 value) {
  
  hpmax_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.hpmax)
}

// optional uint32 mp = 12;
void ActorCreate::clear_mp() {
  mp_ = 0u;
}
::google::protobuf::uint32 ActorCreate::mp() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.mp)
  return mp_;
}
void ActorCreate::set_mp(::google::protobuf::uint32 value) {
  
  mp_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.mp)
}

// optional uint32 mpmax = 13;
void ActorCreate::clear_mpmax() {
  mpmax_ = 0u;
}
::google::protobuf::uint32 ActorCreate::mpmax() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.mpmax)
  return mpmax_;
}
void ActorCreate::set_mpmax(::google::protobuf::uint32 value) {
  
  mpmax_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.mpmax)
}

// optional uint32 movespd = 14;
void ActorCreate::clear_movespd() {
  movespd_ = 0u;
}
::google::protobuf::uint32 ActorCreate::movespd() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.movespd)
  return movespd_;
}
void ActorCreate::set_movespd(::google::protobuf::uint32 value) {
  
  movespd_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.movespd)
}

// optional uint64 ownerid = 15;
void ActorCreate::clear_ownerid() {
  ownerid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ActorCreate::ownerid() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.ownerid)
  return ownerid_;
}
void ActorCreate::set_ownerid(::google::protobuf::uint64 value) {
  
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.ownerid)
}

// optional float posx = 16;
void ActorCreate::clear_posx() {
  posx_ = 0;
}
float ActorCreate::posx() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.posx)
  return posx_;
}
void ActorCreate::set_posx(float value) {
  
  posx_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.posx)
}

// optional float posy = 17;
void ActorCreate::clear_posy() {
  posy_ = 0;
}
float ActorCreate::posy() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.posy)
  return posy_;
}
void ActorCreate::set_posy(float value) {
  
  posy_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.posy)
}

// optional float face = 18;
void ActorCreate::clear_face() {
  face_ = 0;
}
float ActorCreate::face() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.face)
  return face_;
}
void ActorCreate::set_face(float value) {
  
  face_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.face)
}

// optional uint32 monster_gen_id = 20;
void ActorCreate::clear_monster_gen_id() {
  monster_gen_id_ = 0u;
}
::google::protobuf::uint32 ActorCreate::monster_gen_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.monster_gen_id)
  return monster_gen_id_;
}
void ActorCreate::set_monster_gen_id(::google::protobuf::uint32 value) {
  
  monster_gen_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.monster_gen_id)
}

inline const ActorCreate* ActorCreate::internal_default_instance() {
  return &ActorCreate_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorDestory::kActorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorDestory::ActorDestory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.ActorDestory)
}

void ActorDestory::InitAsDefaultInstance() {
}

ActorDestory::ActorDestory(const ActorDestory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.ActorDestory)
}

void ActorDestory::SharedCtor() {
  actor_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ActorDestory::~ActorDestory() {
  // @@protoc_insertion_point(destructor:ServerMSG.ActorDestory)
  SharedDtor();
}

void ActorDestory::SharedDtor() {
}

void ActorDestory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorDestory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActorDestory_descriptor_;
}

const ActorDestory& ActorDestory::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ActorDestory> ActorDestory_default_instance_;

ActorDestory* ActorDestory::New(::google::protobuf::Arena* arena) const {
  ActorDestory* n = new ActorDestory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorDestory::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.ActorDestory)
  actor_id_ = GOOGLE_ULONGLONG(0);
}

bool ActorDestory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.ActorDestory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 actor_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &actor_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.ActorDestory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.ActorDestory)
  return false;
#undef DO_
}

void ActorDestory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.ActorDestory)
  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->actor_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.ActorDestory)
}

::google::protobuf::uint8* ActorDestory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.ActorDestory)
  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->actor_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.ActorDestory)
  return target;
}

size_t ActorDestory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.ActorDestory)
  size_t total_size = 0;

  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->actor_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorDestory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.ActorDestory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ActorDestory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorDestory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.ActorDestory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.ActorDestory)
    UnsafeMergeFrom(*source);
  }
}

void ActorDestory::MergeFrom(const ActorDestory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.ActorDestory)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ActorDestory::UnsafeMergeFrom(const ActorDestory& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.actor_id() != 0) {
    set_actor_id(from.actor_id());
  }
}

void ActorDestory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.ActorDestory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorDestory::CopyFrom(const ActorDestory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.ActorDestory)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ActorDestory::IsInitialized() const {

  return true;
}

void ActorDestory::Swap(ActorDestory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorDestory::InternalSwap(ActorDestory* other) {
  std::swap(actor_id_, other->actor_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorDestory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActorDestory_descriptor_;
  metadata.reflection = ActorDestory_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorDestory

// optional uint64 actor_id = 1;
void ActorDestory::clear_actor_id() {
  actor_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ActorDestory::actor_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorDestory.actor_id)
  return actor_id_;
}
void ActorDestory::set_actor_id(::google::protobuf::uint64 value) {
  
  actor_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorDestory.actor_id)
}

inline const ActorDestory* ActorDestory::internal_default_instance() {
  return &ActorDestory_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorMove::kActorIdFieldNumber;
const int ActorMove::kXFieldNumber;
const int ActorMove::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorMove::ActorMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.ActorMove)
}

void ActorMove::InitAsDefaultInstance() {
}

ActorMove::ActorMove(const ActorMove& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.ActorMove)
}

void ActorMove::SharedCtor() {
  ::memset(&actor_id_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&actor_id_) + sizeof(y_));
  _cached_size_ = 0;
}

ActorMove::~ActorMove() {
  // @@protoc_insertion_point(destructor:ServerMSG.ActorMove)
  SharedDtor();
}

void ActorMove::SharedDtor() {
}

void ActorMove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorMove::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActorMove_descriptor_;
}

const ActorMove& ActorMove::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ActorMove> ActorMove_default_instance_;

ActorMove* ActorMove::New(::google::protobuf::Arena* arena) const {
  ActorMove* n = new ActorMove;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorMove::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.ActorMove)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ActorMove, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ActorMove*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(actor_id_, y_);

#undef ZR_HELPER_
#undef ZR_

}

bool ActorMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.ActorMove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 actor_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &actor_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_x;
        break;
      }

      // optional float x = 2;
      case 2: {
        if (tag == 21) {
         parse_x:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_y;
        break;
      }

      // optional float y = 3;
      case 3: {
        if (tag == 29) {
         parse_y:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.ActorMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.ActorMove)
  return false;
#undef DO_
}

void ActorMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.ActorMove)
  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->actor_id(), output);
  }

  // optional float x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // optional float y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.ActorMove)
}

::google::protobuf::uint8* ActorMove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.ActorMove)
  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->actor_id(), target);
  }

  // optional float x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // optional float y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.ActorMove)
  return target;
}

size_t ActorMove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.ActorMove)
  size_t total_size = 0;

  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->actor_id());
  }

  // optional float x = 2;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // optional float y = 3;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorMove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.ActorMove)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ActorMove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorMove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.ActorMove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.ActorMove)
    UnsafeMergeFrom(*source);
  }
}

void ActorMove::MergeFrom(const ActorMove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.ActorMove)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ActorMove::UnsafeMergeFrom(const ActorMove& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.actor_id() != 0) {
    set_actor_id(from.actor_id());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void ActorMove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.ActorMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorMove::CopyFrom(const ActorMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.ActorMove)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ActorMove::IsInitialized() const {

  return true;
}

void ActorMove::Swap(ActorMove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorMove::InternalSwap(ActorMove* other) {
  std::swap(actor_id_, other->actor_id_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorMove::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActorMove_descriptor_;
  metadata.reflection = ActorMove_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorMove

// optional uint64 actor_id = 1;
void ActorMove::clear_actor_id() {
  actor_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ActorMove::actor_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorMove.actor_id)
  return actor_id_;
}
void ActorMove::set_actor_id(::google::protobuf::uint64 value) {
  
  actor_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorMove.actor_id)
}

// optional float x = 2;
void ActorMove::clear_x() {
  x_ = 0;
}
float ActorMove::x() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorMove.x)
  return x_;
}
void ActorMove::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorMove.x)
}

// optional float y = 3;
void ActorMove::clear_y() {
  y_ = 0;
}
float ActorMove::y() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorMove.y)
  return y_;
}
void ActorMove::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorMove.y)
}

inline const ActorMove* ActorMove::internal_default_instance() {
  return &ActorMove_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorCastSkill::kActorIdFieldNumber;
const int ActorCastSkill::kTargetIdFieldNumber;
const int ActorCastSkill::kSkillIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorCastSkill::ActorCastSkill()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.ActorCastSkill)
}

void ActorCastSkill::InitAsDefaultInstance() {
}

ActorCastSkill::ActorCastSkill(const ActorCastSkill& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.ActorCastSkill)
}

void ActorCastSkill::SharedCtor() {
  ::memset(&actor_id_, 0, reinterpret_cast<char*>(&skill_id_) -
    reinterpret_cast<char*>(&actor_id_) + sizeof(skill_id_));
  _cached_size_ = 0;
}

ActorCastSkill::~ActorCastSkill() {
  // @@protoc_insertion_point(destructor:ServerMSG.ActorCastSkill)
  SharedDtor();
}

void ActorCastSkill::SharedDtor() {
}

void ActorCastSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorCastSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActorCastSkill_descriptor_;
}

const ActorCastSkill& ActorCastSkill::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ActorCastSkill> ActorCastSkill_default_instance_;

ActorCastSkill* ActorCastSkill::New(::google::protobuf::Arena* arena) const {
  ActorCastSkill* n = new ActorCastSkill;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorCastSkill::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.ActorCastSkill)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ActorCastSkill, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ActorCastSkill*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(actor_id_, skill_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool ActorCastSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.ActorCastSkill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 actor_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &actor_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_target_id;
        break;
      }

      // optional uint64 target_id = 2;
      case 2: {
        if (tag == 16) {
         parse_target_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &target_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_skill_id;
        break;
      }

      // optional uint32 skill_id = 3;
      case 3: {
        if (tag == 24) {
         parse_skill_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.ActorCastSkill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.ActorCastSkill)
  return false;
#undef DO_
}

void ActorCastSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.ActorCastSkill)
  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->actor_id(), output);
  }

  // optional uint64 target_id = 2;
  if (this->target_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->target_id(), output);
  }

  // optional uint32 skill_id = 3;
  if (this->skill_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->skill_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.ActorCastSkill)
}

::google::protobuf::uint8* ActorCastSkill::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.ActorCastSkill)
  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->actor_id(), target);
  }

  // optional uint64 target_id = 2;
  if (this->target_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->target_id(), target);
  }

  // optional uint32 skill_id = 3;
  if (this->skill_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->skill_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.ActorCastSkill)
  return target;
}

size_t ActorCastSkill::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.ActorCastSkill)
  size_t total_size = 0;

  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->actor_id());
  }

  // optional uint64 target_id = 2;
  if (this->target_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->target_id());
  }

  // optional uint32 skill_id = 3;
  if (this->skill_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skill_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorCastSkill::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.ActorCastSkill)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ActorCastSkill* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorCastSkill>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.ActorCastSkill)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.ActorCastSkill)
    UnsafeMergeFrom(*source);
  }
}

void ActorCastSkill::MergeFrom(const ActorCastSkill& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.ActorCastSkill)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ActorCastSkill::UnsafeMergeFrom(const ActorCastSkill& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.actor_id() != 0) {
    set_actor_id(from.actor_id());
  }
  if (from.target_id() != 0) {
    set_target_id(from.target_id());
  }
  if (from.skill_id() != 0) {
    set_skill_id(from.skill_id());
  }
}

void ActorCastSkill::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.ActorCastSkill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorCastSkill::CopyFrom(const ActorCastSkill& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.ActorCastSkill)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ActorCastSkill::IsInitialized() const {

  return true;
}

void ActorCastSkill::Swap(ActorCastSkill* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorCastSkill::InternalSwap(ActorCastSkill* other) {
  std::swap(actor_id_, other->actor_id_);
  std::swap(target_id_, other->target_id_);
  std::swap(skill_id_, other->skill_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorCastSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActorCastSkill_descriptor_;
  metadata.reflection = ActorCastSkill_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorCastSkill

// optional uint64 actor_id = 1;
void ActorCastSkill::clear_actor_id() {
  actor_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ActorCastSkill::actor_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCastSkill.actor_id)
  return actor_id_;
}
void ActorCastSkill::set_actor_id(::google::protobuf::uint64 value) {
  
  actor_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCastSkill.actor_id)
}

// optional uint64 target_id = 2;
void ActorCastSkill::clear_target_id() {
  target_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ActorCastSkill::target_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCastSkill.target_id)
  return target_id_;
}
void ActorCastSkill::set_target_id(::google::protobuf::uint64 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCastSkill.target_id)
}

// optional uint32 skill_id = 3;
void ActorCastSkill::clear_skill_id() {
  skill_id_ = 0u;
}
::google::protobuf::uint32 ActorCastSkill::skill_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCastSkill.skill_id)
  return skill_id_;
}
void ActorCastSkill::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCastSkill.skill_id)
}

inline const ActorCastSkill* ActorCastSkill::internal_default_instance() {
  return &ActorCastSkill_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorCastSkill_Fail::kActorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorCastSkill_Fail::ActorCastSkill_Fail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.ActorCastSkill_Fail)
}

void ActorCastSkill_Fail::InitAsDefaultInstance() {
}

ActorCastSkill_Fail::ActorCastSkill_Fail(const ActorCastSkill_Fail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.ActorCastSkill_Fail)
}

void ActorCastSkill_Fail::SharedCtor() {
  actor_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ActorCastSkill_Fail::~ActorCastSkill_Fail() {
  // @@protoc_insertion_point(destructor:ServerMSG.ActorCastSkill_Fail)
  SharedDtor();
}

void ActorCastSkill_Fail::SharedDtor() {
}

void ActorCastSkill_Fail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorCastSkill_Fail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActorCastSkill_Fail_descriptor_;
}

const ActorCastSkill_Fail& ActorCastSkill_Fail::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ActorCastSkill_Fail> ActorCastSkill_Fail_default_instance_;

ActorCastSkill_Fail* ActorCastSkill_Fail::New(::google::protobuf::Arena* arena) const {
  ActorCastSkill_Fail* n = new ActorCastSkill_Fail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorCastSkill_Fail::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.ActorCastSkill_Fail)
  actor_id_ = GOOGLE_ULONGLONG(0);
}

bool ActorCastSkill_Fail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.ActorCastSkill_Fail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 actor_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &actor_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.ActorCastSkill_Fail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.ActorCastSkill_Fail)
  return false;
#undef DO_
}

void ActorCastSkill_Fail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.ActorCastSkill_Fail)
  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->actor_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.ActorCastSkill_Fail)
}

::google::protobuf::uint8* ActorCastSkill_Fail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.ActorCastSkill_Fail)
  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->actor_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.ActorCastSkill_Fail)
  return target;
}

size_t ActorCastSkill_Fail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.ActorCastSkill_Fail)
  size_t total_size = 0;

  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->actor_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorCastSkill_Fail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.ActorCastSkill_Fail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ActorCastSkill_Fail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorCastSkill_Fail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.ActorCastSkill_Fail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.ActorCastSkill_Fail)
    UnsafeMergeFrom(*source);
  }
}

void ActorCastSkill_Fail::MergeFrom(const ActorCastSkill_Fail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.ActorCastSkill_Fail)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ActorCastSkill_Fail::UnsafeMergeFrom(const ActorCastSkill_Fail& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.actor_id() != 0) {
    set_actor_id(from.actor_id());
  }
}

void ActorCastSkill_Fail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.ActorCastSkill_Fail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorCastSkill_Fail::CopyFrom(const ActorCastSkill_Fail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.ActorCastSkill_Fail)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ActorCastSkill_Fail::IsInitialized() const {

  return true;
}

void ActorCastSkill_Fail::Swap(ActorCastSkill_Fail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorCastSkill_Fail::InternalSwap(ActorCastSkill_Fail* other) {
  std::swap(actor_id_, other->actor_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorCastSkill_Fail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActorCastSkill_Fail_descriptor_;
  metadata.reflection = ActorCastSkill_Fail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorCastSkill_Fail

// optional uint64 actor_id = 1;
void ActorCastSkill_Fail::clear_actor_id() {
  actor_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ActorCastSkill_Fail::actor_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCastSkill_Fail.actor_id)
  return actor_id_;
}
void ActorCastSkill_Fail::set_actor_id(::google::protobuf::uint64 value) {
  
  actor_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCastSkill_Fail.actor_id)
}

inline const ActorCastSkill_Fail* ActorCastSkill_Fail::internal_default_instance() {
  return &ActorCastSkill_Fail_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActorSetHide::kActorIdFieldNumber;
const int ActorSetHide::kHideCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActorSetHide::ActorSetHide()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.ActorSetHide)
}

void ActorSetHide::InitAsDefaultInstance() {
}

ActorSetHide::ActorSetHide(const ActorSetHide& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.ActorSetHide)
}

void ActorSetHide::SharedCtor() {
  ::memset(&actor_id_, 0, reinterpret_cast<char*>(&hide_count_) -
    reinterpret_cast<char*>(&actor_id_) + sizeof(hide_count_));
  _cached_size_ = 0;
}

ActorSetHide::~ActorSetHide() {
  // @@protoc_insertion_point(destructor:ServerMSG.ActorSetHide)
  SharedDtor();
}

void ActorSetHide::SharedDtor() {
}

void ActorSetHide::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActorSetHide::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActorSetHide_descriptor_;
}

const ActorSetHide& ActorSetHide::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ActorSetHide> ActorSetHide_default_instance_;

ActorSetHide* ActorSetHide::New(::google::protobuf::Arena* arena) const {
  ActorSetHide* n = new ActorSetHide;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActorSetHide::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.ActorSetHide)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ActorSetHide, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ActorSetHide*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(actor_id_, hide_count_);

#undef ZR_HELPER_
#undef ZR_

}

bool ActorSetHide::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.ActorSetHide)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 actor_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &actor_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_hide_count;
        break;
      }

      // optional int32 hide_count = 2;
      case 2: {
        if (tag == 16) {
         parse_hide_count:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hide_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.ActorSetHide)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.ActorSetHide)
  return false;
#undef DO_
}

void ActorSetHide::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.ActorSetHide)
  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->actor_id(), output);
  }

  // optional int32 hide_count = 2;
  if (this->hide_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hide_count(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.ActorSetHide)
}

::google::protobuf::uint8* ActorSetHide::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.ActorSetHide)
  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->actor_id(), target);
  }

  // optional int32 hide_count = 2;
  if (this->hide_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hide_count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.ActorSetHide)
  return target;
}

size_t ActorSetHide::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.ActorSetHide)
  size_t total_size = 0;

  // optional uint64 actor_id = 1;
  if (this->actor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->actor_id());
  }

  // optional int32 hide_count = 2;
  if (this->hide_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hide_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActorSetHide::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.ActorSetHide)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ActorSetHide* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActorSetHide>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.ActorSetHide)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.ActorSetHide)
    UnsafeMergeFrom(*source);
  }
}

void ActorSetHide::MergeFrom(const ActorSetHide& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.ActorSetHide)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ActorSetHide::UnsafeMergeFrom(const ActorSetHide& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.actor_id() != 0) {
    set_actor_id(from.actor_id());
  }
  if (from.hide_count() != 0) {
    set_hide_count(from.hide_count());
  }
}

void ActorSetHide::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.ActorSetHide)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActorSetHide::CopyFrom(const ActorSetHide& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.ActorSetHide)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ActorSetHide::IsInitialized() const {

  return true;
}

void ActorSetHide::Swap(ActorSetHide* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActorSetHide::InternalSwap(ActorSetHide* other) {
  std::swap(actor_id_, other->actor_id_);
  std::swap(hide_count_, other->hide_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActorSetHide::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActorSetHide_descriptor_;
  metadata.reflection = ActorSetHide_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActorSetHide

// optional uint64 actor_id = 1;
void ActorSetHide::clear_actor_id() {
  actor_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ActorSetHide::actor_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorSetHide.actor_id)
  return actor_id_;
}
void ActorSetHide::set_actor_id(::google::protobuf::uint64 value) {
  
  actor_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorSetHide.actor_id)
}

// optional int32 hide_count = 2;
void ActorSetHide::clear_hide_count() {
  hide_count_ = 0;
}
::google::protobuf::int32 ActorSetHide::hide_count() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorSetHide.hide_count)
  return hide_count_;
}
void ActorSetHide::set_hide_count(::google::protobuf::int32 value) {
  
  hide_count_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.ActorSetHide.hide_count)
}

inline const ActorSetHide* ActorSetHide::internal_default_instance() {
  return &ActorSetHide_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamCreate::kTeamIdFieldNumber;
const int TeamCreate::kLeaderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamCreate::TeamCreate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.TeamCreate)
}

void TeamCreate::InitAsDefaultInstance() {
}

TeamCreate::TeamCreate(const TeamCreate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.TeamCreate)
}

void TeamCreate::SharedCtor() {
  ::memset(&team_id_, 0, reinterpret_cast<char*>(&leader_id_) -
    reinterpret_cast<char*>(&team_id_) + sizeof(leader_id_));
  _cached_size_ = 0;
}

TeamCreate::~TeamCreate() {
  // @@protoc_insertion_point(destructor:ServerMSG.TeamCreate)
  SharedDtor();
}

void TeamCreate::SharedDtor() {
}

void TeamCreate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamCreate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamCreate_descriptor_;
}

const TeamCreate& TeamCreate::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TeamCreate> TeamCreate_default_instance_;

TeamCreate* TeamCreate::New(::google::protobuf::Arena* arena) const {
  TeamCreate* n = new TeamCreate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamCreate::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.TeamCreate)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TeamCreate, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TeamCreate*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(team_id_, leader_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool TeamCreate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.TeamCreate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 team_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_leader_id;
        break;
      }

      // optional uint64 leader_id = 2;
      case 2: {
        if (tag == 16) {
         parse_leader_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &leader_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.TeamCreate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.TeamCreate)
  return false;
#undef DO_
}

void TeamCreate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.TeamCreate)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->team_id(), output);
  }

  // optional uint64 leader_id = 2;
  if (this->leader_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->leader_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.TeamCreate)
}

::google::protobuf::uint8* TeamCreate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.TeamCreate)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->team_id(), target);
  }

  // optional uint64 leader_id = 2;
  if (this->leader_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->leader_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.TeamCreate)
  return target;
}

size_t TeamCreate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.TeamCreate)
  size_t total_size = 0;

  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->team_id());
  }

  // optional uint64 leader_id = 2;
  if (this->leader_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->leader_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamCreate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.TeamCreate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TeamCreate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamCreate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.TeamCreate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.TeamCreate)
    UnsafeMergeFrom(*source);
  }
}

void TeamCreate::MergeFrom(const TeamCreate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.TeamCreate)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TeamCreate::UnsafeMergeFrom(const TeamCreate& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.team_id() != 0) {
    set_team_id(from.team_id());
  }
  if (from.leader_id() != 0) {
    set_leader_id(from.leader_id());
  }
}

void TeamCreate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.TeamCreate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamCreate::CopyFrom(const TeamCreate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.TeamCreate)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TeamCreate::IsInitialized() const {

  return true;
}

void TeamCreate::Swap(TeamCreate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamCreate::InternalSwap(TeamCreate* other) {
  std::swap(team_id_, other->team_id_);
  std::swap(leader_id_, other->leader_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamCreate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamCreate_descriptor_;
  metadata.reflection = TeamCreate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamCreate

// optional uint64 team_id = 1;
void TeamCreate::clear_team_id() {
  team_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamCreate::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamCreate.team_id)
  return team_id_;
}
void TeamCreate::set_team_id(::google::protobuf::uint64 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamCreate.team_id)
}

// optional uint64 leader_id = 2;
void TeamCreate::clear_leader_id() {
  leader_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamCreate::leader_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamCreate.leader_id)
  return leader_id_;
}
void TeamCreate::set_leader_id(::google::protobuf::uint64 value) {
  
  leader_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamCreate.leader_id)
}

inline const TeamCreate* TeamCreate::internal_default_instance() {
  return &TeamCreate_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamDestory::kTeamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamDestory::TeamDestory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.TeamDestory)
}

void TeamDestory::InitAsDefaultInstance() {
}

TeamDestory::TeamDestory(const TeamDestory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.TeamDestory)
}

void TeamDestory::SharedCtor() {
  team_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

TeamDestory::~TeamDestory() {
  // @@protoc_insertion_point(destructor:ServerMSG.TeamDestory)
  SharedDtor();
}

void TeamDestory::SharedDtor() {
}

void TeamDestory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamDestory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamDestory_descriptor_;
}

const TeamDestory& TeamDestory::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TeamDestory> TeamDestory_default_instance_;

TeamDestory* TeamDestory::New(::google::protobuf::Arena* arena) const {
  TeamDestory* n = new TeamDestory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamDestory::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.TeamDestory)
  team_id_ = GOOGLE_ULONGLONG(0);
}

bool TeamDestory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.TeamDestory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 team_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.TeamDestory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.TeamDestory)
  return false;
#undef DO_
}

void TeamDestory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.TeamDestory)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->team_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.TeamDestory)
}

::google::protobuf::uint8* TeamDestory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.TeamDestory)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->team_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.TeamDestory)
  return target;
}

size_t TeamDestory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.TeamDestory)
  size_t total_size = 0;

  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->team_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamDestory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.TeamDestory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TeamDestory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamDestory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.TeamDestory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.TeamDestory)
    UnsafeMergeFrom(*source);
  }
}

void TeamDestory::MergeFrom(const TeamDestory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.TeamDestory)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TeamDestory::UnsafeMergeFrom(const TeamDestory& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.team_id() != 0) {
    set_team_id(from.team_id());
  }
}

void TeamDestory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.TeamDestory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamDestory::CopyFrom(const TeamDestory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.TeamDestory)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TeamDestory::IsInitialized() const {

  return true;
}

void TeamDestory::Swap(TeamDestory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamDestory::InternalSwap(TeamDestory* other) {
  std::swap(team_id_, other->team_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamDestory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamDestory_descriptor_;
  metadata.reflection = TeamDestory_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamDestory

// optional uint64 team_id = 1;
void TeamDestory::clear_team_id() {
  team_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamDestory::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamDestory.team_id)
  return team_id_;
}
void TeamDestory::set_team_id(::google::protobuf::uint64 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamDestory.team_id)
}

inline const TeamDestory* TeamDestory::internal_default_instance() {
  return &TeamDestory_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamQuit::kTeamIdFieldNumber;
const int TeamQuit::kOperatorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamQuit::TeamQuit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.TeamQuit)
}

void TeamQuit::InitAsDefaultInstance() {
}

TeamQuit::TeamQuit(const TeamQuit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.TeamQuit)
}

void TeamQuit::SharedCtor() {
  ::memset(&team_id_, 0, reinterpret_cast<char*>(&operator_id_) -
    reinterpret_cast<char*>(&team_id_) + sizeof(operator_id_));
  _cached_size_ = 0;
}

TeamQuit::~TeamQuit() {
  // @@protoc_insertion_point(destructor:ServerMSG.TeamQuit)
  SharedDtor();
}

void TeamQuit::SharedDtor() {
}

void TeamQuit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamQuit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamQuit_descriptor_;
}

const TeamQuit& TeamQuit::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TeamQuit> TeamQuit_default_instance_;

TeamQuit* TeamQuit::New(::google::protobuf::Arena* arena) const {
  TeamQuit* n = new TeamQuit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamQuit::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.TeamQuit)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TeamQuit, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TeamQuit*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(team_id_, operator_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool TeamQuit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.TeamQuit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 team_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_operator_id;
        break;
      }

      // optional uint64 operator_id = 2;
      case 2: {
        if (tag == 16) {
         parse_operator_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &operator_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.TeamQuit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.TeamQuit)
  return false;
#undef DO_
}

void TeamQuit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.TeamQuit)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->team_id(), output);
  }

  // optional uint64 operator_id = 2;
  if (this->operator_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->operator_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.TeamQuit)
}

::google::protobuf::uint8* TeamQuit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.TeamQuit)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->team_id(), target);
  }

  // optional uint64 operator_id = 2;
  if (this->operator_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->operator_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.TeamQuit)
  return target;
}

size_t TeamQuit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.TeamQuit)
  size_t total_size = 0;

  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->team_id());
  }

  // optional uint64 operator_id = 2;
  if (this->operator_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->operator_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamQuit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.TeamQuit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TeamQuit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamQuit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.TeamQuit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.TeamQuit)
    UnsafeMergeFrom(*source);
  }
}

void TeamQuit::MergeFrom(const TeamQuit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.TeamQuit)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TeamQuit::UnsafeMergeFrom(const TeamQuit& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.team_id() != 0) {
    set_team_id(from.team_id());
  }
  if (from.operator_id() != 0) {
    set_operator_id(from.operator_id());
  }
}

void TeamQuit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.TeamQuit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamQuit::CopyFrom(const TeamQuit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.TeamQuit)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TeamQuit::IsInitialized() const {

  return true;
}

void TeamQuit::Swap(TeamQuit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamQuit::InternalSwap(TeamQuit* other) {
  std::swap(team_id_, other->team_id_);
  std::swap(operator_id_, other->operator_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamQuit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamQuit_descriptor_;
  metadata.reflection = TeamQuit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamQuit

// optional uint64 team_id = 1;
void TeamQuit::clear_team_id() {
  team_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamQuit::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamQuit.team_id)
  return team_id_;
}
void TeamQuit::set_team_id(::google::protobuf::uint64 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamQuit.team_id)
}

// optional uint64 operator_id = 2;
void TeamQuit::clear_operator_id() {
  operator_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamQuit::operator_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamQuit.operator_id)
  return operator_id_;
}
void TeamQuit::set_operator_id(::google::protobuf::uint64 value) {
  
  operator_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamQuit.operator_id)
}

inline const TeamQuit* TeamQuit::internal_default_instance() {
  return &TeamQuit_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamKickMember::kTeamIdFieldNumber;
const int TeamKickMember::kOperatorIdFieldNumber;
const int TeamKickMember::kKickIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamKickMember::TeamKickMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.TeamKickMember)
}

void TeamKickMember::InitAsDefaultInstance() {
}

TeamKickMember::TeamKickMember(const TeamKickMember& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.TeamKickMember)
}

void TeamKickMember::SharedCtor() {
  ::memset(&team_id_, 0, reinterpret_cast<char*>(&kick_id_) -
    reinterpret_cast<char*>(&team_id_) + sizeof(kick_id_));
  _cached_size_ = 0;
}

TeamKickMember::~TeamKickMember() {
  // @@protoc_insertion_point(destructor:ServerMSG.TeamKickMember)
  SharedDtor();
}

void TeamKickMember::SharedDtor() {
}

void TeamKickMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamKickMember::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamKickMember_descriptor_;
}

const TeamKickMember& TeamKickMember::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TeamKickMember> TeamKickMember_default_instance_;

TeamKickMember* TeamKickMember::New(::google::protobuf::Arena* arena) const {
  TeamKickMember* n = new TeamKickMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamKickMember::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.TeamKickMember)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TeamKickMember, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TeamKickMember*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(team_id_, kick_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool TeamKickMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.TeamKickMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 team_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_operator_id;
        break;
      }

      // optional uint64 operator_id = 2;
      case 2: {
        if (tag == 16) {
         parse_operator_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &operator_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_kick_id;
        break;
      }

      // optional uint64 kick_id = 3;
      case 3: {
        if (tag == 24) {
         parse_kick_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &kick_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.TeamKickMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.TeamKickMember)
  return false;
#undef DO_
}

void TeamKickMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.TeamKickMember)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->team_id(), output);
  }

  // optional uint64 operator_id = 2;
  if (this->operator_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->operator_id(), output);
  }

  // optional uint64 kick_id = 3;
  if (this->kick_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->kick_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.TeamKickMember)
}

::google::protobuf::uint8* TeamKickMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.TeamKickMember)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->team_id(), target);
  }

  // optional uint64 operator_id = 2;
  if (this->operator_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->operator_id(), target);
  }

  // optional uint64 kick_id = 3;
  if (this->kick_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->kick_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.TeamKickMember)
  return target;
}

size_t TeamKickMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.TeamKickMember)
  size_t total_size = 0;

  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->team_id());
  }

  // optional uint64 operator_id = 2;
  if (this->operator_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->operator_id());
  }

  // optional uint64 kick_id = 3;
  if (this->kick_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->kick_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamKickMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.TeamKickMember)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TeamKickMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamKickMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.TeamKickMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.TeamKickMember)
    UnsafeMergeFrom(*source);
  }
}

void TeamKickMember::MergeFrom(const TeamKickMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.TeamKickMember)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TeamKickMember::UnsafeMergeFrom(const TeamKickMember& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.team_id() != 0) {
    set_team_id(from.team_id());
  }
  if (from.operator_id() != 0) {
    set_operator_id(from.operator_id());
  }
  if (from.kick_id() != 0) {
    set_kick_id(from.kick_id());
  }
}

void TeamKickMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.TeamKickMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamKickMember::CopyFrom(const TeamKickMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.TeamKickMember)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TeamKickMember::IsInitialized() const {

  return true;
}

void TeamKickMember::Swap(TeamKickMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamKickMember::InternalSwap(TeamKickMember* other) {
  std::swap(team_id_, other->team_id_);
  std::swap(operator_id_, other->operator_id_);
  std::swap(kick_id_, other->kick_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamKickMember::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamKickMember_descriptor_;
  metadata.reflection = TeamKickMember_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamKickMember

// optional uint64 team_id = 1;
void TeamKickMember::clear_team_id() {
  team_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamKickMember::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamKickMember.team_id)
  return team_id_;
}
void TeamKickMember::set_team_id(::google::protobuf::uint64 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamKickMember.team_id)
}

// optional uint64 operator_id = 2;
void TeamKickMember::clear_operator_id() {
  operator_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamKickMember::operator_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamKickMember.operator_id)
  return operator_id_;
}
void TeamKickMember::set_operator_id(::google::protobuf::uint64 value) {
  
  operator_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamKickMember.operator_id)
}

// optional uint64 kick_id = 3;
void TeamKickMember::clear_kick_id() {
  kick_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamKickMember::kick_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamKickMember.kick_id)
  return kick_id_;
}
void TeamKickMember::set_kick_id(::google::protobuf::uint64 value) {
  
  kick_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamKickMember.kick_id)
}

inline const TeamKickMember* TeamKickMember::internal_default_instance() {
  return &TeamKickMember_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamInviteMember::kTeamIdFieldNumber;
const int TeamInviteMember::kOperatorIdFieldNumber;
const int TeamInviteMember::kInviteeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamInviteMember::TeamInviteMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.TeamInviteMember)
}

void TeamInviteMember::InitAsDefaultInstance() {
}

TeamInviteMember::TeamInviteMember(const TeamInviteMember& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.TeamInviteMember)
}

void TeamInviteMember::SharedCtor() {
  ::memset(&team_id_, 0, reinterpret_cast<char*>(&invitee_id_) -
    reinterpret_cast<char*>(&team_id_) + sizeof(invitee_id_));
  _cached_size_ = 0;
}

TeamInviteMember::~TeamInviteMember() {
  // @@protoc_insertion_point(destructor:ServerMSG.TeamInviteMember)
  SharedDtor();
}

void TeamInviteMember::SharedDtor() {
}

void TeamInviteMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamInviteMember::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamInviteMember_descriptor_;
}

const TeamInviteMember& TeamInviteMember::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TeamInviteMember> TeamInviteMember_default_instance_;

TeamInviteMember* TeamInviteMember::New(::google::protobuf::Arena* arena) const {
  TeamInviteMember* n = new TeamInviteMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamInviteMember::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.TeamInviteMember)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TeamInviteMember, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TeamInviteMember*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(team_id_, invitee_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool TeamInviteMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.TeamInviteMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 team_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_operator_id;
        break;
      }

      // optional uint64 operator_id = 2;
      case 2: {
        if (tag == 16) {
         parse_operator_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &operator_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_invitee_id;
        break;
      }

      // optional uint64 invitee_id = 3;
      case 3: {
        if (tag == 24) {
         parse_invitee_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &invitee_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.TeamInviteMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.TeamInviteMember)
  return false;
#undef DO_
}

void TeamInviteMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.TeamInviteMember)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->team_id(), output);
  }

  // optional uint64 operator_id = 2;
  if (this->operator_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->operator_id(), output);
  }

  // optional uint64 invitee_id = 3;
  if (this->invitee_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->invitee_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.TeamInviteMember)
}

::google::protobuf::uint8* TeamInviteMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.TeamInviteMember)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->team_id(), target);
  }

  // optional uint64 operator_id = 2;
  if (this->operator_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->operator_id(), target);
  }

  // optional uint64 invitee_id = 3;
  if (this->invitee_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->invitee_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.TeamInviteMember)
  return target;
}

size_t TeamInviteMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.TeamInviteMember)
  size_t total_size = 0;

  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->team_id());
  }

  // optional uint64 operator_id = 2;
  if (this->operator_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->operator_id());
  }

  // optional uint64 invitee_id = 3;
  if (this->invitee_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->invitee_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamInviteMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.TeamInviteMember)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TeamInviteMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamInviteMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.TeamInviteMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.TeamInviteMember)
    UnsafeMergeFrom(*source);
  }
}

void TeamInviteMember::MergeFrom(const TeamInviteMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.TeamInviteMember)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TeamInviteMember::UnsafeMergeFrom(const TeamInviteMember& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.team_id() != 0) {
    set_team_id(from.team_id());
  }
  if (from.operator_id() != 0) {
    set_operator_id(from.operator_id());
  }
  if (from.invitee_id() != 0) {
    set_invitee_id(from.invitee_id());
  }
}

void TeamInviteMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.TeamInviteMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamInviteMember::CopyFrom(const TeamInviteMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.TeamInviteMember)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TeamInviteMember::IsInitialized() const {

  return true;
}

void TeamInviteMember::Swap(TeamInviteMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamInviteMember::InternalSwap(TeamInviteMember* other) {
  std::swap(team_id_, other->team_id_);
  std::swap(operator_id_, other->operator_id_);
  std::swap(invitee_id_, other->invitee_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamInviteMember::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamInviteMember_descriptor_;
  metadata.reflection = TeamInviteMember_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamInviteMember

// optional uint64 team_id = 1;
void TeamInviteMember::clear_team_id() {
  team_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamInviteMember::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamInviteMember.team_id)
  return team_id_;
}
void TeamInviteMember::set_team_id(::google::protobuf::uint64 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamInviteMember.team_id)
}

// optional uint64 operator_id = 2;
void TeamInviteMember::clear_operator_id() {
  operator_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamInviteMember::operator_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamInviteMember.operator_id)
  return operator_id_;
}
void TeamInviteMember::set_operator_id(::google::protobuf::uint64 value) {
  
  operator_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamInviteMember.operator_id)
}

// optional uint64 invitee_id = 3;
void TeamInviteMember::clear_invitee_id() {
  invitee_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamInviteMember::invitee_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamInviteMember.invitee_id)
  return invitee_id_;
}
void TeamInviteMember::set_invitee_id(::google::protobuf::uint64 value) {
  
  invitee_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamInviteMember.invitee_id)
}

inline const TeamInviteMember* TeamInviteMember::internal_default_instance() {
  return &TeamInviteMember_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamAcceptInvite::kTeamIdFieldNumber;
const int TeamAcceptInvite::kInviterIdFieldNumber;
const int TeamAcceptInvite::kInviteeIdFieldNumber;
const int TeamAcceptInvite::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamAcceptInvite::TeamAcceptInvite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.TeamAcceptInvite)
}

void TeamAcceptInvite::InitAsDefaultInstance() {
}

TeamAcceptInvite::TeamAcceptInvite(const TeamAcceptInvite& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.TeamAcceptInvite)
}

void TeamAcceptInvite::SharedCtor() {
  ::memset(&team_id_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&team_id_) + sizeof(result_));
  _cached_size_ = 0;
}

TeamAcceptInvite::~TeamAcceptInvite() {
  // @@protoc_insertion_point(destructor:ServerMSG.TeamAcceptInvite)
  SharedDtor();
}

void TeamAcceptInvite::SharedDtor() {
}

void TeamAcceptInvite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamAcceptInvite::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamAcceptInvite_descriptor_;
}

const TeamAcceptInvite& TeamAcceptInvite::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TeamAcceptInvite> TeamAcceptInvite_default_instance_;

TeamAcceptInvite* TeamAcceptInvite::New(::google::protobuf::Arena* arena) const {
  TeamAcceptInvite* n = new TeamAcceptInvite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamAcceptInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.TeamAcceptInvite)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TeamAcceptInvite, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TeamAcceptInvite*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(team_id_, result_);

#undef ZR_HELPER_
#undef ZR_

}

bool TeamAcceptInvite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.TeamAcceptInvite)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 team_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_inviter_id;
        break;
      }

      // optional uint64 inviter_id = 2;
      case 2: {
        if (tag == 16) {
         parse_inviter_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &inviter_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_invitee_id;
        break;
      }

      // optional uint64 invitee_id = 3;
      case 3: {
        if (tag == 24) {
         parse_invitee_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &invitee_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_result;
        break;
      }

      // optional bool result = 4;
      case 4: {
        if (tag == 32) {
         parse_result:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.TeamAcceptInvite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.TeamAcceptInvite)
  return false;
#undef DO_
}

void TeamAcceptInvite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.TeamAcceptInvite)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->team_id(), output);
  }

  // optional uint64 inviter_id = 2;
  if (this->inviter_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->inviter_id(), output);
  }

  // optional uint64 invitee_id = 3;
  if (this->invitee_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->invitee_id(), output);
  }

  // optional bool result = 4;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.TeamAcceptInvite)
}

::google::protobuf::uint8* TeamAcceptInvite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.TeamAcceptInvite)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->team_id(), target);
  }

  // optional uint64 inviter_id = 2;
  if (this->inviter_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->inviter_id(), target);
  }

  // optional uint64 invitee_id = 3;
  if (this->invitee_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->invitee_id(), target);
  }

  // optional bool result = 4;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.TeamAcceptInvite)
  return target;
}

size_t TeamAcceptInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.TeamAcceptInvite)
  size_t total_size = 0;

  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->team_id());
  }

  // optional uint64 inviter_id = 2;
  if (this->inviter_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->inviter_id());
  }

  // optional uint64 invitee_id = 3;
  if (this->invitee_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->invitee_id());
  }

  // optional bool result = 4;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamAcceptInvite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.TeamAcceptInvite)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TeamAcceptInvite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamAcceptInvite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.TeamAcceptInvite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.TeamAcceptInvite)
    UnsafeMergeFrom(*source);
  }
}

void TeamAcceptInvite::MergeFrom(const TeamAcceptInvite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.TeamAcceptInvite)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TeamAcceptInvite::UnsafeMergeFrom(const TeamAcceptInvite& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.team_id() != 0) {
    set_team_id(from.team_id());
  }
  if (from.inviter_id() != 0) {
    set_inviter_id(from.inviter_id());
  }
  if (from.invitee_id() != 0) {
    set_invitee_id(from.invitee_id());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void TeamAcceptInvite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.TeamAcceptInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamAcceptInvite::CopyFrom(const TeamAcceptInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.TeamAcceptInvite)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TeamAcceptInvite::IsInitialized() const {

  return true;
}

void TeamAcceptInvite::Swap(TeamAcceptInvite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamAcceptInvite::InternalSwap(TeamAcceptInvite* other) {
  std::swap(team_id_, other->team_id_);
  std::swap(inviter_id_, other->inviter_id_);
  std::swap(invitee_id_, other->invitee_id_);
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamAcceptInvite::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamAcceptInvite_descriptor_;
  metadata.reflection = TeamAcceptInvite_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamAcceptInvite

// optional uint64 team_id = 1;
void TeamAcceptInvite::clear_team_id() {
  team_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamAcceptInvite::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAcceptInvite.team_id)
  return team_id_;
}
void TeamAcceptInvite::set_team_id(::google::protobuf::uint64 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAcceptInvite.team_id)
}

// optional uint64 inviter_id = 2;
void TeamAcceptInvite::clear_inviter_id() {
  inviter_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamAcceptInvite::inviter_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAcceptInvite.inviter_id)
  return inviter_id_;
}
void TeamAcceptInvite::set_inviter_id(::google::protobuf::uint64 value) {
  
  inviter_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAcceptInvite.inviter_id)
}

// optional uint64 invitee_id = 3;
void TeamAcceptInvite::clear_invitee_id() {
  invitee_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamAcceptInvite::invitee_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAcceptInvite.invitee_id)
  return invitee_id_;
}
void TeamAcceptInvite::set_invitee_id(::google::protobuf::uint64 value) {
  
  invitee_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAcceptInvite.invitee_id)
}

// optional bool result = 4;
void TeamAcceptInvite::clear_result() {
  result_ = false;
}
bool TeamAcceptInvite::result() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAcceptInvite.result)
  return result_;
}
void TeamAcceptInvite::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAcceptInvite.result)
}

inline const TeamAcceptInvite* TeamAcceptInvite::internal_default_instance() {
  return &TeamAcceptInvite_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamApplyMember::kApplicantIdFieldNumber;
const int TeamApplyMember::kRespondentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamApplyMember::TeamApplyMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.TeamApplyMember)
}

void TeamApplyMember::InitAsDefaultInstance() {
}

TeamApplyMember::TeamApplyMember(const TeamApplyMember& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.TeamApplyMember)
}

void TeamApplyMember::SharedCtor() {
  ::memset(&applicant_id_, 0, reinterpret_cast<char*>(&respondent_id_) -
    reinterpret_cast<char*>(&applicant_id_) + sizeof(respondent_id_));
  _cached_size_ = 0;
}

TeamApplyMember::~TeamApplyMember() {
  // @@protoc_insertion_point(destructor:ServerMSG.TeamApplyMember)
  SharedDtor();
}

void TeamApplyMember::SharedDtor() {
}

void TeamApplyMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamApplyMember::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamApplyMember_descriptor_;
}

const TeamApplyMember& TeamApplyMember::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TeamApplyMember> TeamApplyMember_default_instance_;

TeamApplyMember* TeamApplyMember::New(::google::protobuf::Arena* arena) const {
  TeamApplyMember* n = new TeamApplyMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamApplyMember::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.TeamApplyMember)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TeamApplyMember, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TeamApplyMember*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(applicant_id_, respondent_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool TeamApplyMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.TeamApplyMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 applicant_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &applicant_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_respondent_id;
        break;
      }

      // optional uint64 respondent_id = 2;
      case 2: {
        if (tag == 16) {
         parse_respondent_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &respondent_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.TeamApplyMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.TeamApplyMember)
  return false;
#undef DO_
}

void TeamApplyMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.TeamApplyMember)
  // optional uint64 applicant_id = 1;
  if (this->applicant_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->applicant_id(), output);
  }

  // optional uint64 respondent_id = 2;
  if (this->respondent_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->respondent_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.TeamApplyMember)
}

::google::protobuf::uint8* TeamApplyMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.TeamApplyMember)
  // optional uint64 applicant_id = 1;
  if (this->applicant_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->applicant_id(), target);
  }

  // optional uint64 respondent_id = 2;
  if (this->respondent_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->respondent_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.TeamApplyMember)
  return target;
}

size_t TeamApplyMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.TeamApplyMember)
  size_t total_size = 0;

  // optional uint64 applicant_id = 1;
  if (this->applicant_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->applicant_id());
  }

  // optional uint64 respondent_id = 2;
  if (this->respondent_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->respondent_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamApplyMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.TeamApplyMember)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TeamApplyMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamApplyMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.TeamApplyMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.TeamApplyMember)
    UnsafeMergeFrom(*source);
  }
}

void TeamApplyMember::MergeFrom(const TeamApplyMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.TeamApplyMember)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TeamApplyMember::UnsafeMergeFrom(const TeamApplyMember& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.applicant_id() != 0) {
    set_applicant_id(from.applicant_id());
  }
  if (from.respondent_id() != 0) {
    set_respondent_id(from.respondent_id());
  }
}

void TeamApplyMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.TeamApplyMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamApplyMember::CopyFrom(const TeamApplyMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.TeamApplyMember)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TeamApplyMember::IsInitialized() const {

  return true;
}

void TeamApplyMember::Swap(TeamApplyMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamApplyMember::InternalSwap(TeamApplyMember* other) {
  std::swap(applicant_id_, other->applicant_id_);
  std::swap(respondent_id_, other->respondent_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamApplyMember::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamApplyMember_descriptor_;
  metadata.reflection = TeamApplyMember_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamApplyMember

// optional uint64 applicant_id = 1;
void TeamApplyMember::clear_applicant_id() {
  applicant_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamApplyMember::applicant_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamApplyMember.applicant_id)
  return applicant_id_;
}
void TeamApplyMember::set_applicant_id(::google::protobuf::uint64 value) {
  
  applicant_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamApplyMember.applicant_id)
}

// optional uint64 respondent_id = 2;
void TeamApplyMember::clear_respondent_id() {
  respondent_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamApplyMember::respondent_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamApplyMember.respondent_id)
  return respondent_id_;
}
void TeamApplyMember::set_respondent_id(::google::protobuf::uint64 value) {
  
  respondent_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamApplyMember.respondent_id)
}

inline const TeamApplyMember* TeamApplyMember::internal_default_instance() {
  return &TeamApplyMember_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamAcceptApply::kApplicantIdFieldNumber;
const int TeamAcceptApply::kRespondentIdFieldNumber;
const int TeamAcceptApply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamAcceptApply::TeamAcceptApply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.TeamAcceptApply)
}

void TeamAcceptApply::InitAsDefaultInstance() {
}

TeamAcceptApply::TeamAcceptApply(const TeamAcceptApply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.TeamAcceptApply)
}

void TeamAcceptApply::SharedCtor() {
  ::memset(&applicant_id_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&applicant_id_) + sizeof(result_));
  _cached_size_ = 0;
}

TeamAcceptApply::~TeamAcceptApply() {
  // @@protoc_insertion_point(destructor:ServerMSG.TeamAcceptApply)
  SharedDtor();
}

void TeamAcceptApply::SharedDtor() {
}

void TeamAcceptApply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamAcceptApply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamAcceptApply_descriptor_;
}

const TeamAcceptApply& TeamAcceptApply::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TeamAcceptApply> TeamAcceptApply_default_instance_;

TeamAcceptApply* TeamAcceptApply::New(::google::protobuf::Arena* arena) const {
  TeamAcceptApply* n = new TeamAcceptApply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamAcceptApply::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.TeamAcceptApply)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TeamAcceptApply, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TeamAcceptApply*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(applicant_id_, result_);

#undef ZR_HELPER_
#undef ZR_

}

bool TeamAcceptApply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.TeamAcceptApply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 applicant_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &applicant_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_respondent_id;
        break;
      }

      // optional uint64 respondent_id = 2;
      case 2: {
        if (tag == 16) {
         parse_respondent_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &respondent_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_result;
        break;
      }

      // optional bool result = 3;
      case 3: {
        if (tag == 24) {
         parse_result:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.TeamAcceptApply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.TeamAcceptApply)
  return false;
#undef DO_
}

void TeamAcceptApply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.TeamAcceptApply)
  // optional uint64 applicant_id = 1;
  if (this->applicant_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->applicant_id(), output);
  }

  // optional uint64 respondent_id = 2;
  if (this->respondent_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->respondent_id(), output);
  }

  // optional bool result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.TeamAcceptApply)
}

::google::protobuf::uint8* TeamAcceptApply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.TeamAcceptApply)
  // optional uint64 applicant_id = 1;
  if (this->applicant_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->applicant_id(), target);
  }

  // optional uint64 respondent_id = 2;
  if (this->respondent_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->respondent_id(), target);
  }

  // optional bool result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.TeamAcceptApply)
  return target;
}

size_t TeamAcceptApply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.TeamAcceptApply)
  size_t total_size = 0;

  // optional uint64 applicant_id = 1;
  if (this->applicant_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->applicant_id());
  }

  // optional uint64 respondent_id = 2;
  if (this->respondent_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->respondent_id());
  }

  // optional bool result = 3;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamAcceptApply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.TeamAcceptApply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TeamAcceptApply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamAcceptApply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.TeamAcceptApply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.TeamAcceptApply)
    UnsafeMergeFrom(*source);
  }
}

void TeamAcceptApply::MergeFrom(const TeamAcceptApply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.TeamAcceptApply)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TeamAcceptApply::UnsafeMergeFrom(const TeamAcceptApply& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.applicant_id() != 0) {
    set_applicant_id(from.applicant_id());
  }
  if (from.respondent_id() != 0) {
    set_respondent_id(from.respondent_id());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void TeamAcceptApply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.TeamAcceptApply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamAcceptApply::CopyFrom(const TeamAcceptApply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.TeamAcceptApply)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TeamAcceptApply::IsInitialized() const {

  return true;
}

void TeamAcceptApply::Swap(TeamAcceptApply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamAcceptApply::InternalSwap(TeamAcceptApply* other) {
  std::swap(applicant_id_, other->applicant_id_);
  std::swap(respondent_id_, other->respondent_id_);
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamAcceptApply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamAcceptApply_descriptor_;
  metadata.reflection = TeamAcceptApply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamAcceptApply

// optional uint64 applicant_id = 1;
void TeamAcceptApply::clear_applicant_id() {
  applicant_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamAcceptApply::applicant_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAcceptApply.applicant_id)
  return applicant_id_;
}
void TeamAcceptApply::set_applicant_id(::google::protobuf::uint64 value) {
  
  applicant_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAcceptApply.applicant_id)
}

// optional uint64 respondent_id = 2;
void TeamAcceptApply::clear_respondent_id() {
  respondent_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamAcceptApply::respondent_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAcceptApply.respondent_id)
  return respondent_id_;
}
void TeamAcceptApply::set_respondent_id(::google::protobuf::uint64 value) {
  
  respondent_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAcceptApply.respondent_id)
}

// optional bool result = 3;
void TeamAcceptApply::clear_result() {
  result_ = false;
}
bool TeamAcceptApply::result() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAcceptApply.result)
  return result_;
}
void TeamAcceptApply::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAcceptApply.result)
}

inline const TeamAcceptApply* TeamAcceptApply::internal_default_instance() {
  return &TeamAcceptApply_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamNewLeader::kTeamIdFieldNumber;
const int TeamNewLeader::kOperatorIdFieldNumber;
const int TeamNewLeader::kNewLeaderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamNewLeader::TeamNewLeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.TeamNewLeader)
}

void TeamNewLeader::InitAsDefaultInstance() {
}

TeamNewLeader::TeamNewLeader(const TeamNewLeader& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.TeamNewLeader)
}

void TeamNewLeader::SharedCtor() {
  ::memset(&team_id_, 0, reinterpret_cast<char*>(&new_leader_id_) -
    reinterpret_cast<char*>(&team_id_) + sizeof(new_leader_id_));
  _cached_size_ = 0;
}

TeamNewLeader::~TeamNewLeader() {
  // @@protoc_insertion_point(destructor:ServerMSG.TeamNewLeader)
  SharedDtor();
}

void TeamNewLeader::SharedDtor() {
}

void TeamNewLeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamNewLeader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamNewLeader_descriptor_;
}

const TeamNewLeader& TeamNewLeader::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TeamNewLeader> TeamNewLeader_default_instance_;

TeamNewLeader* TeamNewLeader::New(::google::protobuf::Arena* arena) const {
  TeamNewLeader* n = new TeamNewLeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamNewLeader::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.TeamNewLeader)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TeamNewLeader, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TeamNewLeader*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(team_id_, new_leader_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool TeamNewLeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.TeamNewLeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 team_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_operator_id;
        break;
      }

      // optional uint64 operator_id = 2;
      case 2: {
        if (tag == 16) {
         parse_operator_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &operator_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_new_leader_id;
        break;
      }

      // optional uint64 new_leader_id = 3;
      case 3: {
        if (tag == 24) {
         parse_new_leader_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &new_leader_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.TeamNewLeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.TeamNewLeader)
  return false;
#undef DO_
}

void TeamNewLeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.TeamNewLeader)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->team_id(), output);
  }

  // optional uint64 operator_id = 2;
  if (this->operator_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->operator_id(), output);
  }

  // optional uint64 new_leader_id = 3;
  if (this->new_leader_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->new_leader_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.TeamNewLeader)
}

::google::protobuf::uint8* TeamNewLeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.TeamNewLeader)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->team_id(), target);
  }

  // optional uint64 operator_id = 2;
  if (this->operator_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->operator_id(), target);
  }

  // optional uint64 new_leader_id = 3;
  if (this->new_leader_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->new_leader_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.TeamNewLeader)
  return target;
}

size_t TeamNewLeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.TeamNewLeader)
  size_t total_size = 0;

  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->team_id());
  }

  // optional uint64 operator_id = 2;
  if (this->operator_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->operator_id());
  }

  // optional uint64 new_leader_id = 3;
  if (this->new_leader_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->new_leader_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamNewLeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.TeamNewLeader)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TeamNewLeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamNewLeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.TeamNewLeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.TeamNewLeader)
    UnsafeMergeFrom(*source);
  }
}

void TeamNewLeader::MergeFrom(const TeamNewLeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.TeamNewLeader)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TeamNewLeader::UnsafeMergeFrom(const TeamNewLeader& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.team_id() != 0) {
    set_team_id(from.team_id());
  }
  if (from.operator_id() != 0) {
    set_operator_id(from.operator_id());
  }
  if (from.new_leader_id() != 0) {
    set_new_leader_id(from.new_leader_id());
  }
}

void TeamNewLeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.TeamNewLeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamNewLeader::CopyFrom(const TeamNewLeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.TeamNewLeader)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TeamNewLeader::IsInitialized() const {

  return true;
}

void TeamNewLeader::Swap(TeamNewLeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamNewLeader::InternalSwap(TeamNewLeader* other) {
  std::swap(team_id_, other->team_id_);
  std::swap(operator_id_, other->operator_id_);
  std::swap(new_leader_id_, other->new_leader_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamNewLeader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamNewLeader_descriptor_;
  metadata.reflection = TeamNewLeader_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamNewLeader

// optional uint64 team_id = 1;
void TeamNewLeader::clear_team_id() {
  team_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamNewLeader::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamNewLeader.team_id)
  return team_id_;
}
void TeamNewLeader::set_team_id(::google::protobuf::uint64 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamNewLeader.team_id)
}

// optional uint64 operator_id = 2;
void TeamNewLeader::clear_operator_id() {
  operator_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamNewLeader::operator_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamNewLeader.operator_id)
  return operator_id_;
}
void TeamNewLeader::set_operator_id(::google::protobuf::uint64 value) {
  
  operator_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamNewLeader.operator_id)
}

// optional uint64 new_leader_id = 3;
void TeamNewLeader::clear_new_leader_id() {
  new_leader_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamNewLeader::new_leader_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamNewLeader.new_leader_id)
  return new_leader_id_;
}
void TeamNewLeader::set_new_leader_id(::google::protobuf::uint64 value) {
  
  new_leader_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamNewLeader.new_leader_id)
}

inline const TeamNewLeader* TeamNewLeader::internal_default_instance() {
  return &TeamNewLeader_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamAddMember::kTeamIdFieldNumber;
const int TeamAddMember::kMemberIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamAddMember::TeamAddMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.TeamAddMember)
}

void TeamAddMember::InitAsDefaultInstance() {
}

TeamAddMember::TeamAddMember(const TeamAddMember& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.TeamAddMember)
}

void TeamAddMember::SharedCtor() {
  ::memset(&team_id_, 0, reinterpret_cast<char*>(&member_id_) -
    reinterpret_cast<char*>(&team_id_) + sizeof(member_id_));
  _cached_size_ = 0;
}

TeamAddMember::~TeamAddMember() {
  // @@protoc_insertion_point(destructor:ServerMSG.TeamAddMember)
  SharedDtor();
}

void TeamAddMember::SharedDtor() {
}

void TeamAddMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamAddMember::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamAddMember_descriptor_;
}

const TeamAddMember& TeamAddMember::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TeamAddMember> TeamAddMember_default_instance_;

TeamAddMember* TeamAddMember::New(::google::protobuf::Arena* arena) const {
  TeamAddMember* n = new TeamAddMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamAddMember::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.TeamAddMember)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TeamAddMember, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TeamAddMember*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(team_id_, member_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool TeamAddMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.TeamAddMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 team_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_member_id;
        break;
      }

      // optional uint64 member_id = 2;
      case 2: {
        if (tag == 16) {
         parse_member_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &member_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.TeamAddMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.TeamAddMember)
  return false;
#undef DO_
}

void TeamAddMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.TeamAddMember)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->team_id(), output);
  }

  // optional uint64 member_id = 2;
  if (this->member_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->member_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.TeamAddMember)
}

::google::protobuf::uint8* TeamAddMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.TeamAddMember)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->team_id(), target);
  }

  // optional uint64 member_id = 2;
  if (this->member_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->member_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.TeamAddMember)
  return target;
}

size_t TeamAddMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.TeamAddMember)
  size_t total_size = 0;

  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->team_id());
  }

  // optional uint64 member_id = 2;
  if (this->member_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->member_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamAddMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.TeamAddMember)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TeamAddMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamAddMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.TeamAddMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.TeamAddMember)
    UnsafeMergeFrom(*source);
  }
}

void TeamAddMember::MergeFrom(const TeamAddMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.TeamAddMember)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TeamAddMember::UnsafeMergeFrom(const TeamAddMember& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.team_id() != 0) {
    set_team_id(from.team_id());
  }
  if (from.member_id() != 0) {
    set_member_id(from.member_id());
  }
}

void TeamAddMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.TeamAddMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamAddMember::CopyFrom(const TeamAddMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.TeamAddMember)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TeamAddMember::IsInitialized() const {

  return true;
}

void TeamAddMember::Swap(TeamAddMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamAddMember::InternalSwap(TeamAddMember* other) {
  std::swap(team_id_, other->team_id_);
  std::swap(member_id_, other->member_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamAddMember::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamAddMember_descriptor_;
  metadata.reflection = TeamAddMember_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamAddMember

// optional uint64 team_id = 1;
void TeamAddMember::clear_team_id() {
  team_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamAddMember::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAddMember.team_id)
  return team_id_;
}
void TeamAddMember::set_team_id(::google::protobuf::uint64 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAddMember.team_id)
}

// optional uint64 member_id = 2;
void TeamAddMember::clear_member_id() {
  member_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamAddMember::member_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAddMember.member_id)
  return member_id_;
}
void TeamAddMember::set_member_id(::google::protobuf::uint64 value) {
  
  member_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAddMember.member_id)
}

inline const TeamAddMember* TeamAddMember::internal_default_instance() {
  return &TeamAddMember_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamDelMember::kTeamIdFieldNumber;
const int TeamDelMember::kMemberIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamDelMember::TeamDelMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.TeamDelMember)
}

void TeamDelMember::InitAsDefaultInstance() {
}

TeamDelMember::TeamDelMember(const TeamDelMember& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.TeamDelMember)
}

void TeamDelMember::SharedCtor() {
  ::memset(&team_id_, 0, reinterpret_cast<char*>(&member_id_) -
    reinterpret_cast<char*>(&team_id_) + sizeof(member_id_));
  _cached_size_ = 0;
}

TeamDelMember::~TeamDelMember() {
  // @@protoc_insertion_point(destructor:ServerMSG.TeamDelMember)
  SharedDtor();
}

void TeamDelMember::SharedDtor() {
}

void TeamDelMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamDelMember::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamDelMember_descriptor_;
}

const TeamDelMember& TeamDelMember::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TeamDelMember> TeamDelMember_default_instance_;

TeamDelMember* TeamDelMember::New(::google::protobuf::Arena* arena) const {
  TeamDelMember* n = new TeamDelMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamDelMember::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.TeamDelMember)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TeamDelMember, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TeamDelMember*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(team_id_, member_id_);

#undef ZR_HELPER_
#undef ZR_

}

bool TeamDelMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.TeamDelMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 team_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_member_id;
        break;
      }

      // optional uint64 member_id = 2;
      case 2: {
        if (tag == 16) {
         parse_member_id:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &member_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.TeamDelMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.TeamDelMember)
  return false;
#undef DO_
}

void TeamDelMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.TeamDelMember)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->team_id(), output);
  }

  // optional uint64 member_id = 2;
  if (this->member_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->member_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.TeamDelMember)
}

::google::protobuf::uint8* TeamDelMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.TeamDelMember)
  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->team_id(), target);
  }

  // optional uint64 member_id = 2;
  if (this->member_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->member_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.TeamDelMember)
  return target;
}

size_t TeamDelMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.TeamDelMember)
  size_t total_size = 0;

  // optional uint64 team_id = 1;
  if (this->team_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->team_id());
  }

  // optional uint64 member_id = 2;
  if (this->member_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->member_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamDelMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.TeamDelMember)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TeamDelMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamDelMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.TeamDelMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.TeamDelMember)
    UnsafeMergeFrom(*source);
  }
}

void TeamDelMember::MergeFrom(const TeamDelMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.TeamDelMember)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TeamDelMember::UnsafeMergeFrom(const TeamDelMember& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.team_id() != 0) {
    set_team_id(from.team_id());
  }
  if (from.member_id() != 0) {
    set_member_id(from.member_id());
  }
}

void TeamDelMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.TeamDelMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamDelMember::CopyFrom(const TeamDelMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.TeamDelMember)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TeamDelMember::IsInitialized() const {

  return true;
}

void TeamDelMember::Swap(TeamDelMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamDelMember::InternalSwap(TeamDelMember* other) {
  std::swap(team_id_, other->team_id_);
  std::swap(member_id_, other->member_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamDelMember::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamDelMember_descriptor_;
  metadata.reflection = TeamDelMember_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamDelMember

// optional uint64 team_id = 1;
void TeamDelMember::clear_team_id() {
  team_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamDelMember::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamDelMember.team_id)
  return team_id_;
}
void TeamDelMember::set_team_id(::google::protobuf::uint64 value) {
  
  team_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamDelMember.team_id)
}

// optional uint64 member_id = 2;
void TeamDelMember::clear_member_id() {
  member_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamDelMember::member_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamDelMember.member_id)
  return member_id_;
}
void TeamDelMember::set_member_id(::google::protobuf::uint64 value) {
  
  member_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamDelMember.member_id)
}

inline const TeamDelMember* TeamDelMember::internal_default_instance() {
  return &TeamDelMember_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamMemberInfo_Info::kMemberIdFieldNumber;
const int TeamMemberInfo_Info::kMemberLevFieldNumber;
const int TeamMemberInfo_Info::kMemberOnlineFieldNumber;
const int TeamMemberInfo_Info::kMemberNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamMemberInfo_Info::TeamMemberInfo_Info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.TeamMemberInfo.Info)
}

void TeamMemberInfo_Info::InitAsDefaultInstance() {
}

TeamMemberInfo_Info::TeamMemberInfo_Info(const TeamMemberInfo_Info& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.TeamMemberInfo.Info)
}

void TeamMemberInfo_Info::SharedCtor() {
  member_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&member_id_, 0, reinterpret_cast<char*>(&member_online_) -
    reinterpret_cast<char*>(&member_id_) + sizeof(member_online_));
  _cached_size_ = 0;
}

TeamMemberInfo_Info::~TeamMemberInfo_Info() {
  // @@protoc_insertion_point(destructor:ServerMSG.TeamMemberInfo.Info)
  SharedDtor();
}

void TeamMemberInfo_Info::SharedDtor() {
  member_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TeamMemberInfo_Info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamMemberInfo_Info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamMemberInfo_Info_descriptor_;
}

const TeamMemberInfo_Info& TeamMemberInfo_Info::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TeamMemberInfo_Info> TeamMemberInfo_Info_default_instance_;

TeamMemberInfo_Info* TeamMemberInfo_Info::New(::google::protobuf::Arena* arena) const {
  TeamMemberInfo_Info* n = new TeamMemberInfo_Info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamMemberInfo_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.TeamMemberInfo.Info)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TeamMemberInfo_Info, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TeamMemberInfo_Info*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(member_id_, member_online_);
  member_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool TeamMemberInfo_Info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.TeamMemberInfo.Info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 member_id = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &member_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_member_lev;
        break;
      }

      // optional uint32 member_lev = 2;
      case 2: {
        if (tag == 16) {
         parse_member_lev:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &member_lev_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_member_online;
        break;
      }

      // optional bool member_online = 3;
      case 3: {
        if (tag == 24) {
         parse_member_online:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &member_online_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_member_name;
        break;
      }

      // optional string member_name = 4;
      case 4: {
        if (tag == 34) {
         parse_member_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_member_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->member_name().data(), this->member_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerMSG.TeamMemberInfo.Info.member_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.TeamMemberInfo.Info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.TeamMemberInfo.Info)
  return false;
#undef DO_
}

void TeamMemberInfo_Info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.TeamMemberInfo.Info)
  // optional uint64 member_id = 1;
  if (this->member_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->member_id(), output);
  }

  // optional uint32 member_lev = 2;
  if (this->member_lev() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->member_lev(), output);
  }

  // optional bool member_online = 3;
  if (this->member_online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->member_online(), output);
  }

  // optional string member_name = 4;
  if (this->member_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->member_name().data(), this->member_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerMSG.TeamMemberInfo.Info.member_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->member_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.TeamMemberInfo.Info)
}

::google::protobuf::uint8* TeamMemberInfo_Info::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.TeamMemberInfo.Info)
  // optional uint64 member_id = 1;
  if (this->member_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->member_id(), target);
  }

  // optional uint32 member_lev = 2;
  if (this->member_lev() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->member_lev(), target);
  }

  // optional bool member_online = 3;
  if (this->member_online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->member_online(), target);
  }

  // optional string member_name = 4;
  if (this->member_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->member_name().data(), this->member_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerMSG.TeamMemberInfo.Info.member_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->member_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.TeamMemberInfo.Info)
  return target;
}

size_t TeamMemberInfo_Info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.TeamMemberInfo.Info)
  size_t total_size = 0;

  // optional uint64 member_id = 1;
  if (this->member_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->member_id());
  }

  // optional uint32 member_lev = 2;
  if (this->member_lev() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->member_lev());
  }

  // optional bool member_online = 3;
  if (this->member_online() != 0) {
    total_size += 1 + 1;
  }

  // optional string member_name = 4;
  if (this->member_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->member_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamMemberInfo_Info::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.TeamMemberInfo.Info)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TeamMemberInfo_Info* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamMemberInfo_Info>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.TeamMemberInfo.Info)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.TeamMemberInfo.Info)
    UnsafeMergeFrom(*source);
  }
}

void TeamMemberInfo_Info::MergeFrom(const TeamMemberInfo_Info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.TeamMemberInfo.Info)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TeamMemberInfo_Info::UnsafeMergeFrom(const TeamMemberInfo_Info& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.member_id() != 0) {
    set_member_id(from.member_id());
  }
  if (from.member_lev() != 0) {
    set_member_lev(from.member_lev());
  }
  if (from.member_online() != 0) {
    set_member_online(from.member_online());
  }
  if (from.member_name().size() > 0) {

    member_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.member_name_);
  }
}

void TeamMemberInfo_Info::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.TeamMemberInfo.Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamMemberInfo_Info::CopyFrom(const TeamMemberInfo_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.TeamMemberInfo.Info)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TeamMemberInfo_Info::IsInitialized() const {

  return true;
}

void TeamMemberInfo_Info::Swap(TeamMemberInfo_Info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamMemberInfo_Info::InternalSwap(TeamMemberInfo_Info* other) {
  std::swap(member_id_, other->member_id_);
  std::swap(member_lev_, other->member_lev_);
  std::swap(member_online_, other->member_online_);
  member_name_.Swap(&other->member_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamMemberInfo_Info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamMemberInfo_Info_descriptor_;
  metadata.reflection = TeamMemberInfo_Info_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamMemberInfo::kMemberListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamMemberInfo::TeamMemberInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_server_5fside_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMSG.TeamMemberInfo)
}

void TeamMemberInfo::InitAsDefaultInstance() {
}

TeamMemberInfo::TeamMemberInfo(const TeamMemberInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ServerMSG.TeamMemberInfo)
}

void TeamMemberInfo::SharedCtor() {
  _cached_size_ = 0;
}

TeamMemberInfo::~TeamMemberInfo() {
  // @@protoc_insertion_point(destructor:ServerMSG.TeamMemberInfo)
  SharedDtor();
}

void TeamMemberInfo::SharedDtor() {
}

void TeamMemberInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamMemberInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TeamMemberInfo_descriptor_;
}

const TeamMemberInfo& TeamMemberInfo::default_instance() {
  protobuf_InitDefaults_server_5fside_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TeamMemberInfo> TeamMemberInfo_default_instance_;

TeamMemberInfo* TeamMemberInfo::New(::google::protobuf::Arena* arena) const {
  TeamMemberInfo* n = new TeamMemberInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamMemberInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMSG.TeamMemberInfo)
  member_list_.Clear();
}

bool TeamMemberInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMSG.TeamMemberInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ServerMSG.TeamMemberInfo.Info member_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_member_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_member_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_member_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMSG.TeamMemberInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMSG.TeamMemberInfo)
  return false;
#undef DO_
}

void TeamMemberInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMSG.TeamMemberInfo)
  // repeated .ServerMSG.TeamMemberInfo.Info member_list = 1;
  for (unsigned int i = 0, n = this->member_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->member_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ServerMSG.TeamMemberInfo)
}

::google::protobuf::uint8* TeamMemberInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMSG.TeamMemberInfo)
  // repeated .ServerMSG.TeamMemberInfo.Info member_list = 1;
  for (unsigned int i = 0, n = this->member_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->member_list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ServerMSG.TeamMemberInfo)
  return target;
}

size_t TeamMemberInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMSG.TeamMemberInfo)
  size_t total_size = 0;

  // repeated .ServerMSG.TeamMemberInfo.Info member_list = 1;
  {
    unsigned int count = this->member_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->member_list(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamMemberInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMSG.TeamMemberInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TeamMemberInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamMemberInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMSG.TeamMemberInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMSG.TeamMemberInfo)
    UnsafeMergeFrom(*source);
  }
}

void TeamMemberInfo::MergeFrom(const TeamMemberInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMSG.TeamMemberInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TeamMemberInfo::UnsafeMergeFrom(const TeamMemberInfo& from) {
  GOOGLE_DCHECK(&from != this);
  member_list_.MergeFrom(from.member_list_);
}

void TeamMemberInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMSG.TeamMemberInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamMemberInfo::CopyFrom(const TeamMemberInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMSG.TeamMemberInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TeamMemberInfo::IsInitialized() const {

  return true;
}

void TeamMemberInfo::Swap(TeamMemberInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamMemberInfo::InternalSwap(TeamMemberInfo* other) {
  member_list_.UnsafeArenaSwap(&other->member_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamMemberInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TeamMemberInfo_descriptor_;
  metadata.reflection = TeamMemberInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamMemberInfo_Info

// optional uint64 member_id = 1;
void TeamMemberInfo_Info::clear_member_id() {
  member_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamMemberInfo_Info::member_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamMemberInfo.Info.member_id)
  return member_id_;
}
void TeamMemberInfo_Info::set_member_id(::google::protobuf::uint64 value) {
  
  member_id_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamMemberInfo.Info.member_id)
}

// optional uint32 member_lev = 2;
void TeamMemberInfo_Info::clear_member_lev() {
  member_lev_ = 0u;
}
::google::protobuf::uint32 TeamMemberInfo_Info::member_lev() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamMemberInfo.Info.member_lev)
  return member_lev_;
}
void TeamMemberInfo_Info::set_member_lev(::google::protobuf::uint32 value) {
  
  member_lev_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamMemberInfo.Info.member_lev)
}

// optional bool member_online = 3;
void TeamMemberInfo_Info::clear_member_online() {
  member_online_ = false;
}
bool TeamMemberInfo_Info::member_online() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamMemberInfo.Info.member_online)
  return member_online_;
}
void TeamMemberInfo_Info::set_member_online(bool value) {
  
  member_online_ = value;
  // @@protoc_insertion_point(field_set:ServerMSG.TeamMemberInfo.Info.member_online)
}

// optional string member_name = 4;
void TeamMemberInfo_Info::clear_member_name() {
  member_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TeamMemberInfo_Info::member_name() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamMemberInfo.Info.member_name)
  return member_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TeamMemberInfo_Info::set_member_name(const ::std::string& value) {
  
  member_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamMemberInfo.Info.member_name)
}
void TeamMemberInfo_Info::set_member_name(const char* value) {
  
  member_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.TeamMemberInfo.Info.member_name)
}
void TeamMemberInfo_Info::set_member_name(const char* value, size_t size) {
  
  member_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.TeamMemberInfo.Info.member_name)
}
::std::string* TeamMemberInfo_Info::mutable_member_name() {
  
  // @@protoc_insertion_point(field_mutable:ServerMSG.TeamMemberInfo.Info.member_name)
  return member_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TeamMemberInfo_Info::release_member_name() {
  // @@protoc_insertion_point(field_release:ServerMSG.TeamMemberInfo.Info.member_name)
  
  return member_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TeamMemberInfo_Info::set_allocated_member_name(::std::string* member_name) {
  if (member_name != NULL) {
    
  } else {
    
  }
  member_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), member_name);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.TeamMemberInfo.Info.member_name)
}

inline const TeamMemberInfo_Info* TeamMemberInfo_Info::internal_default_instance() {
  return &TeamMemberInfo_Info_default_instance_.get();
}
// -------------------------------------------------------------------

// TeamMemberInfo

// repeated .ServerMSG.TeamMemberInfo.Info member_list = 1;
int TeamMemberInfo::member_list_size() const {
  return member_list_.size();
}
void TeamMemberInfo::clear_member_list() {
  member_list_.Clear();
}
const ::ServerMSG::TeamMemberInfo_Info& TeamMemberInfo::member_list(int index) const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamMemberInfo.member_list)
  return member_list_.Get(index);
}
::ServerMSG::TeamMemberInfo_Info* TeamMemberInfo::mutable_member_list(int index) {
  // @@protoc_insertion_point(field_mutable:ServerMSG.TeamMemberInfo.member_list)
  return member_list_.Mutable(index);
}
::ServerMSG::TeamMemberInfo_Info* TeamMemberInfo::add_member_list() {
  // @@protoc_insertion_point(field_add:ServerMSG.TeamMemberInfo.member_list)
  return member_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::ServerMSG::TeamMemberInfo_Info >*
TeamMemberInfo::mutable_member_list() {
  // @@protoc_insertion_point(field_mutable_list:ServerMSG.TeamMemberInfo.member_list)
  return &member_list_;
}
const ::google::protobuf::RepeatedPtrField< ::ServerMSG::TeamMemberInfo_Info >&
TeamMemberInfo::member_list() const {
  // @@protoc_insertion_point(field_list:ServerMSG.TeamMemberInfo.member_list)
  return member_list_;
}

inline const TeamMemberInfo* TeamMemberInfo::internal_default_instance() {
  return &TeamMemberInfo_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ServerMSG

// @@protoc_insertion_point(global_scope)
