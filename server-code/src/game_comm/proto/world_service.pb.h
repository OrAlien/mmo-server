// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: world_service.proto

#ifndef PROTOBUF_world_5fservice_2eproto__INCLUDED
#define PROTOBUF_world_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_world_5fservice_2eproto();
void protobuf_InitDefaults_world_5fservice_2eproto();
void protobuf_AssignDesc_world_5fservice_2eproto();
void protobuf_ShutdownFile_world_5fservice_2eproto();

class CS_CREATEACTOR;
class CS_LOGIN;
class CS_SELECTACTOR;
class SC_ACTORINFOLIST;
class SC_ACTORINFOLIST_SC_ACTOR_INFO;
class SC_CREATEACTOR;
class SC_KEY;
class SC_LOGIN;
class SC_SELECTACTOR;
class SC_WAITINFO;

enum SC_LOGIN_ErrorCode {
  SC_LOGIN_ErrorCode_EC_SUCC = 0,
  SC_LOGIN_ErrorCode_EC_PROG_VER = 1,
  SC_LOGIN_ErrorCode_EC_LAST_KEY = 2,
  SC_LOGIN_ErrorCode_EC_AUTH = 3,
  SC_LOGIN_ErrorCode_EC_WAIT_AUTH = 4,
  SC_LOGIN_ErrorCode_SC_LOGIN_ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SC_LOGIN_ErrorCode_SC_LOGIN_ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SC_LOGIN_ErrorCode_IsValid(int value);
const SC_LOGIN_ErrorCode SC_LOGIN_ErrorCode_ErrorCode_MIN = SC_LOGIN_ErrorCode_EC_SUCC;
const SC_LOGIN_ErrorCode SC_LOGIN_ErrorCode_ErrorCode_MAX = SC_LOGIN_ErrorCode_EC_WAIT_AUTH;
const int SC_LOGIN_ErrorCode_ErrorCode_ARRAYSIZE = SC_LOGIN_ErrorCode_ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_LOGIN_ErrorCode_descriptor();
inline const ::std::string& SC_LOGIN_ErrorCode_Name(SC_LOGIN_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_LOGIN_ErrorCode_descriptor(), value);
}
inline bool SC_LOGIN_ErrorCode_Parse(
    const ::std::string& name, SC_LOGIN_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_LOGIN_ErrorCode>(
    SC_LOGIN_ErrorCode_descriptor(), name, value);
}
enum SC_CREATEACTOR_ErrorCode {
  SC_CREATEACTOR_ErrorCode_EC_SUCC = 0,
  SC_CREATEACTOR_ErrorCode_EC_SAME_NAME = 1,
  SC_CREATEACTOR_ErrorCode_EC_NAME_TOO_LONG = 2,
  SC_CREATEACTOR_ErrorCode_EC_NAME_TOO_SHORT = 3,
  SC_CREATEACTOR_ErrorCode_EC_NAME_ILLEGAL = 4,
  SC_CREATEACTOR_ErrorCode_EC_MAX_ACTOR = 5,
  SC_CREATEACTOR_ErrorCode_SC_CREATEACTOR_ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SC_CREATEACTOR_ErrorCode_SC_CREATEACTOR_ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SC_CREATEACTOR_ErrorCode_IsValid(int value);
const SC_CREATEACTOR_ErrorCode SC_CREATEACTOR_ErrorCode_ErrorCode_MIN = SC_CREATEACTOR_ErrorCode_EC_SUCC;
const SC_CREATEACTOR_ErrorCode SC_CREATEACTOR_ErrorCode_ErrorCode_MAX = SC_CREATEACTOR_ErrorCode_EC_MAX_ACTOR;
const int SC_CREATEACTOR_ErrorCode_ErrorCode_ARRAYSIZE = SC_CREATEACTOR_ErrorCode_ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_CREATEACTOR_ErrorCode_descriptor();
inline const ::std::string& SC_CREATEACTOR_ErrorCode_Name(SC_CREATEACTOR_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_CREATEACTOR_ErrorCode_descriptor(), value);
}
inline bool SC_CREATEACTOR_ErrorCode_Parse(
    const ::std::string& name, SC_CREATEACTOR_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_CREATEACTOR_ErrorCode>(
    SC_CREATEACTOR_ErrorCode_descriptor(), name, value);
}
enum SC_SELECTACTOR_ErrorCode {
  SC_SELECTACTOR_ErrorCode_EC_SUCC = 0,
  SC_SELECTACTOR_ErrorCode_SC_SELECTACTOR_ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SC_SELECTACTOR_ErrorCode_SC_SELECTACTOR_ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SC_SELECTACTOR_ErrorCode_IsValid(int value);
const SC_SELECTACTOR_ErrorCode SC_SELECTACTOR_ErrorCode_ErrorCode_MIN = SC_SELECTACTOR_ErrorCode_EC_SUCC;
const SC_SELECTACTOR_ErrorCode SC_SELECTACTOR_ErrorCode_ErrorCode_MAX = SC_SELECTACTOR_ErrorCode_EC_SUCC;
const int SC_SELECTACTOR_ErrorCode_ErrorCode_ARRAYSIZE = SC_SELECTACTOR_ErrorCode_ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* SC_SELECTACTOR_ErrorCode_descriptor();
inline const ::std::string& SC_SELECTACTOR_ErrorCode_Name(SC_SELECTACTOR_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    SC_SELECTACTOR_ErrorCode_descriptor(), value);
}
inline bool SC_SELECTACTOR_ErrorCode_Parse(
    const ::std::string& name, SC_SELECTACTOR_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SC_SELECTACTOR_ErrorCode>(
    SC_SELECTACTOR_ErrorCode_descriptor(), name, value);
}
// ===================================================================

class SC_KEY : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_KEY) */ {
 public:
  SC_KEY();
  virtual ~SC_KEY();

  SC_KEY(const SC_KEY& from);

  inline SC_KEY& operator=(const SC_KEY& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_KEY& default_instance();

  static const SC_KEY* internal_default_instance();

  void Swap(SC_KEY* other);

  // implements Message ----------------------------------------------

  inline SC_KEY* New() const { return New(NULL); }

  SC_KEY* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_KEY& from);
  void MergeFrom(const SC_KEY& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_KEY* other);
  void UnsafeMergeFrom(const SC_KEY& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SC_KEY)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 key_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_world_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_world_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_world_5fservice_2eproto();
  friend void protobuf_ShutdownFile_world_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_KEY> SC_KEY_default_instance_;

// -------------------------------------------------------------------

class CS_LOGIN : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_LOGIN) */ {
 public:
  CS_LOGIN();
  virtual ~CS_LOGIN();

  CS_LOGIN(const CS_LOGIN& from);

  inline CS_LOGIN& operator=(const CS_LOGIN& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_LOGIN& default_instance();

  static const CS_LOGIN* internal_default_instance();

  void Swap(CS_LOGIN* other);

  // implements Message ----------------------------------------------

  inline CS_LOGIN* New() const { return New(NULL); }

  CS_LOGIN* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_LOGIN& from);
  void MergeFrom(const CS_LOGIN& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_LOGIN* other);
  void UnsafeMergeFrom(const CS_LOGIN& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string openid = 1;
  void clear_openid();
  static const int kOpenidFieldNumber = 1;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // optional string auth = 2;
  void clear_auth();
  static const int kAuthFieldNumber = 2;
  const ::std::string& auth() const;
  void set_auth(const ::std::string& value);
  void set_auth(const char* value);
  void set_auth(const char* value, size_t size);
  ::std::string* mutable_auth();
  ::std::string* release_auth();
  void set_allocated_auth(::std::string* auth);

  // optional string last_succ_key = 3;
  void clear_last_succ_key();
  static const int kLastSuccKeyFieldNumber = 3;
  const ::std::string& last_succ_key() const;
  void set_last_succ_key(const ::std::string& value);
  void set_last_succ_key(const char* value);
  void set_last_succ_key(const char* value, size_t size);
  ::std::string* mutable_last_succ_key();
  ::std::string* release_last_succ_key();
  void set_allocated_last_succ_key(::std::string* last_succ_key);

  // optional string prog_ver = 4;
  void clear_prog_ver();
  static const int kProgVerFieldNumber = 4;
  const ::std::string& prog_ver() const;
  void set_prog_ver(const ::std::string& value);
  void set_prog_ver(const char* value);
  void set_prog_ver(const char* value, size_t size);
  ::std::string* mutable_prog_ver();
  ::std::string* release_prog_ver();
  void set_allocated_prog_ver(::std::string* prog_ver);

  // @@protoc_insertion_point(class_scope:CS_LOGIN)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::google::protobuf::internal::ArenaStringPtr auth_;
  ::google::protobuf::internal::ArenaStringPtr last_succ_key_;
  ::google::protobuf::internal::ArenaStringPtr prog_ver_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_world_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_world_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_world_5fservice_2eproto();
  friend void protobuf_ShutdownFile_world_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CS_LOGIN> CS_LOGIN_default_instance_;

// -------------------------------------------------------------------

class SC_LOGIN : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_LOGIN) */ {
 public:
  SC_LOGIN();
  virtual ~SC_LOGIN();

  SC_LOGIN(const SC_LOGIN& from);

  inline SC_LOGIN& operator=(const SC_LOGIN& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_LOGIN& default_instance();

  static const SC_LOGIN* internal_default_instance();

  void Swap(SC_LOGIN* other);

  // implements Message ----------------------------------------------

  inline SC_LOGIN* New() const { return New(NULL); }

  SC_LOGIN* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_LOGIN& from);
  void MergeFrom(const SC_LOGIN& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_LOGIN* other);
  void UnsafeMergeFrom(const SC_LOGIN& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SC_LOGIN_ErrorCode ErrorCode;
  static const ErrorCode EC_SUCC =
    SC_LOGIN_ErrorCode_EC_SUCC;
  static const ErrorCode EC_PROG_VER =
    SC_LOGIN_ErrorCode_EC_PROG_VER;
  static const ErrorCode EC_LAST_KEY =
    SC_LOGIN_ErrorCode_EC_LAST_KEY;
  static const ErrorCode EC_AUTH =
    SC_LOGIN_ErrorCode_EC_AUTH;
  static const ErrorCode EC_WAIT_AUTH =
    SC_LOGIN_ErrorCode_EC_WAIT_AUTH;
  static inline bool ErrorCode_IsValid(int value) {
    return SC_LOGIN_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    SC_LOGIN_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    SC_LOGIN_ErrorCode_ErrorCode_MAX;
  static const int ErrorCode_ARRAYSIZE =
    SC_LOGIN_ErrorCode_ErrorCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return SC_LOGIN_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return SC_LOGIN_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return SC_LOGIN_ErrorCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .SC_LOGIN.ErrorCode result_code = 1;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  ::SC_LOGIN_ErrorCode result_code() const;
  void set_result_code(::SC_LOGIN_ErrorCode value);

  // optional string detail = 2;
  void clear_detail();
  static const int kDetailFieldNumber = 2;
  const ::std::string& detail() const;
  void set_detail(const ::std::string& value);
  void set_detail(const char* value);
  void set_detail(const char* value, size_t size);
  ::std::string* mutable_detail();
  ::std::string* release_detail();
  void set_allocated_detail(::std::string* detail);

  // optional string last_succ_key = 3;
  void clear_last_succ_key();
  static const int kLastSuccKeyFieldNumber = 3;
  const ::std::string& last_succ_key() const;
  void set_last_succ_key(const ::std::string& value);
  void set_last_succ_key(const char* value);
  void set_last_succ_key(const char* value, size_t size);
  ::std::string* mutable_last_succ_key();
  ::std::string* release_last_succ_key();
  void set_allocated_last_succ_key(::std::string* last_succ_key);

  // @@protoc_insertion_point(class_scope:SC_LOGIN)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr detail_;
  ::google::protobuf::internal::ArenaStringPtr last_succ_key_;
  int result_code_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_world_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_world_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_world_5fservice_2eproto();
  friend void protobuf_ShutdownFile_world_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_LOGIN> SC_LOGIN_default_instance_;

// -------------------------------------------------------------------

class SC_WAITINFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_WAITINFO) */ {
 public:
  SC_WAITINFO();
  virtual ~SC_WAITINFO();

  SC_WAITINFO(const SC_WAITINFO& from);

  inline SC_WAITINFO& operator=(const SC_WAITINFO& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_WAITINFO& default_instance();

  static const SC_WAITINFO* internal_default_instance();

  void Swap(SC_WAITINFO* other);

  // implements Message ----------------------------------------------

  inline SC_WAITINFO* New() const { return New(NULL); }

  SC_WAITINFO* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_WAITINFO& from);
  void MergeFrom(const SC_WAITINFO& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_WAITINFO* other);
  void UnsafeMergeFrom(const SC_WAITINFO& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SC_WAITINFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_world_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_world_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_world_5fservice_2eproto();
  friend void protobuf_ShutdownFile_world_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_WAITINFO> SC_WAITINFO_default_instance_;

// -------------------------------------------------------------------

class SC_ACTORINFOLIST_SC_ACTOR_INFO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ACTORINFOLIST.SC_ACTOR_INFO) */ {
 public:
  SC_ACTORINFOLIST_SC_ACTOR_INFO();
  virtual ~SC_ACTORINFOLIST_SC_ACTOR_INFO();

  SC_ACTORINFOLIST_SC_ACTOR_INFO(const SC_ACTORINFOLIST_SC_ACTOR_INFO& from);

  inline SC_ACTORINFOLIST_SC_ACTOR_INFO& operator=(const SC_ACTORINFOLIST_SC_ACTOR_INFO& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ACTORINFOLIST_SC_ACTOR_INFO& default_instance();

  static const SC_ACTORINFOLIST_SC_ACTOR_INFO* internal_default_instance();

  void Swap(SC_ACTORINFOLIST_SC_ACTOR_INFO* other);

  // implements Message ----------------------------------------------

  inline SC_ACTORINFOLIST_SC_ACTOR_INFO* New() const { return New(NULL); }

  SC_ACTORINFOLIST_SC_ACTOR_INFO* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_ACTORINFOLIST_SC_ACTOR_INFO& from);
  void MergeFrom(const SC_ACTORINFOLIST_SC_ACTOR_INFO& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_ACTORINFOLIST_SC_ACTOR_INFO* other);
  void UnsafeMergeFrom(const SC_ACTORINFOLIST_SC_ACTOR_INFO& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 prof = 2;
  void clear_prof();
  static const int kProfFieldNumber = 2;
  ::google::protobuf::uint32 prof() const;
  void set_prof(::google::protobuf::uint32 value);

  // optional uint32 baselook = 3;
  void clear_baselook();
  static const int kBaselookFieldNumber = 3;
  ::google::protobuf::uint32 baselook() const;
  void set_baselook(::google::protobuf::uint32 value);

  // optional uint32 lev = 4;
  void clear_lev();
  static const int kLevFieldNumber = 4;
  ::google::protobuf::uint32 lev() const;
  void set_lev(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SC_ACTORINFOLIST.SC_ACTOR_INFO)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint32 baselook_;
  ::google::protobuf::uint32 lev_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_world_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_world_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_world_5fservice_2eproto();
  friend void protobuf_ShutdownFile_world_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_ACTORINFOLIST_SC_ACTOR_INFO> SC_ACTORINFOLIST_SC_ACTOR_INFO_default_instance_;

// -------------------------------------------------------------------

class SC_ACTORINFOLIST : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_ACTORINFOLIST) */ {
 public:
  SC_ACTORINFOLIST();
  virtual ~SC_ACTORINFOLIST();

  SC_ACTORINFOLIST(const SC_ACTORINFOLIST& from);

  inline SC_ACTORINFOLIST& operator=(const SC_ACTORINFOLIST& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_ACTORINFOLIST& default_instance();

  static const SC_ACTORINFOLIST* internal_default_instance();

  void Swap(SC_ACTORINFOLIST* other);

  // implements Message ----------------------------------------------

  inline SC_ACTORINFOLIST* New() const { return New(NULL); }

  SC_ACTORINFOLIST* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_ACTORINFOLIST& from);
  void MergeFrom(const SC_ACTORINFOLIST& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_ACTORINFOLIST* other);
  void UnsafeMergeFrom(const SC_ACTORINFOLIST& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SC_ACTORINFOLIST_SC_ACTOR_INFO SC_ACTOR_INFO;

  // accessors -------------------------------------------------------

  // repeated .SC_ACTORINFOLIST.SC_ACTOR_INFO list = 1;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 1;
  const ::SC_ACTORINFOLIST_SC_ACTOR_INFO& list(int index) const;
  ::SC_ACTORINFOLIST_SC_ACTOR_INFO* mutable_list(int index);
  ::SC_ACTORINFOLIST_SC_ACTOR_INFO* add_list();
  ::google::protobuf::RepeatedPtrField< ::SC_ACTORINFOLIST_SC_ACTOR_INFO >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::SC_ACTORINFOLIST_SC_ACTOR_INFO >&
      list() const;

  // @@protoc_insertion_point(class_scope:SC_ACTORINFOLIST)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::SC_ACTORINFOLIST_SC_ACTOR_INFO > list_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_world_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_world_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_world_5fservice_2eproto();
  friend void protobuf_ShutdownFile_world_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_ACTORINFOLIST> SC_ACTORINFOLIST_default_instance_;

// -------------------------------------------------------------------

class CS_CREATEACTOR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_CREATEACTOR) */ {
 public:
  CS_CREATEACTOR();
  virtual ~CS_CREATEACTOR();

  CS_CREATEACTOR(const CS_CREATEACTOR& from);

  inline CS_CREATEACTOR& operator=(const CS_CREATEACTOR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_CREATEACTOR& default_instance();

  static const CS_CREATEACTOR* internal_default_instance();

  void Swap(CS_CREATEACTOR* other);

  // implements Message ----------------------------------------------

  inline CS_CREATEACTOR* New() const { return New(NULL); }

  CS_CREATEACTOR* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_CREATEACTOR& from);
  void MergeFrom(const CS_CREATEACTOR& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_CREATEACTOR* other);
  void UnsafeMergeFrom(const CS_CREATEACTOR& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 prof = 2;
  void clear_prof();
  static const int kProfFieldNumber = 2;
  ::google::protobuf::uint32 prof() const;
  void set_prof(::google::protobuf::uint32 value);

  // optional uint32 baselook = 3;
  void clear_baselook();
  static const int kBaselookFieldNumber = 3;
  ::google::protobuf::uint32 baselook() const;
  void set_baselook(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CS_CREATEACTOR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 prof_;
  ::google::protobuf::uint32 baselook_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_world_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_world_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_world_5fservice_2eproto();
  friend void protobuf_ShutdownFile_world_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CS_CREATEACTOR> CS_CREATEACTOR_default_instance_;

// -------------------------------------------------------------------

class SC_CREATEACTOR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_CREATEACTOR) */ {
 public:
  SC_CREATEACTOR();
  virtual ~SC_CREATEACTOR();

  SC_CREATEACTOR(const SC_CREATEACTOR& from);

  inline SC_CREATEACTOR& operator=(const SC_CREATEACTOR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_CREATEACTOR& default_instance();

  static const SC_CREATEACTOR* internal_default_instance();

  void Swap(SC_CREATEACTOR* other);

  // implements Message ----------------------------------------------

  inline SC_CREATEACTOR* New() const { return New(NULL); }

  SC_CREATEACTOR* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_CREATEACTOR& from);
  void MergeFrom(const SC_CREATEACTOR& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_CREATEACTOR* other);
  void UnsafeMergeFrom(const SC_CREATEACTOR& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SC_CREATEACTOR_ErrorCode ErrorCode;
  static const ErrorCode EC_SUCC =
    SC_CREATEACTOR_ErrorCode_EC_SUCC;
  static const ErrorCode EC_SAME_NAME =
    SC_CREATEACTOR_ErrorCode_EC_SAME_NAME;
  static const ErrorCode EC_NAME_TOO_LONG =
    SC_CREATEACTOR_ErrorCode_EC_NAME_TOO_LONG;
  static const ErrorCode EC_NAME_TOO_SHORT =
    SC_CREATEACTOR_ErrorCode_EC_NAME_TOO_SHORT;
  static const ErrorCode EC_NAME_ILLEGAL =
    SC_CREATEACTOR_ErrorCode_EC_NAME_ILLEGAL;
  static const ErrorCode EC_MAX_ACTOR =
    SC_CREATEACTOR_ErrorCode_EC_MAX_ACTOR;
  static inline bool ErrorCode_IsValid(int value) {
    return SC_CREATEACTOR_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    SC_CREATEACTOR_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    SC_CREATEACTOR_ErrorCode_ErrorCode_MAX;
  static const int ErrorCode_ARRAYSIZE =
    SC_CREATEACTOR_ErrorCode_ErrorCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return SC_CREATEACTOR_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return SC_CREATEACTOR_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return SC_CREATEACTOR_ErrorCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .SC_CREATEACTOR.ErrorCode result_code = 1;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  ::SC_CREATEACTOR_ErrorCode result_code() const;
  void set_result_code(::SC_CREATEACTOR_ErrorCode value);

  // @@protoc_insertion_point(class_scope:SC_CREATEACTOR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int result_code_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_world_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_world_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_world_5fservice_2eproto();
  friend void protobuf_ShutdownFile_world_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_CREATEACTOR> SC_CREATEACTOR_default_instance_;

// -------------------------------------------------------------------

class CS_SELECTACTOR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CS_SELECTACTOR) */ {
 public:
  CS_SELECTACTOR();
  virtual ~CS_SELECTACTOR();

  CS_SELECTACTOR(const CS_SELECTACTOR& from);

  inline CS_SELECTACTOR& operator=(const CS_SELECTACTOR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CS_SELECTACTOR& default_instance();

  static const CS_SELECTACTOR* internal_default_instance();

  void Swap(CS_SELECTACTOR* other);

  // implements Message ----------------------------------------------

  inline CS_SELECTACTOR* New() const { return New(NULL); }

  CS_SELECTACTOR* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CS_SELECTACTOR& from);
  void MergeFrom(const CS_SELECTACTOR& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CS_SELECTACTOR* other);
  void UnsafeMergeFrom(const CS_SELECTACTOR& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 actor_idx = 1;
  void clear_actor_idx();
  static const int kActorIdxFieldNumber = 1;
  ::google::protobuf::uint32 actor_idx() const;
  void set_actor_idx(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CS_SELECTACTOR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 actor_idx_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_world_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_world_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_world_5fservice_2eproto();
  friend void protobuf_ShutdownFile_world_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CS_SELECTACTOR> CS_SELECTACTOR_default_instance_;

// -------------------------------------------------------------------

class SC_SELECTACTOR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SC_SELECTACTOR) */ {
 public:
  SC_SELECTACTOR();
  virtual ~SC_SELECTACTOR();

  SC_SELECTACTOR(const SC_SELECTACTOR& from);

  inline SC_SELECTACTOR& operator=(const SC_SELECTACTOR& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SC_SELECTACTOR& default_instance();

  static const SC_SELECTACTOR* internal_default_instance();

  void Swap(SC_SELECTACTOR* other);

  // implements Message ----------------------------------------------

  inline SC_SELECTACTOR* New() const { return New(NULL); }

  SC_SELECTACTOR* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SC_SELECTACTOR& from);
  void MergeFrom(const SC_SELECTACTOR& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SC_SELECTACTOR* other);
  void UnsafeMergeFrom(const SC_SELECTACTOR& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SC_SELECTACTOR_ErrorCode ErrorCode;
  static const ErrorCode EC_SUCC =
    SC_SELECTACTOR_ErrorCode_EC_SUCC;
  static inline bool ErrorCode_IsValid(int value) {
    return SC_SELECTACTOR_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    SC_SELECTACTOR_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    SC_SELECTACTOR_ErrorCode_ErrorCode_MAX;
  static const int ErrorCode_ARRAYSIZE =
    SC_SELECTACTOR_ErrorCode_ErrorCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return SC_SELECTACTOR_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return SC_SELECTACTOR_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return SC_SELECTACTOR_ErrorCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .SC_SELECTACTOR.ErrorCode result_code = 1;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  ::SC_SELECTACTOR_ErrorCode result_code() const;
  void set_result_code(::SC_SELECTACTOR_ErrorCode value);

  // @@protoc_insertion_point(class_scope:SC_SELECTACTOR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int result_code_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_world_5fservice_2eproto_impl();
  friend void  protobuf_AddDesc_world_5fservice_2eproto_impl();
  friend void protobuf_AssignDesc_world_5fservice_2eproto();
  friend void protobuf_ShutdownFile_world_5fservice_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SC_SELECTACTOR> SC_SELECTACTOR_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SC_KEY

// optional uint32 key = 1;
inline void SC_KEY::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 SC_KEY::key() const {
  // @@protoc_insertion_point(field_get:SC_KEY.key)
  return key_;
}
inline void SC_KEY::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:SC_KEY.key)
}

inline const SC_KEY* SC_KEY::internal_default_instance() {
  return &SC_KEY_default_instance_.get();
}
// -------------------------------------------------------------------

// CS_LOGIN

// optional string openid = 1;
inline void CS_LOGIN::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CS_LOGIN::openid() const {
  // @@protoc_insertion_point(field_get:CS_LOGIN.openid)
  return openid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_LOGIN::set_openid(const ::std::string& value) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_LOGIN.openid)
}
inline void CS_LOGIN::set_openid(const char* value) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_LOGIN.openid)
}
inline void CS_LOGIN::set_openid(const char* value, size_t size) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_LOGIN.openid)
}
inline ::std::string* CS_LOGIN::mutable_openid() {
  
  // @@protoc_insertion_point(field_mutable:CS_LOGIN.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_LOGIN::release_openid() {
  // @@protoc_insertion_point(field_release:CS_LOGIN.openid)
  
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_LOGIN::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    
  } else {
    
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:CS_LOGIN.openid)
}

// optional string auth = 2;
inline void CS_LOGIN::clear_auth() {
  auth_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CS_LOGIN::auth() const {
  // @@protoc_insertion_point(field_get:CS_LOGIN.auth)
  return auth_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_LOGIN::set_auth(const ::std::string& value) {
  
  auth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_LOGIN.auth)
}
inline void CS_LOGIN::set_auth(const char* value) {
  
  auth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_LOGIN.auth)
}
inline void CS_LOGIN::set_auth(const char* value, size_t size) {
  
  auth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_LOGIN.auth)
}
inline ::std::string* CS_LOGIN::mutable_auth() {
  
  // @@protoc_insertion_point(field_mutable:CS_LOGIN.auth)
  return auth_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_LOGIN::release_auth() {
  // @@protoc_insertion_point(field_release:CS_LOGIN.auth)
  
  return auth_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_LOGIN::set_allocated_auth(::std::string* auth) {
  if (auth != NULL) {
    
  } else {
    
  }
  auth_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth);
  // @@protoc_insertion_point(field_set_allocated:CS_LOGIN.auth)
}

// optional string last_succ_key = 3;
inline void CS_LOGIN::clear_last_succ_key() {
  last_succ_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CS_LOGIN::last_succ_key() const {
  // @@protoc_insertion_point(field_get:CS_LOGIN.last_succ_key)
  return last_succ_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_LOGIN::set_last_succ_key(const ::std::string& value) {
  
  last_succ_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_LOGIN.last_succ_key)
}
inline void CS_LOGIN::set_last_succ_key(const char* value) {
  
  last_succ_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_LOGIN.last_succ_key)
}
inline void CS_LOGIN::set_last_succ_key(const char* value, size_t size) {
  
  last_succ_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_LOGIN.last_succ_key)
}
inline ::std::string* CS_LOGIN::mutable_last_succ_key() {
  
  // @@protoc_insertion_point(field_mutable:CS_LOGIN.last_succ_key)
  return last_succ_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_LOGIN::release_last_succ_key() {
  // @@protoc_insertion_point(field_release:CS_LOGIN.last_succ_key)
  
  return last_succ_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_LOGIN::set_allocated_last_succ_key(::std::string* last_succ_key) {
  if (last_succ_key != NULL) {
    
  } else {
    
  }
  last_succ_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_succ_key);
  // @@protoc_insertion_point(field_set_allocated:CS_LOGIN.last_succ_key)
}

// optional string prog_ver = 4;
inline void CS_LOGIN::clear_prog_ver() {
  prog_ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CS_LOGIN::prog_ver() const {
  // @@protoc_insertion_point(field_get:CS_LOGIN.prog_ver)
  return prog_ver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_LOGIN::set_prog_ver(const ::std::string& value) {
  
  prog_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_LOGIN.prog_ver)
}
inline void CS_LOGIN::set_prog_ver(const char* value) {
  
  prog_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_LOGIN.prog_ver)
}
inline void CS_LOGIN::set_prog_ver(const char* value, size_t size) {
  
  prog_ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_LOGIN.prog_ver)
}
inline ::std::string* CS_LOGIN::mutable_prog_ver() {
  
  // @@protoc_insertion_point(field_mutable:CS_LOGIN.prog_ver)
  return prog_ver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_LOGIN::release_prog_ver() {
  // @@protoc_insertion_point(field_release:CS_LOGIN.prog_ver)
  
  return prog_ver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_LOGIN::set_allocated_prog_ver(::std::string* prog_ver) {
  if (prog_ver != NULL) {
    
  } else {
    
  }
  prog_ver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prog_ver);
  // @@protoc_insertion_point(field_set_allocated:CS_LOGIN.prog_ver)
}

inline const CS_LOGIN* CS_LOGIN::internal_default_instance() {
  return &CS_LOGIN_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_LOGIN

// optional .SC_LOGIN.ErrorCode result_code = 1;
inline void SC_LOGIN::clear_result_code() {
  result_code_ = 0;
}
inline ::SC_LOGIN_ErrorCode SC_LOGIN::result_code() const {
  // @@protoc_insertion_point(field_get:SC_LOGIN.result_code)
  return static_cast< ::SC_LOGIN_ErrorCode >(result_code_);
}
inline void SC_LOGIN::set_result_code(::SC_LOGIN_ErrorCode value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:SC_LOGIN.result_code)
}

// optional string detail = 2;
inline void SC_LOGIN::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SC_LOGIN::detail() const {
  // @@protoc_insertion_point(field_get:SC_LOGIN.detail)
  return detail_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_LOGIN::set_detail(const ::std::string& value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_LOGIN.detail)
}
inline void SC_LOGIN::set_detail(const char* value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_LOGIN.detail)
}
inline void SC_LOGIN::set_detail(const char* value, size_t size) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_LOGIN.detail)
}
inline ::std::string* SC_LOGIN::mutable_detail() {
  
  // @@protoc_insertion_point(field_mutable:SC_LOGIN.detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_LOGIN::release_detail() {
  // @@protoc_insertion_point(field_release:SC_LOGIN.detail)
  
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_LOGIN::set_allocated_detail(::std::string* detail) {
  if (detail != NULL) {
    
  } else {
    
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:SC_LOGIN.detail)
}

// optional string last_succ_key = 3;
inline void SC_LOGIN::clear_last_succ_key() {
  last_succ_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SC_LOGIN::last_succ_key() const {
  // @@protoc_insertion_point(field_get:SC_LOGIN.last_succ_key)
  return last_succ_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_LOGIN::set_last_succ_key(const ::std::string& value) {
  
  last_succ_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_LOGIN.last_succ_key)
}
inline void SC_LOGIN::set_last_succ_key(const char* value) {
  
  last_succ_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_LOGIN.last_succ_key)
}
inline void SC_LOGIN::set_last_succ_key(const char* value, size_t size) {
  
  last_succ_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_LOGIN.last_succ_key)
}
inline ::std::string* SC_LOGIN::mutable_last_succ_key() {
  
  // @@protoc_insertion_point(field_mutable:SC_LOGIN.last_succ_key)
  return last_succ_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_LOGIN::release_last_succ_key() {
  // @@protoc_insertion_point(field_release:SC_LOGIN.last_succ_key)
  
  return last_succ_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_LOGIN::set_allocated_last_succ_key(::std::string* last_succ_key) {
  if (last_succ_key != NULL) {
    
  } else {
    
  }
  last_succ_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_succ_key);
  // @@protoc_insertion_point(field_set_allocated:SC_LOGIN.last_succ_key)
}

inline const SC_LOGIN* SC_LOGIN::internal_default_instance() {
  return &SC_LOGIN_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_WAITINFO

inline const SC_WAITINFO* SC_WAITINFO::internal_default_instance() {
  return &SC_WAITINFO_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_ACTORINFOLIST_SC_ACTOR_INFO

// optional string name = 1;
inline void SC_ACTORINFOLIST_SC_ACTOR_INFO::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SC_ACTORINFOLIST_SC_ACTOR_INFO::name() const {
  // @@protoc_insertion_point(field_get:SC_ACTORINFOLIST.SC_ACTOR_INFO.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ACTORINFOLIST_SC_ACTOR_INFO::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SC_ACTORINFOLIST.SC_ACTOR_INFO.name)
}
inline void SC_ACTORINFOLIST_SC_ACTOR_INFO::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SC_ACTORINFOLIST.SC_ACTOR_INFO.name)
}
inline void SC_ACTORINFOLIST_SC_ACTOR_INFO::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SC_ACTORINFOLIST.SC_ACTOR_INFO.name)
}
inline ::std::string* SC_ACTORINFOLIST_SC_ACTOR_INFO::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:SC_ACTORINFOLIST.SC_ACTOR_INFO.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SC_ACTORINFOLIST_SC_ACTOR_INFO::release_name() {
  // @@protoc_insertion_point(field_release:SC_ACTORINFOLIST.SC_ACTOR_INFO.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SC_ACTORINFOLIST_SC_ACTOR_INFO::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:SC_ACTORINFOLIST.SC_ACTOR_INFO.name)
}

// optional uint32 prof = 2;
inline void SC_ACTORINFOLIST_SC_ACTOR_INFO::clear_prof() {
  prof_ = 0u;
}
inline ::google::protobuf::uint32 SC_ACTORINFOLIST_SC_ACTOR_INFO::prof() const {
  // @@protoc_insertion_point(field_get:SC_ACTORINFOLIST.SC_ACTOR_INFO.prof)
  return prof_;
}
inline void SC_ACTORINFOLIST_SC_ACTOR_INFO::set_prof(::google::protobuf::uint32 value) {
  
  prof_ = value;
  // @@protoc_insertion_point(field_set:SC_ACTORINFOLIST.SC_ACTOR_INFO.prof)
}

// optional uint32 baselook = 3;
inline void SC_ACTORINFOLIST_SC_ACTOR_INFO::clear_baselook() {
  baselook_ = 0u;
}
inline ::google::protobuf::uint32 SC_ACTORINFOLIST_SC_ACTOR_INFO::baselook() const {
  // @@protoc_insertion_point(field_get:SC_ACTORINFOLIST.SC_ACTOR_INFO.baselook)
  return baselook_;
}
inline void SC_ACTORINFOLIST_SC_ACTOR_INFO::set_baselook(::google::protobuf::uint32 value) {
  
  baselook_ = value;
  // @@protoc_insertion_point(field_set:SC_ACTORINFOLIST.SC_ACTOR_INFO.baselook)
}

// optional uint32 lev = 4;
inline void SC_ACTORINFOLIST_SC_ACTOR_INFO::clear_lev() {
  lev_ = 0u;
}
inline ::google::protobuf::uint32 SC_ACTORINFOLIST_SC_ACTOR_INFO::lev() const {
  // @@protoc_insertion_point(field_get:SC_ACTORINFOLIST.SC_ACTOR_INFO.lev)
  return lev_;
}
inline void SC_ACTORINFOLIST_SC_ACTOR_INFO::set_lev(::google::protobuf::uint32 value) {
  
  lev_ = value;
  // @@protoc_insertion_point(field_set:SC_ACTORINFOLIST.SC_ACTOR_INFO.lev)
}

inline const SC_ACTORINFOLIST_SC_ACTOR_INFO* SC_ACTORINFOLIST_SC_ACTOR_INFO::internal_default_instance() {
  return &SC_ACTORINFOLIST_SC_ACTOR_INFO_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_ACTORINFOLIST

// repeated .SC_ACTORINFOLIST.SC_ACTOR_INFO list = 1;
inline int SC_ACTORINFOLIST::list_size() const {
  return list_.size();
}
inline void SC_ACTORINFOLIST::clear_list() {
  list_.Clear();
}
inline const ::SC_ACTORINFOLIST_SC_ACTOR_INFO& SC_ACTORINFOLIST::list(int index) const {
  // @@protoc_insertion_point(field_get:SC_ACTORINFOLIST.list)
  return list_.Get(index);
}
inline ::SC_ACTORINFOLIST_SC_ACTOR_INFO* SC_ACTORINFOLIST::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:SC_ACTORINFOLIST.list)
  return list_.Mutable(index);
}
inline ::SC_ACTORINFOLIST_SC_ACTOR_INFO* SC_ACTORINFOLIST::add_list() {
  // @@protoc_insertion_point(field_add:SC_ACTORINFOLIST.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SC_ACTORINFOLIST_SC_ACTOR_INFO >*
SC_ACTORINFOLIST::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:SC_ACTORINFOLIST.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SC_ACTORINFOLIST_SC_ACTOR_INFO >&
SC_ACTORINFOLIST::list() const {
  // @@protoc_insertion_point(field_list:SC_ACTORINFOLIST.list)
  return list_;
}

inline const SC_ACTORINFOLIST* SC_ACTORINFOLIST::internal_default_instance() {
  return &SC_ACTORINFOLIST_default_instance_.get();
}
// -------------------------------------------------------------------

// CS_CREATEACTOR

// optional string name = 1;
inline void CS_CREATEACTOR::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CS_CREATEACTOR::name() const {
  // @@protoc_insertion_point(field_get:CS_CREATEACTOR.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_CREATEACTOR::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CS_CREATEACTOR.name)
}
inline void CS_CREATEACTOR::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CS_CREATEACTOR.name)
}
inline void CS_CREATEACTOR::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CS_CREATEACTOR.name)
}
inline ::std::string* CS_CREATEACTOR::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:CS_CREATEACTOR.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CS_CREATEACTOR::release_name() {
  // @@protoc_insertion_point(field_release:CS_CREATEACTOR.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CS_CREATEACTOR::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CS_CREATEACTOR.name)
}

// optional uint32 prof = 2;
inline void CS_CREATEACTOR::clear_prof() {
  prof_ = 0u;
}
inline ::google::protobuf::uint32 CS_CREATEACTOR::prof() const {
  // @@protoc_insertion_point(field_get:CS_CREATEACTOR.prof)
  return prof_;
}
inline void CS_CREATEACTOR::set_prof(::google::protobuf::uint32 value) {
  
  prof_ = value;
  // @@protoc_insertion_point(field_set:CS_CREATEACTOR.prof)
}

// optional uint32 baselook = 3;
inline void CS_CREATEACTOR::clear_baselook() {
  baselook_ = 0u;
}
inline ::google::protobuf::uint32 CS_CREATEACTOR::baselook() const {
  // @@protoc_insertion_point(field_get:CS_CREATEACTOR.baselook)
  return baselook_;
}
inline void CS_CREATEACTOR::set_baselook(::google::protobuf::uint32 value) {
  
  baselook_ = value;
  // @@protoc_insertion_point(field_set:CS_CREATEACTOR.baselook)
}

inline const CS_CREATEACTOR* CS_CREATEACTOR::internal_default_instance() {
  return &CS_CREATEACTOR_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_CREATEACTOR

// optional .SC_CREATEACTOR.ErrorCode result_code = 1;
inline void SC_CREATEACTOR::clear_result_code() {
  result_code_ = 0;
}
inline ::SC_CREATEACTOR_ErrorCode SC_CREATEACTOR::result_code() const {
  // @@protoc_insertion_point(field_get:SC_CREATEACTOR.result_code)
  return static_cast< ::SC_CREATEACTOR_ErrorCode >(result_code_);
}
inline void SC_CREATEACTOR::set_result_code(::SC_CREATEACTOR_ErrorCode value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:SC_CREATEACTOR.result_code)
}

inline const SC_CREATEACTOR* SC_CREATEACTOR::internal_default_instance() {
  return &SC_CREATEACTOR_default_instance_.get();
}
// -------------------------------------------------------------------

// CS_SELECTACTOR

// optional uint32 actor_idx = 1;
inline void CS_SELECTACTOR::clear_actor_idx() {
  actor_idx_ = 0u;
}
inline ::google::protobuf::uint32 CS_SELECTACTOR::actor_idx() const {
  // @@protoc_insertion_point(field_get:CS_SELECTACTOR.actor_idx)
  return actor_idx_;
}
inline void CS_SELECTACTOR::set_actor_idx(::google::protobuf::uint32 value) {
  
  actor_idx_ = value;
  // @@protoc_insertion_point(field_set:CS_SELECTACTOR.actor_idx)
}

inline const CS_SELECTACTOR* CS_SELECTACTOR::internal_default_instance() {
  return &CS_SELECTACTOR_default_instance_.get();
}
// -------------------------------------------------------------------

// SC_SELECTACTOR

// optional .SC_SELECTACTOR.ErrorCode result_code = 1;
inline void SC_SELECTACTOR::clear_result_code() {
  result_code_ = 0;
}
inline ::SC_SELECTACTOR_ErrorCode SC_SELECTACTOR::result_code() const {
  // @@protoc_insertion_point(field_get:SC_SELECTACTOR.result_code)
  return static_cast< ::SC_SELECTACTOR_ErrorCode >(result_code_);
}
inline void SC_SELECTACTOR::set_result_code(::SC_SELECTACTOR_ErrorCode value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:SC_SELECTACTOR.result_code)
}

inline const SC_SELECTACTOR* SC_SELECTACTOR::internal_default_instance() {
  return &SC_SELECTACTOR_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SC_LOGIN_ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_LOGIN_ErrorCode>() {
  return ::SC_LOGIN_ErrorCode_descriptor();
}
template <> struct is_proto_enum< ::SC_CREATEACTOR_ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_CREATEACTOR_ErrorCode>() {
  return ::SC_CREATEACTOR_ErrorCode_descriptor();
}
template <> struct is_proto_enum< ::SC_SELECTACTOR_ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SC_SELECTACTOR_ErrorCode>() {
  return ::SC_SELECTACTOR_ErrorCode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_world_5fservice_2eproto__INCLUDED
