// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config/Cfg_Achievement.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "config/Cfg_Achievement.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Cfg_Achievement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Cfg_Achievement_reflection_ = NULL;
const ::google::protobuf::Descriptor* Cfg_Achievement_Row_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Cfg_Achievement_Row_reflection_ = NULL;
const ::google::protobuf::Descriptor* Cfg_Achievement_Row_CheckData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Cfg_Achievement_Row_CheckData_reflection_ = NULL;
const ::google::protobuf::Descriptor* Cfg_Achievement_Row_AwardData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Cfg_Achievement_Row_AwardData_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* AchiConditionType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_config_2fCfg_5fAchievement_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_config_2fCfg_5fAchievement_2eproto() {
  protobuf_AddDesc_config_2fCfg_5fAchievement_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "config/Cfg_Achievement.proto");
  GOOGLE_CHECK(file != NULL);
  Cfg_Achievement_descriptor_ = file->message_type(0);
  static const int Cfg_Achievement_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement, rows_),
  };
  Cfg_Achievement_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Cfg_Achievement_descriptor_,
      Cfg_Achievement::internal_default_instance(),
      Cfg_Achievement_offsets_,
      -1,
      -1,
      -1,
      sizeof(Cfg_Achievement),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement, _internal_metadata_));
  Cfg_Achievement_Row_descriptor_ = Cfg_Achievement_descriptor_->nested_type(0);
  static const int Cfg_Achievement_Row_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row, sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row, lev_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row, prof_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row, group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row, check_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row, award_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row, award_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row, award_achipoint_),
  };
  Cfg_Achievement_Row_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Cfg_Achievement_Row_descriptor_,
      Cfg_Achievement_Row::internal_default_instance(),
      Cfg_Achievement_Row_offsets_,
      -1,
      -1,
      -1,
      sizeof(Cfg_Achievement_Row),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row, _internal_metadata_));
  Cfg_Achievement_Row_CheckData_descriptor_ = Cfg_Achievement_Row_descriptor_->nested_type(0);
  static const int Cfg_Achievement_Row_CheckData_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row_CheckData, check_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row_CheckData, val0_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row_CheckData, val1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row_CheckData, val2_),
  };
  Cfg_Achievement_Row_CheckData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Cfg_Achievement_Row_CheckData_descriptor_,
      Cfg_Achievement_Row_CheckData::internal_default_instance(),
      Cfg_Achievement_Row_CheckData_offsets_,
      -1,
      -1,
      -1,
      sizeof(Cfg_Achievement_Row_CheckData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row_CheckData, _internal_metadata_));
  Cfg_Achievement_Row_AwardData_descriptor_ = Cfg_Achievement_Row_descriptor_->nested_type(1);
  static const int Cfg_Achievement_Row_AwardData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row_AwardData, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row_AwardData, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row_AwardData, flag_),
  };
  Cfg_Achievement_Row_AwardData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Cfg_Achievement_Row_AwardData_descriptor_,
      Cfg_Achievement_Row_AwardData::internal_default_instance(),
      Cfg_Achievement_Row_AwardData_offsets_,
      -1,
      -1,
      -1,
      sizeof(Cfg_Achievement_Row_AwardData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_Achievement_Row_AwardData, _internal_metadata_));
  AchiConditionType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_config_2fCfg_5fAchievement_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Cfg_Achievement_descriptor_, Cfg_Achievement::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Cfg_Achievement_Row_descriptor_, Cfg_Achievement_Row::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Cfg_Achievement_Row_CheckData_descriptor_, Cfg_Achievement_Row_CheckData::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Cfg_Achievement_Row_AwardData_descriptor_, Cfg_Achievement_Row_AwardData::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_config_2fCfg_5fAchievement_2eproto() {
  Cfg_Achievement_default_instance_.Shutdown();
  delete Cfg_Achievement_reflection_;
  Cfg_Achievement_Row_default_instance_.Shutdown();
  delete Cfg_Achievement_Row_reflection_;
  Cfg_Achievement_Row_CheckData_default_instance_.Shutdown();
  delete Cfg_Achievement_Row_CheckData_reflection_;
  Cfg_Achievement_Row_AwardData_default_instance_.Shutdown();
  delete Cfg_Achievement_Row_AwardData_reflection_;
}

void protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  Cfg_Achievement_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Cfg_Achievement_Row_default_instance_.DefaultConstruct();
  Cfg_Achievement_Row_CheckData_default_instance_.DefaultConstruct();
  Cfg_Achievement_Row_AwardData_default_instance_.DefaultConstruct();
  Cfg_Achievement_default_instance_.get_mutable()->InitAsDefaultInstance();
  Cfg_Achievement_Row_default_instance_.get_mutable()->InitAsDefaultInstance();
  Cfg_Achievement_Row_CheckData_default_instance_.get_mutable()->InitAsDefaultInstance();
  Cfg_Achievement_Row_AwardData_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto_once_);
void protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto_once_,
                 &protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto_impl);
}
void protobuf_AddDesc_config_2fCfg_5fAchievement_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034config/Cfg_Achievement.proto\"\321\003\n\017Cfg_A"
    "chievement\022\"\n\004rows\030\001 \003(\0132\024.Cfg_Achieveme"
    "nt.Row\032\231\003\n\003Row\022\n\n\002id\030\001 \001(\r\022\014\n\004sort\030\002 \001(\r"
    "\022\014\n\004name\030\003 \001(\t\022\014\n\004desc\030\004 \001(\t\022\017\n\007lev_req\030"
    "\005 \001(\r\022\020\n\010prof_req\030\006 \001(\r\022\020\n\010group_id\030\007 \001("
    "\r\0222\n\ncheck_data\030\010 \001(\0132\036.Cfg_Achievement."
    "Row.CheckData\0222\n\naward_list\030\t \003(\0132\036.Cfg_"
    "Achievement.Row.AwardData\022\021\n\taward_exp\030\n"
    " \001(\r\022\027\n\017award_achipoint\030\013 \001(\r\032]\n\tCheckDa"
    "ta\022&\n\ncheck_type\030\001 \001(\0162\022.AchiConditionTy"
    "pe\022\014\n\004val0\030\002 \001(\r\022\014\n\004val1\030\003 \001(\r\022\014\n\004val2\030\004"
    " \001(\r\0324\n\tAwardData\022\014\n\004type\030\001 \001(\r\022\013\n\003num\030\002"
    " \001(\r\022\014\n\004flag\030\003 \001(\r*\347\003\n\021AchiConditionType"
    "\022\022\n\016CONDITION_NONE\020\000\022\023\n\017CONDITION_LEVEL\020"
    "\001\022\023\n\017CONDITION_MONEY\020\002\022\027\n\023CONDITION_ACHI"
    "POINT\020\003\022\031\n\025CONDITION_COMBATPOWER\020\004\022\031\n\025CO"
    "NDITION_USER_FRIEND\020\005\022\021\n\rCONDITION_VIP\020\006"
    "\022\022\n\016CONDITION_TASK\020\n\022\031\n\025CONDITION_SKILL_"
    "LEARN\020\013\022\027\n\023CONDITION_EQUIPMENT\020\024\022\034\n\030COND"
    "ITION_EQUIPMENT_SUIT\020\025\022\037\n\033CONDITION_EQUI"
    "PMENT_QUILITY\020\026\022 \n\034CONDITION_EQUIPMENT_A"
    "DDITION\020\027\022\036\n\032CONDITION_UPGRADE_ADDITION\020"
    "\030\022\031\n\025CONDITION_FORMULAITEM\020\031\022\031\n\025CONDITIO"
    "N_UPGRADEITEM\020\032\022\031\n\025CONDITION_FINISH_ACHI"
    "\020\033\022\030\n\024CONDITION_DATA_COUNT\020\036B\002H\002b\006proto3", 1000);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "config/Cfg_Achievement.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_config_2fCfg_5fAchievement_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_config_2fCfg_5fAchievement_2eproto_once_);
void protobuf_AddDesc_config_2fCfg_5fAchievement_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_config_2fCfg_5fAchievement_2eproto_once_,
                 &protobuf_AddDesc_config_2fCfg_5fAchievement_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_config_2fCfg_5fAchievement_2eproto {
  StaticDescriptorInitializer_config_2fCfg_5fAchievement_2eproto() {
    protobuf_AddDesc_config_2fCfg_5fAchievement_2eproto();
  }
} static_descriptor_initializer_config_2fCfg_5fAchievement_2eproto_;
const ::google::protobuf::EnumDescriptor* AchiConditionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AchiConditionType_descriptor_;
}
bool AchiConditionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 10:
    case 11:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 30:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cfg_Achievement_Row_CheckData::kCheckTypeFieldNumber;
const int Cfg_Achievement_Row_CheckData::kVal0FieldNumber;
const int Cfg_Achievement_Row_CheckData::kVal1FieldNumber;
const int Cfg_Achievement_Row_CheckData::kVal2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cfg_Achievement_Row_CheckData::Cfg_Achievement_Row_CheckData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cfg_Achievement.Row.CheckData)
}

void Cfg_Achievement_Row_CheckData::InitAsDefaultInstance() {
}

Cfg_Achievement_Row_CheckData::Cfg_Achievement_Row_CheckData(const Cfg_Achievement_Row_CheckData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cfg_Achievement.Row.CheckData)
}

void Cfg_Achievement_Row_CheckData::SharedCtor() {
  ::memset(&check_type_, 0, reinterpret_cast<char*>(&val2_) -
    reinterpret_cast<char*>(&check_type_) + sizeof(val2_));
  _cached_size_ = 0;
}

Cfg_Achievement_Row_CheckData::~Cfg_Achievement_Row_CheckData() {
  // @@protoc_insertion_point(destructor:Cfg_Achievement.Row.CheckData)
  SharedDtor();
}

void Cfg_Achievement_Row_CheckData::SharedDtor() {
}

void Cfg_Achievement_Row_CheckData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cfg_Achievement_Row_CheckData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Cfg_Achievement_Row_CheckData_descriptor_;
}

const Cfg_Achievement_Row_CheckData& Cfg_Achievement_Row_CheckData::default_instance() {
  protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Cfg_Achievement_Row_CheckData> Cfg_Achievement_Row_CheckData_default_instance_;

Cfg_Achievement_Row_CheckData* Cfg_Achievement_Row_CheckData::New(::google::protobuf::Arena* arena) const {
  Cfg_Achievement_Row_CheckData* n = new Cfg_Achievement_Row_CheckData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cfg_Achievement_Row_CheckData::UnsafeMergeFrom(const Cfg_Achievement_Row_CheckData& from) {
  MergeFrom(from);
}
void Cfg_Achievement_Row_CheckData::Swap(Cfg_Achievement_Row_CheckData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cfg_Achievement_Row_CheckData::InternalSwap(Cfg_Achievement_Row_CheckData* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Cfg_Achievement_Row_CheckData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Cfg_Achievement_Row_CheckData_descriptor_;
  metadata.reflection = Cfg_Achievement_Row_CheckData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cfg_Achievement_Row_AwardData::kTypeFieldNumber;
const int Cfg_Achievement_Row_AwardData::kNumFieldNumber;
const int Cfg_Achievement_Row_AwardData::kFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cfg_Achievement_Row_AwardData::Cfg_Achievement_Row_AwardData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cfg_Achievement.Row.AwardData)
}

void Cfg_Achievement_Row_AwardData::InitAsDefaultInstance() {
}

Cfg_Achievement_Row_AwardData::Cfg_Achievement_Row_AwardData(const Cfg_Achievement_Row_AwardData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cfg_Achievement.Row.AwardData)
}

void Cfg_Achievement_Row_AwardData::SharedCtor() {
  ::memset(&type_, 0, reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&type_) + sizeof(flag_));
  _cached_size_ = 0;
}

Cfg_Achievement_Row_AwardData::~Cfg_Achievement_Row_AwardData() {
  // @@protoc_insertion_point(destructor:Cfg_Achievement.Row.AwardData)
  SharedDtor();
}

void Cfg_Achievement_Row_AwardData::SharedDtor() {
}

void Cfg_Achievement_Row_AwardData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cfg_Achievement_Row_AwardData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Cfg_Achievement_Row_AwardData_descriptor_;
}

const Cfg_Achievement_Row_AwardData& Cfg_Achievement_Row_AwardData::default_instance() {
  protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Cfg_Achievement_Row_AwardData> Cfg_Achievement_Row_AwardData_default_instance_;

Cfg_Achievement_Row_AwardData* Cfg_Achievement_Row_AwardData::New(::google::protobuf::Arena* arena) const {
  Cfg_Achievement_Row_AwardData* n = new Cfg_Achievement_Row_AwardData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cfg_Achievement_Row_AwardData::UnsafeMergeFrom(const Cfg_Achievement_Row_AwardData& from) {
  MergeFrom(from);
}
void Cfg_Achievement_Row_AwardData::Swap(Cfg_Achievement_Row_AwardData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cfg_Achievement_Row_AwardData::InternalSwap(Cfg_Achievement_Row_AwardData* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Cfg_Achievement_Row_AwardData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Cfg_Achievement_Row_AwardData_descriptor_;
  metadata.reflection = Cfg_Achievement_Row_AwardData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cfg_Achievement_Row::kIdFieldNumber;
const int Cfg_Achievement_Row::kSortFieldNumber;
const int Cfg_Achievement_Row::kNameFieldNumber;
const int Cfg_Achievement_Row::kDescFieldNumber;
const int Cfg_Achievement_Row::kLevReqFieldNumber;
const int Cfg_Achievement_Row::kProfReqFieldNumber;
const int Cfg_Achievement_Row::kGroupIdFieldNumber;
const int Cfg_Achievement_Row::kCheckDataFieldNumber;
const int Cfg_Achievement_Row::kAwardListFieldNumber;
const int Cfg_Achievement_Row::kAwardExpFieldNumber;
const int Cfg_Achievement_Row::kAwardAchipointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cfg_Achievement_Row::Cfg_Achievement_Row()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cfg_Achievement.Row)
}

void Cfg_Achievement_Row::InitAsDefaultInstance() {
  check_data_ = const_cast< ::Cfg_Achievement_Row_CheckData*>(
      ::Cfg_Achievement_Row_CheckData::internal_default_instance());
}

Cfg_Achievement_Row::Cfg_Achievement_Row(const Cfg_Achievement_Row& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cfg_Achievement.Row)
}

void Cfg_Achievement_Row::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  check_data_ = NULL;
  ::memset(&id_, 0, reinterpret_cast<char*>(&award_achipoint_) -
    reinterpret_cast<char*>(&id_) + sizeof(award_achipoint_));
  _cached_size_ = 0;
}

Cfg_Achievement_Row::~Cfg_Achievement_Row() {
  // @@protoc_insertion_point(destructor:Cfg_Achievement.Row)
  SharedDtor();
}

void Cfg_Achievement_Row::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &Cfg_Achievement_Row_default_instance_.get()) {
    delete check_data_;
  }
}

void Cfg_Achievement_Row::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cfg_Achievement_Row::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Cfg_Achievement_Row_descriptor_;
}

const Cfg_Achievement_Row& Cfg_Achievement_Row::default_instance() {
  protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Cfg_Achievement_Row> Cfg_Achievement_Row_default_instance_;

Cfg_Achievement_Row* Cfg_Achievement_Row::New(::google::protobuf::Arena* arena) const {
  Cfg_Achievement_Row* n = new Cfg_Achievement_Row;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cfg_Achievement_Row::UnsafeMergeFrom(const Cfg_Achievement_Row& from) {
  MergeFrom(from);
}
void Cfg_Achievement_Row::Swap(Cfg_Achievement_Row* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cfg_Achievement_Row::InternalSwap(Cfg_Achievement_Row* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Cfg_Achievement_Row::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Cfg_Achievement_Row_descriptor_;
  metadata.reflection = Cfg_Achievement_Row_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cfg_Achievement::kRowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cfg_Achievement::Cfg_Achievement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cfg_Achievement)
}

void Cfg_Achievement::InitAsDefaultInstance() {
}

Cfg_Achievement::Cfg_Achievement(const Cfg_Achievement& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cfg_Achievement)
}

void Cfg_Achievement::SharedCtor() {
  _cached_size_ = 0;
}

Cfg_Achievement::~Cfg_Achievement() {
  // @@protoc_insertion_point(destructor:Cfg_Achievement)
  SharedDtor();
}

void Cfg_Achievement::SharedDtor() {
}

void Cfg_Achievement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cfg_Achievement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Cfg_Achievement_descriptor_;
}

const Cfg_Achievement& Cfg_Achievement::default_instance() {
  protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Cfg_Achievement> Cfg_Achievement_default_instance_;

Cfg_Achievement* Cfg_Achievement::New(::google::protobuf::Arena* arena) const {
  Cfg_Achievement* n = new Cfg_Achievement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cfg_Achievement::UnsafeMergeFrom(const Cfg_Achievement& from) {
  MergeFrom(from);
}
void Cfg_Achievement::Swap(Cfg_Achievement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cfg_Achievement::InternalSwap(Cfg_Achievement* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Cfg_Achievement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Cfg_Achievement_descriptor_;
  metadata.reflection = Cfg_Achievement_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Cfg_Achievement_Row_CheckData

// optional .AchiConditionType check_type = 1;
void Cfg_Achievement_Row_CheckData::clear_check_type() {
  check_type_ = 0;
}
::AchiConditionType Cfg_Achievement_Row_CheckData::check_type() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.CheckData.check_type)
  return static_cast< ::AchiConditionType >(check_type_);
}
void Cfg_Achievement_Row_CheckData::set_check_type(::AchiConditionType value) {
  
  check_type_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.CheckData.check_type)
}

// optional uint32 val0 = 2;
void Cfg_Achievement_Row_CheckData::clear_val0() {
  val0_ = 0u;
}
::google::protobuf::uint32 Cfg_Achievement_Row_CheckData::val0() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.CheckData.val0)
  return val0_;
}
void Cfg_Achievement_Row_CheckData::set_val0(::google::protobuf::uint32 value) {
  
  val0_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.CheckData.val0)
}

// optional uint32 val1 = 3;
void Cfg_Achievement_Row_CheckData::clear_val1() {
  val1_ = 0u;
}
::google::protobuf::uint32 Cfg_Achievement_Row_CheckData::val1() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.CheckData.val1)
  return val1_;
}
void Cfg_Achievement_Row_CheckData::set_val1(::google::protobuf::uint32 value) {
  
  val1_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.CheckData.val1)
}

// optional uint32 val2 = 4;
void Cfg_Achievement_Row_CheckData::clear_val2() {
  val2_ = 0u;
}
::google::protobuf::uint32 Cfg_Achievement_Row_CheckData::val2() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.CheckData.val2)
  return val2_;
}
void Cfg_Achievement_Row_CheckData::set_val2(::google::protobuf::uint32 value) {
  
  val2_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.CheckData.val2)
}

inline const Cfg_Achievement_Row_CheckData* Cfg_Achievement_Row_CheckData::internal_default_instance() {
  return &Cfg_Achievement_Row_CheckData_default_instance_.get();
}
// -------------------------------------------------------------------

// Cfg_Achievement_Row_AwardData

// optional uint32 type = 1;
void Cfg_Achievement_Row_AwardData::clear_type() {
  type_ = 0u;
}
::google::protobuf::uint32 Cfg_Achievement_Row_AwardData::type() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.AwardData.type)
  return type_;
}
void Cfg_Achievement_Row_AwardData::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.AwardData.type)
}

// optional uint32 num = 2;
void Cfg_Achievement_Row_AwardData::clear_num() {
  num_ = 0u;
}
::google::protobuf::uint32 Cfg_Achievement_Row_AwardData::num() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.AwardData.num)
  return num_;
}
void Cfg_Achievement_Row_AwardData::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.AwardData.num)
}

// optional uint32 flag = 3;
void Cfg_Achievement_Row_AwardData::clear_flag() {
  flag_ = 0u;
}
::google::protobuf::uint32 Cfg_Achievement_Row_AwardData::flag() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.AwardData.flag)
  return flag_;
}
void Cfg_Achievement_Row_AwardData::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.AwardData.flag)
}

inline const Cfg_Achievement_Row_AwardData* Cfg_Achievement_Row_AwardData::internal_default_instance() {
  return &Cfg_Achievement_Row_AwardData_default_instance_.get();
}
// -------------------------------------------------------------------

// Cfg_Achievement_Row

// optional uint32 id = 1;
void Cfg_Achievement_Row::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 Cfg_Achievement_Row::id() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.id)
  return id_;
}
void Cfg_Achievement_Row::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.id)
}

// optional uint32 sort = 2;
void Cfg_Achievement_Row::clear_sort() {
  sort_ = 0u;
}
::google::protobuf::uint32 Cfg_Achievement_Row::sort() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.sort)
  return sort_;
}
void Cfg_Achievement_Row::set_sort(::google::protobuf::uint32 value) {
  
  sort_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.sort)
}

// optional string name = 3;
void Cfg_Achievement_Row::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Cfg_Achievement_Row::name() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Cfg_Achievement_Row::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.name)
}
void Cfg_Achievement_Row::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cfg_Achievement.Row.name)
}
void Cfg_Achievement_Row::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cfg_Achievement.Row.name)
}
::std::string* Cfg_Achievement_Row::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Cfg_Achievement.Row.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Cfg_Achievement_Row::release_name() {
  // @@protoc_insertion_point(field_release:Cfg_Achievement.Row.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Cfg_Achievement_Row::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Cfg_Achievement.Row.name)
}

// optional string desc = 4;
void Cfg_Achievement_Row::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Cfg_Achievement_Row::desc() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Cfg_Achievement_Row::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.desc)
}
void Cfg_Achievement_Row::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cfg_Achievement.Row.desc)
}
void Cfg_Achievement_Row::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cfg_Achievement.Row.desc)
}
::std::string* Cfg_Achievement_Row::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:Cfg_Achievement.Row.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Cfg_Achievement_Row::release_desc() {
  // @@protoc_insertion_point(field_release:Cfg_Achievement.Row.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Cfg_Achievement_Row::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:Cfg_Achievement.Row.desc)
}

// optional uint32 lev_req = 5;
void Cfg_Achievement_Row::clear_lev_req() {
  lev_req_ = 0u;
}
::google::protobuf::uint32 Cfg_Achievement_Row::lev_req() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.lev_req)
  return lev_req_;
}
void Cfg_Achievement_Row::set_lev_req(::google::protobuf::uint32 value) {
  
  lev_req_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.lev_req)
}

// optional uint32 prof_req = 6;
void Cfg_Achievement_Row::clear_prof_req() {
  prof_req_ = 0u;
}
::google::protobuf::uint32 Cfg_Achievement_Row::prof_req() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.prof_req)
  return prof_req_;
}
void Cfg_Achievement_Row::set_prof_req(::google::protobuf::uint32 value) {
  
  prof_req_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.prof_req)
}

// optional uint32 group_id = 7;
void Cfg_Achievement_Row::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 Cfg_Achievement_Row::group_id() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.group_id)
  return group_id_;
}
void Cfg_Achievement_Row::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.group_id)
}

// optional .Cfg_Achievement.Row.CheckData check_data = 8;
bool Cfg_Achievement_Row::has_check_data() const {
  return this != internal_default_instance() && check_data_ != NULL;
}
void Cfg_Achievement_Row::clear_check_data() {
  if (GetArenaNoVirtual() == NULL && check_data_ != NULL) delete check_data_;
  check_data_ = NULL;
}
const ::Cfg_Achievement_Row_CheckData& Cfg_Achievement_Row::check_data() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.check_data)
  return check_data_ != NULL ? *check_data_
                         : *::Cfg_Achievement_Row_CheckData::internal_default_instance();
}
::Cfg_Achievement_Row_CheckData* Cfg_Achievement_Row::mutable_check_data() {
  
  if (check_data_ == NULL) {
    check_data_ = new ::Cfg_Achievement_Row_CheckData;
  }
  // @@protoc_insertion_point(field_mutable:Cfg_Achievement.Row.check_data)
  return check_data_;
}
::Cfg_Achievement_Row_CheckData* Cfg_Achievement_Row::release_check_data() {
  // @@protoc_insertion_point(field_release:Cfg_Achievement.Row.check_data)
  
  ::Cfg_Achievement_Row_CheckData* temp = check_data_;
  check_data_ = NULL;
  return temp;
}
void Cfg_Achievement_Row::set_allocated_check_data(::Cfg_Achievement_Row_CheckData* check_data) {
  delete check_data_;
  check_data_ = check_data;
  if (check_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Cfg_Achievement.Row.check_data)
}

// repeated .Cfg_Achievement.Row.AwardData award_list = 9;
int Cfg_Achievement_Row::award_list_size() const {
  return award_list_.size();
}
void Cfg_Achievement_Row::clear_award_list() {
  award_list_.Clear();
}
const ::Cfg_Achievement_Row_AwardData& Cfg_Achievement_Row::award_list(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.award_list)
  return award_list_.Get(index);
}
::Cfg_Achievement_Row_AwardData* Cfg_Achievement_Row::mutable_award_list(int index) {
  // @@protoc_insertion_point(field_mutable:Cfg_Achievement.Row.award_list)
  return award_list_.Mutable(index);
}
::Cfg_Achievement_Row_AwardData* Cfg_Achievement_Row::add_award_list() {
  // @@protoc_insertion_point(field_add:Cfg_Achievement.Row.award_list)
  return award_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::Cfg_Achievement_Row_AwardData >*
Cfg_Achievement_Row::mutable_award_list() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_Achievement.Row.award_list)
  return &award_list_;
}
const ::google::protobuf::RepeatedPtrField< ::Cfg_Achievement_Row_AwardData >&
Cfg_Achievement_Row::award_list() const {
  // @@protoc_insertion_point(field_list:Cfg_Achievement.Row.award_list)
  return award_list_;
}

// optional uint32 award_exp = 10;
void Cfg_Achievement_Row::clear_award_exp() {
  award_exp_ = 0u;
}
::google::protobuf::uint32 Cfg_Achievement_Row::award_exp() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.award_exp)
  return award_exp_;
}
void Cfg_Achievement_Row::set_award_exp(::google::protobuf::uint32 value) {
  
  award_exp_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.award_exp)
}

// optional uint32 award_achipoint = 11;
void Cfg_Achievement_Row::clear_award_achipoint() {
  award_achipoint_ = 0u;
}
::google::protobuf::uint32 Cfg_Achievement_Row::award_achipoint() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.award_achipoint)
  return award_achipoint_;
}
void Cfg_Achievement_Row::set_award_achipoint(::google::protobuf::uint32 value) {
  
  award_achipoint_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.award_achipoint)
}

inline const Cfg_Achievement_Row* Cfg_Achievement_Row::internal_default_instance() {
  return &Cfg_Achievement_Row_default_instance_.get();
}
// -------------------------------------------------------------------

// Cfg_Achievement

// repeated .Cfg_Achievement.Row rows = 1;
int Cfg_Achievement::rows_size() const {
  return rows_.size();
}
void Cfg_Achievement::clear_rows() {
  rows_.Clear();
}
const ::Cfg_Achievement_Row& Cfg_Achievement::rows(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.rows)
  return rows_.Get(index);
}
::Cfg_Achievement_Row* Cfg_Achievement::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:Cfg_Achievement.rows)
  return rows_.Mutable(index);
}
::Cfg_Achievement_Row* Cfg_Achievement::add_rows() {
  // @@protoc_insertion_point(field_add:Cfg_Achievement.rows)
  return rows_.Add();
}
::google::protobuf::RepeatedPtrField< ::Cfg_Achievement_Row >*
Cfg_Achievement::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_Achievement.rows)
  return &rows_;
}
const ::google::protobuf::RepeatedPtrField< ::Cfg_Achievement_Row >&
Cfg_Achievement::rows() const {
  // @@protoc_insertion_point(field_list:Cfg_Achievement.rows)
  return rows_;
}

inline const Cfg_Achievement* Cfg_Achievement::internal_default_instance() {
  return &Cfg_Achievement_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
