// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config/Cfg_MapData.proto

#ifndef PROTOBUF_config_2fCfg_5fMapData_2eproto__INCLUDED
#define PROTOBUF_config_2fCfg_5fMapData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_config_2fCfg_5fMapData_2eproto();
void protobuf_InitDefaults_config_2fCfg_5fMapData_2eproto();
void protobuf_AssignDesc_config_2fCfg_5fMapData_2eproto();
void protobuf_ShutdownFile_config_2fCfg_5fMapData_2eproto();

class Cfg_MapData;

// ===================================================================

class Cfg_MapData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cfg_MapData) */ {
 public:
  Cfg_MapData();
  virtual ~Cfg_MapData();

  Cfg_MapData(const Cfg_MapData& from);

  inline Cfg_MapData& operator=(const Cfg_MapData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cfg_MapData& default_instance();

  static const Cfg_MapData* internal_default_instance();

  void Swap(Cfg_MapData* other);

  // implements Message ----------------------------------------------

  inline Cfg_MapData* New() const { return New(NULL); }

  Cfg_MapData* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cfg_MapData* other);
  void UnsafeMergeFrom(const Cfg_MapData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 idmaptemplate = 1;
  void clear_idmaptemplate();
  static const int kIdmaptemplateFieldNumber = 1;
  ::google::protobuf::uint32 idmaptemplate() const;
  void set_idmaptemplate(::google::protobuf::uint32 value);

  // optional uint32 width = 2;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // optional uint32 height = 3;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // repeated uint32 griddata = 6;
  int griddata_size() const;
  void clear_griddata();
  static const int kGriddataFieldNumber = 6;
  ::google::protobuf::uint32 griddata(int index) const;
  void set_griddata(int index, ::google::protobuf::uint32 value);
  void add_griddata(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      griddata() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_griddata();

  // optional float grid_high_factor = 7;
  void clear_grid_high_factor();
  static const int kGridHighFactorFieldNumber = 7;
  float grid_high_factor() const;
  void set_grid_high_factor(float value);

  // repeated uint32 collision = 8;
  int collision_size() const;
  void clear_collision();
  static const int kCollisionFieldNumber = 8;
  ::google::protobuf::uint32 collision(int index) const;
  void set_collision(int index, ::google::protobuf::uint32 value);
  void add_collision(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      collision() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_collision();

  // @@protoc_insertion_point(class_scope:Cfg_MapData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > griddata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > collision_;
  ::google::protobuf::uint32 idmaptemplate_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  float grid_high_factor_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_config_2fCfg_5fMapData_2eproto_impl();
  friend void  protobuf_AddDesc_config_2fCfg_5fMapData_2eproto_impl();
  friend void protobuf_AssignDesc_config_2fCfg_5fMapData_2eproto();
  friend void protobuf_ShutdownFile_config_2fCfg_5fMapData_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Cfg_MapData> Cfg_MapData_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Cfg_MapData

// optional uint32 idmaptemplate = 1;
inline void Cfg_MapData::clear_idmaptemplate() {
  idmaptemplate_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_MapData::idmaptemplate() const {
  // @@protoc_insertion_point(field_get:Cfg_MapData.idmaptemplate)
  return idmaptemplate_;
}
inline void Cfg_MapData::set_idmaptemplate(::google::protobuf::uint32 value) {
  
  idmaptemplate_ = value;
  // @@protoc_insertion_point(field_set:Cfg_MapData.idmaptemplate)
}

// optional uint32 width = 2;
inline void Cfg_MapData::clear_width() {
  width_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_MapData::width() const {
  // @@protoc_insertion_point(field_get:Cfg_MapData.width)
  return width_;
}
inline void Cfg_MapData::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:Cfg_MapData.width)
}

// optional uint32 height = 3;
inline void Cfg_MapData::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_MapData::height() const {
  // @@protoc_insertion_point(field_get:Cfg_MapData.height)
  return height_;
}
inline void Cfg_MapData::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:Cfg_MapData.height)
}

// repeated uint32 griddata = 6;
inline int Cfg_MapData::griddata_size() const {
  return griddata_.size();
}
inline void Cfg_MapData::clear_griddata() {
  griddata_.Clear();
}
inline ::google::protobuf::uint32 Cfg_MapData::griddata(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_MapData.griddata)
  return griddata_.Get(index);
}
inline void Cfg_MapData::set_griddata(int index, ::google::protobuf::uint32 value) {
  griddata_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cfg_MapData.griddata)
}
inline void Cfg_MapData::add_griddata(::google::protobuf::uint32 value) {
  griddata_.Add(value);
  // @@protoc_insertion_point(field_add:Cfg_MapData.griddata)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Cfg_MapData::griddata() const {
  // @@protoc_insertion_point(field_list:Cfg_MapData.griddata)
  return griddata_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Cfg_MapData::mutable_griddata() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_MapData.griddata)
  return &griddata_;
}

// optional float grid_high_factor = 7;
inline void Cfg_MapData::clear_grid_high_factor() {
  grid_high_factor_ = 0;
}
inline float Cfg_MapData::grid_high_factor() const {
  // @@protoc_insertion_point(field_get:Cfg_MapData.grid_high_factor)
  return grid_high_factor_;
}
inline void Cfg_MapData::set_grid_high_factor(float value) {
  
  grid_high_factor_ = value;
  // @@protoc_insertion_point(field_set:Cfg_MapData.grid_high_factor)
}

// repeated uint32 collision = 8;
inline int Cfg_MapData::collision_size() const {
  return collision_.size();
}
inline void Cfg_MapData::clear_collision() {
  collision_.Clear();
}
inline ::google::protobuf::uint32 Cfg_MapData::collision(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_MapData.collision)
  return collision_.Get(index);
}
inline void Cfg_MapData::set_collision(int index, ::google::protobuf::uint32 value) {
  collision_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cfg_MapData.collision)
}
inline void Cfg_MapData::add_collision(::google::protobuf::uint32 value) {
  collision_.Add(value);
  // @@protoc_insertion_point(field_add:Cfg_MapData.collision)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Cfg_MapData::collision() const {
  // @@protoc_insertion_point(field_list:Cfg_MapData.collision)
  return collision_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Cfg_MapData::mutable_collision() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_MapData.collision)
  return &collision_;
}

inline const Cfg_MapData* Cfg_MapData::internal_default_instance() {
  return &Cfg_MapData_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_config_2fCfg_5fMapData_2eproto__INCLUDED
