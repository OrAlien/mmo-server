// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config/Cfg_Task.proto

#ifndef PROTOBUF_config_2fCfg_5fTask_2eproto__INCLUDED
#define PROTOBUF_config_2fCfg_5fTask_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_config_2fCfg_5fTask_2eproto();
void protobuf_InitDefaults_config_2fCfg_5fTask_2eproto();
void protobuf_AssignDesc_config_2fCfg_5fTask_2eproto();
void protobuf_ShutdownFile_config_2fCfg_5fTask_2eproto();

class Cfg_Task;
class Cfg_Task_Row;
class Cfg_Task_Row_TaskAwardItemData;
class Cfg_Task_Row_TaskFinishData;

enum TaskFinishType {
  TFTYPE_NONE = 0,
  TFTYPE_MONSTER = 1,
  TFTYPE_ITEM = 2,
  TFTYPE_ACHI = 3,
  TFTYPE_FINISHTASK = 4,
  TFTYPE_DATA = 5,
  TaskFinishType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TaskFinishType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TaskFinishType_IsValid(int value);
const TaskFinishType TaskFinishType_MIN = TFTYPE_NONE;
const TaskFinishType TaskFinishType_MAX = TFTYPE_DATA;
const int TaskFinishType_ARRAYSIZE = TaskFinishType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TaskFinishType_descriptor();
inline const ::std::string& TaskFinishType_Name(TaskFinishType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TaskFinishType_descriptor(), value);
}
inline bool TaskFinishType_Parse(
    const ::std::string& name, TaskFinishType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskFinishType>(
    TaskFinishType_descriptor(), name, value);
}
// ===================================================================

class Cfg_Task_Row_TaskAwardItemData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cfg_Task.Row.TaskAwardItemData) */ {
 public:
  Cfg_Task_Row_TaskAwardItemData();
  virtual ~Cfg_Task_Row_TaskAwardItemData();

  Cfg_Task_Row_TaskAwardItemData(const Cfg_Task_Row_TaskAwardItemData& from);

  inline Cfg_Task_Row_TaskAwardItemData& operator=(const Cfg_Task_Row_TaskAwardItemData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cfg_Task_Row_TaskAwardItemData& default_instance();

  static const Cfg_Task_Row_TaskAwardItemData* internal_default_instance();

  void Swap(Cfg_Task_Row_TaskAwardItemData* other);

  // implements Message ----------------------------------------------

  inline Cfg_Task_Row_TaskAwardItemData* New() const { return New(NULL); }

  Cfg_Task_Row_TaskAwardItemData* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cfg_Task_Row_TaskAwardItemData* other);
  void UnsafeMergeFrom(const Cfg_Task_Row_TaskAwardItemData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 itemtype = 1;
  void clear_itemtype();
  static const int kItemtypeFieldNumber = 1;
  ::google::protobuf::uint32 itemtype() const;
  void set_itemtype(::google::protobuf::uint32 value);

  // optional uint32 itemflag = 2;
  void clear_itemflag();
  static const int kItemflagFieldNumber = 2;
  ::google::protobuf::uint32 itemflag() const;
  void set_itemflag(::google::protobuf::uint32 value);

  // optional uint32 itemamount = 3;
  void clear_itemamount();
  static const int kItemamountFieldNumber = 3;
  ::google::protobuf::uint32 itemamount() const;
  void set_itemamount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cfg_Task.Row.TaskAwardItemData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 itemtype_;
  ::google::protobuf::uint32 itemflag_;
  ::google::protobuf::uint32 itemamount_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_config_2fCfg_5fTask_2eproto_impl();
  friend void  protobuf_AddDesc_config_2fCfg_5fTask_2eproto_impl();
  friend void protobuf_AssignDesc_config_2fCfg_5fTask_2eproto();
  friend void protobuf_ShutdownFile_config_2fCfg_5fTask_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Cfg_Task_Row_TaskAwardItemData> Cfg_Task_Row_TaskAwardItemData_default_instance_;

// -------------------------------------------------------------------

class Cfg_Task_Row_TaskFinishData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cfg_Task.Row.TaskFinishData) */ {
 public:
  Cfg_Task_Row_TaskFinishData();
  virtual ~Cfg_Task_Row_TaskFinishData();

  Cfg_Task_Row_TaskFinishData(const Cfg_Task_Row_TaskFinishData& from);

  inline Cfg_Task_Row_TaskFinishData& operator=(const Cfg_Task_Row_TaskFinishData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cfg_Task_Row_TaskFinishData& default_instance();

  static const Cfg_Task_Row_TaskFinishData* internal_default_instance();

  void Swap(Cfg_Task_Row_TaskFinishData* other);

  // implements Message ----------------------------------------------

  inline Cfg_Task_Row_TaskFinishData* New() const { return New(NULL); }

  Cfg_Task_Row_TaskFinishData* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cfg_Task_Row_TaskFinishData* other);
  void UnsafeMergeFrom(const Cfg_Task_Row_TaskFinishData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 finish_type = 1;
  void clear_finish_type();
  static const int kFinishTypeFieldNumber = 1;
  ::google::protobuf::uint32 finish_type() const;
  void set_finish_type(::google::protobuf::uint32 value);

  // optional uint32 finish_data = 2;
  void clear_finish_data();
  static const int kFinishDataFieldNumber = 2;
  ::google::protobuf::uint32 finish_data() const;
  void set_finish_data(::google::protobuf::uint32 value);

  // optional uint32 finish_num = 3;
  void clear_finish_num();
  static const int kFinishNumFieldNumber = 3;
  ::google::protobuf::uint32 finish_num() const;
  void set_finish_num(::google::protobuf::uint32 value);

  // optional float rate = 4;
  void clear_rate();
  static const int kRateFieldNumber = 4;
  float rate() const;
  void set_rate(float value);

  // optional bool share = 5;
  void clear_share();
  static const int kShareFieldNumber = 5;
  bool share() const;
  void set_share(bool value);

  // optional string desc = 10;
  void clear_desc();
  static const int kDescFieldNumber = 10;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // @@protoc_insertion_point(class_scope:Cfg_Task.Row.TaskFinishData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::uint32 finish_type_;
  ::google::protobuf::uint32 finish_data_;
  ::google::protobuf::uint32 finish_num_;
  float rate_;
  bool share_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_config_2fCfg_5fTask_2eproto_impl();
  friend void  protobuf_AddDesc_config_2fCfg_5fTask_2eproto_impl();
  friend void protobuf_AssignDesc_config_2fCfg_5fTask_2eproto();
  friend void protobuf_ShutdownFile_config_2fCfg_5fTask_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Cfg_Task_Row_TaskFinishData> Cfg_Task_Row_TaskFinishData_default_instance_;

// -------------------------------------------------------------------

class Cfg_Task_Row : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cfg_Task.Row) */ {
 public:
  Cfg_Task_Row();
  virtual ~Cfg_Task_Row();

  Cfg_Task_Row(const Cfg_Task_Row& from);

  inline Cfg_Task_Row& operator=(const Cfg_Task_Row& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cfg_Task_Row& default_instance();

  static const Cfg_Task_Row* internal_default_instance();

  void Swap(Cfg_Task_Row* other);

  // implements Message ----------------------------------------------

  inline Cfg_Task_Row* New() const { return New(NULL); }

  Cfg_Task_Row* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cfg_Task_Row* other);
  void UnsafeMergeFrom(const Cfg_Task_Row& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Cfg_Task_Row_TaskAwardItemData TaskAwardItemData;
  typedef Cfg_Task_Row_TaskFinishData TaskFinishData;

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 sort = 2;
  void clear_sort();
  static const int kSortFieldNumber = 2;
  ::google::protobuf::uint32 sort() const;
  void set_sort(::google::protobuf::uint32 value);

  // optional uint32 type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional string name = 5;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 level_req = 6;
  void clear_level_req();
  static const int kLevelReqFieldNumber = 6;
  ::google::protobuf::uint32 level_req() const;
  void set_level_req(::google::protobuf::uint32 value);

  // optional uint32 prof_req = 7;
  void clear_prof_req();
  static const int kProfReqFieldNumber = 7;
  ::google::protobuf::uint32 prof_req() const;
  void set_prof_req(::google::protobuf::uint32 value);

  // repeated uint32 task_req = 8;
  int task_req_size() const;
  void clear_task_req();
  static const int kTaskReqFieldNumber = 8;
  ::google::protobuf::uint32 task_req(int index) const;
  void set_task_req(int index, ::google::protobuf::uint32 value);
  void add_task_req(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      task_req() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_task_req();

  // optional uint32 expire_sec = 9;
  void clear_expire_sec();
  static const int kExpireSecFieldNumber = 9;
  ::google::protobuf::uint32 expire_sec() const;
  void set_expire_sec(::google::protobuf::uint32 value);

  // optional uint32 daytimes = 10;
  void clear_daytimes();
  static const int kDaytimesFieldNumber = 10;
  ::google::protobuf::uint32 daytimes() const;
  void set_daytimes(::google::protobuf::uint32 value);

  // optional uint32 accept_npcid = 11;
  void clear_accept_npcid();
  static const int kAcceptNpcidFieldNumber = 11;
  ::google::protobuf::uint32 accept_npcid() const;
  void set_accept_npcid(::google::protobuf::uint32 value);

  // optional uint32 submit_npcid = 12;
  void clear_submit_npcid();
  static const int kSubmitNpcidFieldNumber = 12;
  ::google::protobuf::uint32 submit_npcid() const;
  void set_submit_npcid(::google::protobuf::uint32 value);

  // optional uint32 task_flag = 13;
  void clear_task_flag();
  static const int kTaskFlagFieldNumber = 13;
  ::google::protobuf::uint32 task_flag() const;
  void set_task_flag(::google::protobuf::uint32 value);

  // optional uint32 daytimes_max = 14;
  void clear_daytimes_max();
  static const int kDaytimesMaxFieldNumber = 14;
  ::google::protobuf::uint32 daytimes_max() const;
  void set_daytimes_max(::google::protobuf::uint32 value);

  // optional uint32 daytime_per_cost = 15;
  void clear_daytime_per_cost();
  static const int kDaytimePerCostFieldNumber = 15;
  ::google::protobuf::uint32 daytime_per_cost() const;
  void set_daytime_per_cost(::google::protobuf::uint32 value);

  // optional uint32 submit_multiple_max = 16;
  void clear_submit_multiple_max();
  static const int kSubmitMultipleMaxFieldNumber = 16;
  ::google::protobuf::uint32 submit_multiple_max() const;
  void set_submit_multiple_max(::google::protobuf::uint32 value);

  // optional uint32 submit_multiple_cost = 17;
  void clear_submit_multiple_cost();
  static const int kSubmitMultipleCostFieldNumber = 17;
  ::google::protobuf::uint32 submit_multiple_cost() const;
  void set_submit_multiple_cost(::google::protobuf::uint32 value);

  // optional uint32 quick_submit_cost = 18;
  void clear_quick_submit_cost();
  static const int kQuickSubmitCostFieldNumber = 18;
  ::google::protobuf::uint32 quick_submit_cost() const;
  void set_quick_submit_cost(::google::protobuf::uint32 value);

  // optional uint32 next_auto_accept_task_id = 19;
  void clear_next_auto_accept_task_id();
  static const int kNextAutoAcceptTaskIdFieldNumber = 19;
  ::google::protobuf::uint32 next_auto_accept_task_id() const;
  void set_next_auto_accept_task_id(::google::protobuf::uint32 value);

  // optional uint32 award_exp = 20;
  void clear_award_exp();
  static const int kAwardExpFieldNumber = 20;
  ::google::protobuf::uint32 award_exp() const;
  void set_award_exp(::google::protobuf::uint32 value);

  // repeated .Cfg_Task.Row.TaskAwardItemData award_item_list = 21;
  int award_item_list_size() const;
  void clear_award_item_list();
  static const int kAwardItemListFieldNumber = 21;
  const ::Cfg_Task_Row_TaskAwardItemData& award_item_list(int index) const;
  ::Cfg_Task_Row_TaskAwardItemData* mutable_award_item_list(int index);
  ::Cfg_Task_Row_TaskAwardItemData* add_award_item_list();
  ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row_TaskAwardItemData >*
      mutable_award_item_list();
  const ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row_TaskAwardItemData >&
      award_item_list() const;

  // repeated .Cfg_Task.Row.TaskFinishData finish_data_list = 22;
  int finish_data_list_size() const;
  void clear_finish_data_list();
  static const int kFinishDataListFieldNumber = 22;
  const ::Cfg_Task_Row_TaskFinishData& finish_data_list(int index) const;
  ::Cfg_Task_Row_TaskFinishData* mutable_finish_data_list(int index);
  ::Cfg_Task_Row_TaskFinishData* add_finish_data_list();
  ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row_TaskFinishData >*
      mutable_finish_data_list();
  const ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row_TaskFinishData >&
      finish_data_list() const;

  // optional int64 scriptid = 30;
  void clear_scriptid();
  static const int kScriptidFieldNumber = 30;
  ::google::protobuf::int64 scriptid() const;
  void set_scriptid(::google::protobuf::int64 value);

  // optional string accept_txt = 31;
  void clear_accept_txt();
  static const int kAcceptTxtFieldNumber = 31;
  const ::std::string& accept_txt() const;
  void set_accept_txt(const ::std::string& value);
  void set_accept_txt(const char* value);
  void set_accept_txt(const char* value, size_t size);
  ::std::string* mutable_accept_txt();
  ::std::string* release_accept_txt();
  void set_allocated_accept_txt(::std::string* accept_txt);

  // optional string doing_txt = 32;
  void clear_doing_txt();
  static const int kDoingTxtFieldNumber = 32;
  const ::std::string& doing_txt() const;
  void set_doing_txt(const ::std::string& value);
  void set_doing_txt(const char* value);
  void set_doing_txt(const char* value, size_t size);
  ::std::string* mutable_doing_txt();
  ::std::string* release_doing_txt();
  void set_allocated_doing_txt(::std::string* doing_txt);

  // optional string submit_txt = 33;
  void clear_submit_txt();
  static const int kSubmitTxtFieldNumber = 33;
  const ::std::string& submit_txt() const;
  void set_submit_txt(const ::std::string& value);
  void set_submit_txt(const char* value);
  void set_submit_txt(const char* value, size_t size);
  ::std::string* mutable_submit_txt();
  ::std::string* release_submit_txt();
  void set_allocated_submit_txt(::std::string* submit_txt);

  // optional string desc = 34;
  void clear_desc();
  static const int kDescFieldNumber = 34;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // @@protoc_insertion_point(class_scope:Cfg_Task.Row)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > task_req_;
  ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row_TaskAwardItemData > award_item_list_;
  ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row_TaskFinishData > finish_data_list_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr accept_txt_;
  ::google::protobuf::internal::ArenaStringPtr doing_txt_;
  ::google::protobuf::internal::ArenaStringPtr submit_txt_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 sort_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 level_req_;
  ::google::protobuf::uint32 prof_req_;
  ::google::protobuf::uint32 expire_sec_;
  ::google::protobuf::uint32 daytimes_;
  ::google::protobuf::uint32 accept_npcid_;
  ::google::protobuf::uint32 submit_npcid_;
  ::google::protobuf::uint32 task_flag_;
  ::google::protobuf::uint32 daytimes_max_;
  ::google::protobuf::uint32 daytime_per_cost_;
  ::google::protobuf::uint32 submit_multiple_max_;
  ::google::protobuf::uint32 submit_multiple_cost_;
  ::google::protobuf::uint32 quick_submit_cost_;
  ::google::protobuf::uint32 next_auto_accept_task_id_;
  ::google::protobuf::int64 scriptid_;
  ::google::protobuf::uint32 award_exp_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_config_2fCfg_5fTask_2eproto_impl();
  friend void  protobuf_AddDesc_config_2fCfg_5fTask_2eproto_impl();
  friend void protobuf_AssignDesc_config_2fCfg_5fTask_2eproto();
  friend void protobuf_ShutdownFile_config_2fCfg_5fTask_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Cfg_Task_Row> Cfg_Task_Row_default_instance_;

// -------------------------------------------------------------------

class Cfg_Task : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cfg_Task) */ {
 public:
  Cfg_Task();
  virtual ~Cfg_Task();

  Cfg_Task(const Cfg_Task& from);

  inline Cfg_Task& operator=(const Cfg_Task& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cfg_Task& default_instance();

  static const Cfg_Task* internal_default_instance();

  void Swap(Cfg_Task* other);

  // implements Message ----------------------------------------------

  inline Cfg_Task* New() const { return New(NULL); }

  Cfg_Task* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cfg_Task* other);
  void UnsafeMergeFrom(const Cfg_Task& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Cfg_Task_Row Row;

  // accessors -------------------------------------------------------

  // repeated .Cfg_Task.Row rows = 1;
  int rows_size() const;
  void clear_rows();
  static const int kRowsFieldNumber = 1;
  const ::Cfg_Task_Row& rows(int index) const;
  ::Cfg_Task_Row* mutable_rows(int index);
  ::Cfg_Task_Row* add_rows();
  ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row >*
      mutable_rows();
  const ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row >&
      rows() const;

  // @@protoc_insertion_point(class_scope:Cfg_Task)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row > rows_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_config_2fCfg_5fTask_2eproto_impl();
  friend void  protobuf_AddDesc_config_2fCfg_5fTask_2eproto_impl();
  friend void protobuf_AssignDesc_config_2fCfg_5fTask_2eproto();
  friend void protobuf_ShutdownFile_config_2fCfg_5fTask_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Cfg_Task> Cfg_Task_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Cfg_Task_Row_TaskAwardItemData

// optional uint32 itemtype = 1;
inline void Cfg_Task_Row_TaskAwardItemData::clear_itemtype() {
  itemtype_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row_TaskAwardItemData::itemtype() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.TaskAwardItemData.itemtype)
  return itemtype_;
}
inline void Cfg_Task_Row_TaskAwardItemData::set_itemtype(::google::protobuf::uint32 value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.TaskAwardItemData.itemtype)
}

// optional uint32 itemflag = 2;
inline void Cfg_Task_Row_TaskAwardItemData::clear_itemflag() {
  itemflag_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row_TaskAwardItemData::itemflag() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.TaskAwardItemData.itemflag)
  return itemflag_;
}
inline void Cfg_Task_Row_TaskAwardItemData::set_itemflag(::google::protobuf::uint32 value) {
  
  itemflag_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.TaskAwardItemData.itemflag)
}

// optional uint32 itemamount = 3;
inline void Cfg_Task_Row_TaskAwardItemData::clear_itemamount() {
  itemamount_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row_TaskAwardItemData::itemamount() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.TaskAwardItemData.itemamount)
  return itemamount_;
}
inline void Cfg_Task_Row_TaskAwardItemData::set_itemamount(::google::protobuf::uint32 value) {
  
  itemamount_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.TaskAwardItemData.itemamount)
}

inline const Cfg_Task_Row_TaskAwardItemData* Cfg_Task_Row_TaskAwardItemData::internal_default_instance() {
  return &Cfg_Task_Row_TaskAwardItemData_default_instance_.get();
}
// -------------------------------------------------------------------

// Cfg_Task_Row_TaskFinishData

// optional uint32 finish_type = 1;
inline void Cfg_Task_Row_TaskFinishData::clear_finish_type() {
  finish_type_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row_TaskFinishData::finish_type() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.TaskFinishData.finish_type)
  return finish_type_;
}
inline void Cfg_Task_Row_TaskFinishData::set_finish_type(::google::protobuf::uint32 value) {
  
  finish_type_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.TaskFinishData.finish_type)
}

// optional uint32 finish_data = 2;
inline void Cfg_Task_Row_TaskFinishData::clear_finish_data() {
  finish_data_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row_TaskFinishData::finish_data() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.TaskFinishData.finish_data)
  return finish_data_;
}
inline void Cfg_Task_Row_TaskFinishData::set_finish_data(::google::protobuf::uint32 value) {
  
  finish_data_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.TaskFinishData.finish_data)
}

// optional uint32 finish_num = 3;
inline void Cfg_Task_Row_TaskFinishData::clear_finish_num() {
  finish_num_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row_TaskFinishData::finish_num() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.TaskFinishData.finish_num)
  return finish_num_;
}
inline void Cfg_Task_Row_TaskFinishData::set_finish_num(::google::protobuf::uint32 value) {
  
  finish_num_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.TaskFinishData.finish_num)
}

// optional float rate = 4;
inline void Cfg_Task_Row_TaskFinishData::clear_rate() {
  rate_ = 0;
}
inline float Cfg_Task_Row_TaskFinishData::rate() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.TaskFinishData.rate)
  return rate_;
}
inline void Cfg_Task_Row_TaskFinishData::set_rate(float value) {
  
  rate_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.TaskFinishData.rate)
}

// optional bool share = 5;
inline void Cfg_Task_Row_TaskFinishData::clear_share() {
  share_ = false;
}
inline bool Cfg_Task_Row_TaskFinishData::share() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.TaskFinishData.share)
  return share_;
}
inline void Cfg_Task_Row_TaskFinishData::set_share(bool value) {
  
  share_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.TaskFinishData.share)
}

// optional string desc = 10;
inline void Cfg_Task_Row_TaskFinishData::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Cfg_Task_Row_TaskFinishData::desc() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.TaskFinishData.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Task_Row_TaskFinishData::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.TaskFinishData.desc)
}
inline void Cfg_Task_Row_TaskFinishData::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cfg_Task.Row.TaskFinishData.desc)
}
inline void Cfg_Task_Row_TaskFinishData::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cfg_Task.Row.TaskFinishData.desc)
}
inline ::std::string* Cfg_Task_Row_TaskFinishData::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:Cfg_Task.Row.TaskFinishData.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Cfg_Task_Row_TaskFinishData::release_desc() {
  // @@protoc_insertion_point(field_release:Cfg_Task.Row.TaskFinishData.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Task_Row_TaskFinishData::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:Cfg_Task.Row.TaskFinishData.desc)
}

inline const Cfg_Task_Row_TaskFinishData* Cfg_Task_Row_TaskFinishData::internal_default_instance() {
  return &Cfg_Task_Row_TaskFinishData_default_instance_.get();
}
// -------------------------------------------------------------------

// Cfg_Task_Row

// optional uint32 id = 1;
inline void Cfg_Task_Row::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::id() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.id)
  return id_;
}
inline void Cfg_Task_Row::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.id)
}

// optional uint32 sort = 2;
inline void Cfg_Task_Row::clear_sort() {
  sort_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::sort() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.sort)
  return sort_;
}
inline void Cfg_Task_Row::set_sort(::google::protobuf::uint32 value) {
  
  sort_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.sort)
}

// optional uint32 type = 4;
inline void Cfg_Task_Row::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::type() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.type)
  return type_;
}
inline void Cfg_Task_Row::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.type)
}

// optional string name = 5;
inline void Cfg_Task_Row::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Cfg_Task_Row::name() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Task_Row::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.name)
}
inline void Cfg_Task_Row::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cfg_Task.Row.name)
}
inline void Cfg_Task_Row::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cfg_Task.Row.name)
}
inline ::std::string* Cfg_Task_Row::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Cfg_Task.Row.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Cfg_Task_Row::release_name() {
  // @@protoc_insertion_point(field_release:Cfg_Task.Row.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Task_Row::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Cfg_Task.Row.name)
}

// optional uint32 level_req = 6;
inline void Cfg_Task_Row::clear_level_req() {
  level_req_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::level_req() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.level_req)
  return level_req_;
}
inline void Cfg_Task_Row::set_level_req(::google::protobuf::uint32 value) {
  
  level_req_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.level_req)
}

// optional uint32 prof_req = 7;
inline void Cfg_Task_Row::clear_prof_req() {
  prof_req_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::prof_req() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.prof_req)
  return prof_req_;
}
inline void Cfg_Task_Row::set_prof_req(::google::protobuf::uint32 value) {
  
  prof_req_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.prof_req)
}

// repeated uint32 task_req = 8;
inline int Cfg_Task_Row::task_req_size() const {
  return task_req_.size();
}
inline void Cfg_Task_Row::clear_task_req() {
  task_req_.Clear();
}
inline ::google::protobuf::uint32 Cfg_Task_Row::task_req(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.task_req)
  return task_req_.Get(index);
}
inline void Cfg_Task_Row::set_task_req(int index, ::google::protobuf::uint32 value) {
  task_req_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.task_req)
}
inline void Cfg_Task_Row::add_task_req(::google::protobuf::uint32 value) {
  task_req_.Add(value);
  // @@protoc_insertion_point(field_add:Cfg_Task.Row.task_req)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Cfg_Task_Row::task_req() const {
  // @@protoc_insertion_point(field_list:Cfg_Task.Row.task_req)
  return task_req_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Cfg_Task_Row::mutable_task_req() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_Task.Row.task_req)
  return &task_req_;
}

// optional uint32 expire_sec = 9;
inline void Cfg_Task_Row::clear_expire_sec() {
  expire_sec_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::expire_sec() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.expire_sec)
  return expire_sec_;
}
inline void Cfg_Task_Row::set_expire_sec(::google::protobuf::uint32 value) {
  
  expire_sec_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.expire_sec)
}

// optional uint32 daytimes = 10;
inline void Cfg_Task_Row::clear_daytimes() {
  daytimes_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::daytimes() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.daytimes)
  return daytimes_;
}
inline void Cfg_Task_Row::set_daytimes(::google::protobuf::uint32 value) {
  
  daytimes_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.daytimes)
}

// optional uint32 accept_npcid = 11;
inline void Cfg_Task_Row::clear_accept_npcid() {
  accept_npcid_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::accept_npcid() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.accept_npcid)
  return accept_npcid_;
}
inline void Cfg_Task_Row::set_accept_npcid(::google::protobuf::uint32 value) {
  
  accept_npcid_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.accept_npcid)
}

// optional uint32 submit_npcid = 12;
inline void Cfg_Task_Row::clear_submit_npcid() {
  submit_npcid_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::submit_npcid() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.submit_npcid)
  return submit_npcid_;
}
inline void Cfg_Task_Row::set_submit_npcid(::google::protobuf::uint32 value) {
  
  submit_npcid_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.submit_npcid)
}

// optional uint32 task_flag = 13;
inline void Cfg_Task_Row::clear_task_flag() {
  task_flag_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::task_flag() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.task_flag)
  return task_flag_;
}
inline void Cfg_Task_Row::set_task_flag(::google::protobuf::uint32 value) {
  
  task_flag_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.task_flag)
}

// optional uint32 daytimes_max = 14;
inline void Cfg_Task_Row::clear_daytimes_max() {
  daytimes_max_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::daytimes_max() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.daytimes_max)
  return daytimes_max_;
}
inline void Cfg_Task_Row::set_daytimes_max(::google::protobuf::uint32 value) {
  
  daytimes_max_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.daytimes_max)
}

// optional uint32 daytime_per_cost = 15;
inline void Cfg_Task_Row::clear_daytime_per_cost() {
  daytime_per_cost_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::daytime_per_cost() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.daytime_per_cost)
  return daytime_per_cost_;
}
inline void Cfg_Task_Row::set_daytime_per_cost(::google::protobuf::uint32 value) {
  
  daytime_per_cost_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.daytime_per_cost)
}

// optional uint32 submit_multiple_max = 16;
inline void Cfg_Task_Row::clear_submit_multiple_max() {
  submit_multiple_max_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::submit_multiple_max() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.submit_multiple_max)
  return submit_multiple_max_;
}
inline void Cfg_Task_Row::set_submit_multiple_max(::google::protobuf::uint32 value) {
  
  submit_multiple_max_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.submit_multiple_max)
}

// optional uint32 submit_multiple_cost = 17;
inline void Cfg_Task_Row::clear_submit_multiple_cost() {
  submit_multiple_cost_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::submit_multiple_cost() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.submit_multiple_cost)
  return submit_multiple_cost_;
}
inline void Cfg_Task_Row::set_submit_multiple_cost(::google::protobuf::uint32 value) {
  
  submit_multiple_cost_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.submit_multiple_cost)
}

// optional uint32 quick_submit_cost = 18;
inline void Cfg_Task_Row::clear_quick_submit_cost() {
  quick_submit_cost_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::quick_submit_cost() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.quick_submit_cost)
  return quick_submit_cost_;
}
inline void Cfg_Task_Row::set_quick_submit_cost(::google::protobuf::uint32 value) {
  
  quick_submit_cost_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.quick_submit_cost)
}

// optional uint32 next_auto_accept_task_id = 19;
inline void Cfg_Task_Row::clear_next_auto_accept_task_id() {
  next_auto_accept_task_id_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::next_auto_accept_task_id() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.next_auto_accept_task_id)
  return next_auto_accept_task_id_;
}
inline void Cfg_Task_Row::set_next_auto_accept_task_id(::google::protobuf::uint32 value) {
  
  next_auto_accept_task_id_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.next_auto_accept_task_id)
}

// optional uint32 award_exp = 20;
inline void Cfg_Task_Row::clear_award_exp() {
  award_exp_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Task_Row::award_exp() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.award_exp)
  return award_exp_;
}
inline void Cfg_Task_Row::set_award_exp(::google::protobuf::uint32 value) {
  
  award_exp_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.award_exp)
}

// repeated .Cfg_Task.Row.TaskAwardItemData award_item_list = 21;
inline int Cfg_Task_Row::award_item_list_size() const {
  return award_item_list_.size();
}
inline void Cfg_Task_Row::clear_award_item_list() {
  award_item_list_.Clear();
}
inline const ::Cfg_Task_Row_TaskAwardItemData& Cfg_Task_Row::award_item_list(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.award_item_list)
  return award_item_list_.Get(index);
}
inline ::Cfg_Task_Row_TaskAwardItemData* Cfg_Task_Row::mutable_award_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:Cfg_Task.Row.award_item_list)
  return award_item_list_.Mutable(index);
}
inline ::Cfg_Task_Row_TaskAwardItemData* Cfg_Task_Row::add_award_item_list() {
  // @@protoc_insertion_point(field_add:Cfg_Task.Row.award_item_list)
  return award_item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row_TaskAwardItemData >*
Cfg_Task_Row::mutable_award_item_list() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_Task.Row.award_item_list)
  return &award_item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row_TaskAwardItemData >&
Cfg_Task_Row::award_item_list() const {
  // @@protoc_insertion_point(field_list:Cfg_Task.Row.award_item_list)
  return award_item_list_;
}

// repeated .Cfg_Task.Row.TaskFinishData finish_data_list = 22;
inline int Cfg_Task_Row::finish_data_list_size() const {
  return finish_data_list_.size();
}
inline void Cfg_Task_Row::clear_finish_data_list() {
  finish_data_list_.Clear();
}
inline const ::Cfg_Task_Row_TaskFinishData& Cfg_Task_Row::finish_data_list(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.finish_data_list)
  return finish_data_list_.Get(index);
}
inline ::Cfg_Task_Row_TaskFinishData* Cfg_Task_Row::mutable_finish_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:Cfg_Task.Row.finish_data_list)
  return finish_data_list_.Mutable(index);
}
inline ::Cfg_Task_Row_TaskFinishData* Cfg_Task_Row::add_finish_data_list() {
  // @@protoc_insertion_point(field_add:Cfg_Task.Row.finish_data_list)
  return finish_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row_TaskFinishData >*
Cfg_Task_Row::mutable_finish_data_list() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_Task.Row.finish_data_list)
  return &finish_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row_TaskFinishData >&
Cfg_Task_Row::finish_data_list() const {
  // @@protoc_insertion_point(field_list:Cfg_Task.Row.finish_data_list)
  return finish_data_list_;
}

// optional int64 scriptid = 30;
inline void Cfg_Task_Row::clear_scriptid() {
  scriptid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Cfg_Task_Row::scriptid() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.scriptid)
  return scriptid_;
}
inline void Cfg_Task_Row::set_scriptid(::google::protobuf::int64 value) {
  
  scriptid_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.scriptid)
}

// optional string accept_txt = 31;
inline void Cfg_Task_Row::clear_accept_txt() {
  accept_txt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Cfg_Task_Row::accept_txt() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.accept_txt)
  return accept_txt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Task_Row::set_accept_txt(const ::std::string& value) {
  
  accept_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.accept_txt)
}
inline void Cfg_Task_Row::set_accept_txt(const char* value) {
  
  accept_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cfg_Task.Row.accept_txt)
}
inline void Cfg_Task_Row::set_accept_txt(const char* value, size_t size) {
  
  accept_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cfg_Task.Row.accept_txt)
}
inline ::std::string* Cfg_Task_Row::mutable_accept_txt() {
  
  // @@protoc_insertion_point(field_mutable:Cfg_Task.Row.accept_txt)
  return accept_txt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Cfg_Task_Row::release_accept_txt() {
  // @@protoc_insertion_point(field_release:Cfg_Task.Row.accept_txt)
  
  return accept_txt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Task_Row::set_allocated_accept_txt(::std::string* accept_txt) {
  if (accept_txt != NULL) {
    
  } else {
    
  }
  accept_txt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accept_txt);
  // @@protoc_insertion_point(field_set_allocated:Cfg_Task.Row.accept_txt)
}

// optional string doing_txt = 32;
inline void Cfg_Task_Row::clear_doing_txt() {
  doing_txt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Cfg_Task_Row::doing_txt() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.doing_txt)
  return doing_txt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Task_Row::set_doing_txt(const ::std::string& value) {
  
  doing_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.doing_txt)
}
inline void Cfg_Task_Row::set_doing_txt(const char* value) {
  
  doing_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cfg_Task.Row.doing_txt)
}
inline void Cfg_Task_Row::set_doing_txt(const char* value, size_t size) {
  
  doing_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cfg_Task.Row.doing_txt)
}
inline ::std::string* Cfg_Task_Row::mutable_doing_txt() {
  
  // @@protoc_insertion_point(field_mutable:Cfg_Task.Row.doing_txt)
  return doing_txt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Cfg_Task_Row::release_doing_txt() {
  // @@protoc_insertion_point(field_release:Cfg_Task.Row.doing_txt)
  
  return doing_txt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Task_Row::set_allocated_doing_txt(::std::string* doing_txt) {
  if (doing_txt != NULL) {
    
  } else {
    
  }
  doing_txt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doing_txt);
  // @@protoc_insertion_point(field_set_allocated:Cfg_Task.Row.doing_txt)
}

// optional string submit_txt = 33;
inline void Cfg_Task_Row::clear_submit_txt() {
  submit_txt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Cfg_Task_Row::submit_txt() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.submit_txt)
  return submit_txt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Task_Row::set_submit_txt(const ::std::string& value) {
  
  submit_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.submit_txt)
}
inline void Cfg_Task_Row::set_submit_txt(const char* value) {
  
  submit_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cfg_Task.Row.submit_txt)
}
inline void Cfg_Task_Row::set_submit_txt(const char* value, size_t size) {
  
  submit_txt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cfg_Task.Row.submit_txt)
}
inline ::std::string* Cfg_Task_Row::mutable_submit_txt() {
  
  // @@protoc_insertion_point(field_mutable:Cfg_Task.Row.submit_txt)
  return submit_txt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Cfg_Task_Row::release_submit_txt() {
  // @@protoc_insertion_point(field_release:Cfg_Task.Row.submit_txt)
  
  return submit_txt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Task_Row::set_allocated_submit_txt(::std::string* submit_txt) {
  if (submit_txt != NULL) {
    
  } else {
    
  }
  submit_txt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), submit_txt);
  // @@protoc_insertion_point(field_set_allocated:Cfg_Task.Row.submit_txt)
}

// optional string desc = 34;
inline void Cfg_Task_Row::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Cfg_Task_Row::desc() const {
  // @@protoc_insertion_point(field_get:Cfg_Task.Row.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Task_Row::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cfg_Task.Row.desc)
}
inline void Cfg_Task_Row::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cfg_Task.Row.desc)
}
inline void Cfg_Task_Row::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cfg_Task.Row.desc)
}
inline ::std::string* Cfg_Task_Row::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:Cfg_Task.Row.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Cfg_Task_Row::release_desc() {
  // @@protoc_insertion_point(field_release:Cfg_Task.Row.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Task_Row::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:Cfg_Task.Row.desc)
}

inline const Cfg_Task_Row* Cfg_Task_Row::internal_default_instance() {
  return &Cfg_Task_Row_default_instance_.get();
}
// -------------------------------------------------------------------

// Cfg_Task

// repeated .Cfg_Task.Row rows = 1;
inline int Cfg_Task::rows_size() const {
  return rows_.size();
}
inline void Cfg_Task::clear_rows() {
  rows_.Clear();
}
inline const ::Cfg_Task_Row& Cfg_Task::rows(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_Task.rows)
  return rows_.Get(index);
}
inline ::Cfg_Task_Row* Cfg_Task::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:Cfg_Task.rows)
  return rows_.Mutable(index);
}
inline ::Cfg_Task_Row* Cfg_Task::add_rows() {
  // @@protoc_insertion_point(field_add:Cfg_Task.rows)
  return rows_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row >*
Cfg_Task::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_Task.rows)
  return &rows_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Cfg_Task_Row >&
Cfg_Task::rows() const {
  // @@protoc_insertion_point(field_list:Cfg_Task.rows)
  return rows_;
}

inline const Cfg_Task* Cfg_Task::internal_default_instance() {
  return &Cfg_Task_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::TaskFinishType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TaskFinishType>() {
  return ::TaskFinishType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_config_2fCfg_5fTask_2eproto__INCLUDED
