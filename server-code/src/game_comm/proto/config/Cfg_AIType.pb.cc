// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config/Cfg_AIType.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "config/Cfg_AIType.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Cfg_AIType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Cfg_AIType_reflection_ = NULL;
const ::google::protobuf::Descriptor* Cfg_AIType_Row_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Cfg_AIType_Row_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_config_2fCfg_5fAIType_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_config_2fCfg_5fAIType_2eproto() {
  protobuf_AddDesc_config_2fCfg_5fAIType_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "config/Cfg_AIType.proto");
  GOOGLE_CHECK(file != NULL);
  Cfg_AIType_descriptor_ = file->message_type(0);
  static const int Cfg_AIType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType, rows_),
  };
  Cfg_AIType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Cfg_AIType_descriptor_,
      Cfg_AIType::internal_default_instance(),
      Cfg_AIType_offsets_,
      -1,
      -1,
      -1,
      sizeof(Cfg_AIType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType, _internal_metadata_));
  Cfg_AIType_Row_descriptor_ = Cfg_AIType_descriptor_->nested_type(0);
  static const int Cfg_AIType_Row_offsets_[23] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, idmonster_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, ai_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, idle_randomwalk_ms_min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, idle_randomwalk_ms_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, idle_randomwalk_step_min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, idle_randomwalk_step_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, idle_randomwalk_range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, attack_pursue_selfrange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, attack_target_range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, search_enemy_range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, search_enemy_ms_min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, search_enemy_ms_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, patrol_wait_ms_min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, patrol_wait_ms_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, escape_range_min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, escape_range_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, can_approach_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, attack_wait_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, targetfam_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, follow_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, script_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, ai_debug_),
  };
  Cfg_AIType_Row_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Cfg_AIType_Row_descriptor_,
      Cfg_AIType_Row::internal_default_instance(),
      Cfg_AIType_Row_offsets_,
      -1,
      -1,
      -1,
      sizeof(Cfg_AIType_Row),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_AIType_Row, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_config_2fCfg_5fAIType_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Cfg_AIType_descriptor_, Cfg_AIType::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Cfg_AIType_Row_descriptor_, Cfg_AIType_Row::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_config_2fCfg_5fAIType_2eproto() {
  Cfg_AIType_default_instance_.Shutdown();
  delete Cfg_AIType_reflection_;
  Cfg_AIType_Row_default_instance_.Shutdown();
  delete Cfg_AIType_Row_reflection_;
}

void protobuf_InitDefaults_config_2fCfg_5fAIType_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  Cfg_AIType_default_instance_.DefaultConstruct();
  Cfg_AIType_Row_default_instance_.DefaultConstruct();
  Cfg_AIType_default_instance_.get_mutable()->InitAsDefaultInstance();
  Cfg_AIType_Row_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_config_2fCfg_5fAIType_2eproto_once_);
void protobuf_InitDefaults_config_2fCfg_5fAIType_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_config_2fCfg_5fAIType_2eproto_once_,
                 &protobuf_InitDefaults_config_2fCfg_5fAIType_2eproto_impl);
}
void protobuf_AddDesc_config_2fCfg_5fAIType_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_config_2fCfg_5fAIType_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027config/Cfg_AIType.proto\"\212\005\n\nCfg_AIType"
    "\022\035\n\004rows\030\001 \003(\0132\017.Cfg_AIType.Row\032\334\004\n\003Row\022"
    "\021\n\tidmonster\030\001 \001(\r\022\017\n\007ai_type\030\002 \001(\r\022\036\n\026i"
    "dle_randomwalk_ms_min\030\003 \001(\r\022\036\n\026idle_rand"
    "omwalk_ms_max\030\004 \001(\r\022 \n\030idle_randomwalk_s"
    "tep_min\030\005 \001(\002\022 \n\030idle_randomwalk_step_ma"
    "x\030\006 \001(\002\022\035\n\025idle_randomwalk_range\030\007 \001(\002\022\037"
    "\n\027attack_pursue_selfrange\030\010 \001(\002\022\033\n\023attac"
    "k_target_range\030\t \001(\002\022\032\n\022search_enemy_ran"
    "ge\030\n \001(\002\022\033\n\023search_enemy_ms_min\030\013 \001(\002\022\033\n"
    "\023search_enemy_ms_max\030\014 \001(\002\022\032\n\022patrol_wai"
    "t_ms_min\030\r \001(\r\022\032\n\022patrol_wait_ms_max\030\016 \001"
    "(\r\022\030\n\020escape_range_min\030\017 \001(\002\022\030\n\020escape_r"
    "ange_max\030\020 \001(\002\022\024\n\014can_approach\030\021 \001(\010\022\026\n\016"
    "attack_wait_ms\030\022 \001(\r\022\024\n\014targetfam_id\030\024 \001"
    "(\r\022\020\n\010skill_id\030\025 \003(\r\022\023\n\013follow_path\030\026 \001("
    "\r\022\021\n\tscript_id\030\027 \001(\r\022\020\n\010ai_debug\030\030 \001(\010B\002"
    "H\002b\006proto3", 690);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "config/Cfg_AIType.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_config_2fCfg_5fAIType_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_config_2fCfg_5fAIType_2eproto_once_);
void protobuf_AddDesc_config_2fCfg_5fAIType_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_config_2fCfg_5fAIType_2eproto_once_,
                 &protobuf_AddDesc_config_2fCfg_5fAIType_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_config_2fCfg_5fAIType_2eproto {
  StaticDescriptorInitializer_config_2fCfg_5fAIType_2eproto() {
    protobuf_AddDesc_config_2fCfg_5fAIType_2eproto();
  }
} static_descriptor_initializer_config_2fCfg_5fAIType_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cfg_AIType_Row::kIdmonsterFieldNumber;
const int Cfg_AIType_Row::kAiTypeFieldNumber;
const int Cfg_AIType_Row::kIdleRandomwalkMsMinFieldNumber;
const int Cfg_AIType_Row::kIdleRandomwalkMsMaxFieldNumber;
const int Cfg_AIType_Row::kIdleRandomwalkStepMinFieldNumber;
const int Cfg_AIType_Row::kIdleRandomwalkStepMaxFieldNumber;
const int Cfg_AIType_Row::kIdleRandomwalkRangeFieldNumber;
const int Cfg_AIType_Row::kAttackPursueSelfrangeFieldNumber;
const int Cfg_AIType_Row::kAttackTargetRangeFieldNumber;
const int Cfg_AIType_Row::kSearchEnemyRangeFieldNumber;
const int Cfg_AIType_Row::kSearchEnemyMsMinFieldNumber;
const int Cfg_AIType_Row::kSearchEnemyMsMaxFieldNumber;
const int Cfg_AIType_Row::kPatrolWaitMsMinFieldNumber;
const int Cfg_AIType_Row::kPatrolWaitMsMaxFieldNumber;
const int Cfg_AIType_Row::kEscapeRangeMinFieldNumber;
const int Cfg_AIType_Row::kEscapeRangeMaxFieldNumber;
const int Cfg_AIType_Row::kCanApproachFieldNumber;
const int Cfg_AIType_Row::kAttackWaitMsFieldNumber;
const int Cfg_AIType_Row::kTargetfamIdFieldNumber;
const int Cfg_AIType_Row::kSkillIdFieldNumber;
const int Cfg_AIType_Row::kFollowPathFieldNumber;
const int Cfg_AIType_Row::kScriptIdFieldNumber;
const int Cfg_AIType_Row::kAiDebugFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cfg_AIType_Row::Cfg_AIType_Row()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_config_2fCfg_5fAIType_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cfg_AIType.Row)
}

void Cfg_AIType_Row::InitAsDefaultInstance() {
}

Cfg_AIType_Row::Cfg_AIType_Row(const Cfg_AIType_Row& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cfg_AIType.Row)
}

void Cfg_AIType_Row::SharedCtor() {
  ::memset(&idmonster_, 0, reinterpret_cast<char*>(&script_id_) -
    reinterpret_cast<char*>(&idmonster_) + sizeof(script_id_));
  _cached_size_ = 0;
}

Cfg_AIType_Row::~Cfg_AIType_Row() {
  // @@protoc_insertion_point(destructor:Cfg_AIType.Row)
  SharedDtor();
}

void Cfg_AIType_Row::SharedDtor() {
}

void Cfg_AIType_Row::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cfg_AIType_Row::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Cfg_AIType_Row_descriptor_;
}

const Cfg_AIType_Row& Cfg_AIType_Row::default_instance() {
  protobuf_InitDefaults_config_2fCfg_5fAIType_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Cfg_AIType_Row> Cfg_AIType_Row_default_instance_;

Cfg_AIType_Row* Cfg_AIType_Row::New(::google::protobuf::Arena* arena) const {
  Cfg_AIType_Row* n = new Cfg_AIType_Row;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cfg_AIType_Row::UnsafeMergeFrom(const Cfg_AIType_Row& from) {
  MergeFrom(from);
}
void Cfg_AIType_Row::Swap(Cfg_AIType_Row* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cfg_AIType_Row::InternalSwap(Cfg_AIType_Row* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Cfg_AIType_Row::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Cfg_AIType_Row_descriptor_;
  metadata.reflection = Cfg_AIType_Row_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cfg_AIType::kRowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cfg_AIType::Cfg_AIType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_config_2fCfg_5fAIType_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cfg_AIType)
}

void Cfg_AIType::InitAsDefaultInstance() {
}

Cfg_AIType::Cfg_AIType(const Cfg_AIType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cfg_AIType)
}

void Cfg_AIType::SharedCtor() {
  _cached_size_ = 0;
}

Cfg_AIType::~Cfg_AIType() {
  // @@protoc_insertion_point(destructor:Cfg_AIType)
  SharedDtor();
}

void Cfg_AIType::SharedDtor() {
}

void Cfg_AIType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cfg_AIType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Cfg_AIType_descriptor_;
}

const Cfg_AIType& Cfg_AIType::default_instance() {
  protobuf_InitDefaults_config_2fCfg_5fAIType_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Cfg_AIType> Cfg_AIType_default_instance_;

Cfg_AIType* Cfg_AIType::New(::google::protobuf::Arena* arena) const {
  Cfg_AIType* n = new Cfg_AIType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cfg_AIType::UnsafeMergeFrom(const Cfg_AIType& from) {
  MergeFrom(from);
}
void Cfg_AIType::Swap(Cfg_AIType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cfg_AIType::InternalSwap(Cfg_AIType* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Cfg_AIType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Cfg_AIType_descriptor_;
  metadata.reflection = Cfg_AIType_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Cfg_AIType_Row

// optional uint32 idmonster = 1;
void Cfg_AIType_Row::clear_idmonster() {
  idmonster_ = 0u;
}
::google::protobuf::uint32 Cfg_AIType_Row::idmonster() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.idmonster)
  return idmonster_;
}
void Cfg_AIType_Row::set_idmonster(::google::protobuf::uint32 value) {
  
  idmonster_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.idmonster)
}

// optional uint32 ai_type = 2;
void Cfg_AIType_Row::clear_ai_type() {
  ai_type_ = 0u;
}
::google::protobuf::uint32 Cfg_AIType_Row::ai_type() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.ai_type)
  return ai_type_;
}
void Cfg_AIType_Row::set_ai_type(::google::protobuf::uint32 value) {
  
  ai_type_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.ai_type)
}

// optional uint32 idle_randomwalk_ms_min = 3;
void Cfg_AIType_Row::clear_idle_randomwalk_ms_min() {
  idle_randomwalk_ms_min_ = 0u;
}
::google::protobuf::uint32 Cfg_AIType_Row::idle_randomwalk_ms_min() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.idle_randomwalk_ms_min)
  return idle_randomwalk_ms_min_;
}
void Cfg_AIType_Row::set_idle_randomwalk_ms_min(::google::protobuf::uint32 value) {
  
  idle_randomwalk_ms_min_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.idle_randomwalk_ms_min)
}

// optional uint32 idle_randomwalk_ms_max = 4;
void Cfg_AIType_Row::clear_idle_randomwalk_ms_max() {
  idle_randomwalk_ms_max_ = 0u;
}
::google::protobuf::uint32 Cfg_AIType_Row::idle_randomwalk_ms_max() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.idle_randomwalk_ms_max)
  return idle_randomwalk_ms_max_;
}
void Cfg_AIType_Row::set_idle_randomwalk_ms_max(::google::protobuf::uint32 value) {
  
  idle_randomwalk_ms_max_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.idle_randomwalk_ms_max)
}

// optional float idle_randomwalk_step_min = 5;
void Cfg_AIType_Row::clear_idle_randomwalk_step_min() {
  idle_randomwalk_step_min_ = 0;
}
float Cfg_AIType_Row::idle_randomwalk_step_min() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.idle_randomwalk_step_min)
  return idle_randomwalk_step_min_;
}
void Cfg_AIType_Row::set_idle_randomwalk_step_min(float value) {
  
  idle_randomwalk_step_min_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.idle_randomwalk_step_min)
}

// optional float idle_randomwalk_step_max = 6;
void Cfg_AIType_Row::clear_idle_randomwalk_step_max() {
  idle_randomwalk_step_max_ = 0;
}
float Cfg_AIType_Row::idle_randomwalk_step_max() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.idle_randomwalk_step_max)
  return idle_randomwalk_step_max_;
}
void Cfg_AIType_Row::set_idle_randomwalk_step_max(float value) {
  
  idle_randomwalk_step_max_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.idle_randomwalk_step_max)
}

// optional float idle_randomwalk_range = 7;
void Cfg_AIType_Row::clear_idle_randomwalk_range() {
  idle_randomwalk_range_ = 0;
}
float Cfg_AIType_Row::idle_randomwalk_range() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.idle_randomwalk_range)
  return idle_randomwalk_range_;
}
void Cfg_AIType_Row::set_idle_randomwalk_range(float value) {
  
  idle_randomwalk_range_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.idle_randomwalk_range)
}

// optional float attack_pursue_selfrange = 8;
void Cfg_AIType_Row::clear_attack_pursue_selfrange() {
  attack_pursue_selfrange_ = 0;
}
float Cfg_AIType_Row::attack_pursue_selfrange() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.attack_pursue_selfrange)
  return attack_pursue_selfrange_;
}
void Cfg_AIType_Row::set_attack_pursue_selfrange(float value) {
  
  attack_pursue_selfrange_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.attack_pursue_selfrange)
}

// optional float attack_target_range = 9;
void Cfg_AIType_Row::clear_attack_target_range() {
  attack_target_range_ = 0;
}
float Cfg_AIType_Row::attack_target_range() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.attack_target_range)
  return attack_target_range_;
}
void Cfg_AIType_Row::set_attack_target_range(float value) {
  
  attack_target_range_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.attack_target_range)
}

// optional float search_enemy_range = 10;
void Cfg_AIType_Row::clear_search_enemy_range() {
  search_enemy_range_ = 0;
}
float Cfg_AIType_Row::search_enemy_range() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.search_enemy_range)
  return search_enemy_range_;
}
void Cfg_AIType_Row::set_search_enemy_range(float value) {
  
  search_enemy_range_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.search_enemy_range)
}

// optional float search_enemy_ms_min = 11;
void Cfg_AIType_Row::clear_search_enemy_ms_min() {
  search_enemy_ms_min_ = 0;
}
float Cfg_AIType_Row::search_enemy_ms_min() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.search_enemy_ms_min)
  return search_enemy_ms_min_;
}
void Cfg_AIType_Row::set_search_enemy_ms_min(float value) {
  
  search_enemy_ms_min_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.search_enemy_ms_min)
}

// optional float search_enemy_ms_max = 12;
void Cfg_AIType_Row::clear_search_enemy_ms_max() {
  search_enemy_ms_max_ = 0;
}
float Cfg_AIType_Row::search_enemy_ms_max() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.search_enemy_ms_max)
  return search_enemy_ms_max_;
}
void Cfg_AIType_Row::set_search_enemy_ms_max(float value) {
  
  search_enemy_ms_max_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.search_enemy_ms_max)
}

// optional uint32 patrol_wait_ms_min = 13;
void Cfg_AIType_Row::clear_patrol_wait_ms_min() {
  patrol_wait_ms_min_ = 0u;
}
::google::protobuf::uint32 Cfg_AIType_Row::patrol_wait_ms_min() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.patrol_wait_ms_min)
  return patrol_wait_ms_min_;
}
void Cfg_AIType_Row::set_patrol_wait_ms_min(::google::protobuf::uint32 value) {
  
  patrol_wait_ms_min_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.patrol_wait_ms_min)
}

// optional uint32 patrol_wait_ms_max = 14;
void Cfg_AIType_Row::clear_patrol_wait_ms_max() {
  patrol_wait_ms_max_ = 0u;
}
::google::protobuf::uint32 Cfg_AIType_Row::patrol_wait_ms_max() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.patrol_wait_ms_max)
  return patrol_wait_ms_max_;
}
void Cfg_AIType_Row::set_patrol_wait_ms_max(::google::protobuf::uint32 value) {
  
  patrol_wait_ms_max_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.patrol_wait_ms_max)
}

// optional float escape_range_min = 15;
void Cfg_AIType_Row::clear_escape_range_min() {
  escape_range_min_ = 0;
}
float Cfg_AIType_Row::escape_range_min() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.escape_range_min)
  return escape_range_min_;
}
void Cfg_AIType_Row::set_escape_range_min(float value) {
  
  escape_range_min_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.escape_range_min)
}

// optional float escape_range_max = 16;
void Cfg_AIType_Row::clear_escape_range_max() {
  escape_range_max_ = 0;
}
float Cfg_AIType_Row::escape_range_max() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.escape_range_max)
  return escape_range_max_;
}
void Cfg_AIType_Row::set_escape_range_max(float value) {
  
  escape_range_max_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.escape_range_max)
}

// optional bool can_approach = 17;
void Cfg_AIType_Row::clear_can_approach() {
  can_approach_ = false;
}
bool Cfg_AIType_Row::can_approach() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.can_approach)
  return can_approach_;
}
void Cfg_AIType_Row::set_can_approach(bool value) {
  
  can_approach_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.can_approach)
}

// optional uint32 attack_wait_ms = 18;
void Cfg_AIType_Row::clear_attack_wait_ms() {
  attack_wait_ms_ = 0u;
}
::google::protobuf::uint32 Cfg_AIType_Row::attack_wait_ms() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.attack_wait_ms)
  return attack_wait_ms_;
}
void Cfg_AIType_Row::set_attack_wait_ms(::google::protobuf::uint32 value) {
  
  attack_wait_ms_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.attack_wait_ms)
}

// optional uint32 targetfam_id = 20;
void Cfg_AIType_Row::clear_targetfam_id() {
  targetfam_id_ = 0u;
}
::google::protobuf::uint32 Cfg_AIType_Row::targetfam_id() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.targetfam_id)
  return targetfam_id_;
}
void Cfg_AIType_Row::set_targetfam_id(::google::protobuf::uint32 value) {
  
  targetfam_id_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.targetfam_id)
}

// repeated uint32 skill_id = 21;
int Cfg_AIType_Row::skill_id_size() const {
  return skill_id_.size();
}
void Cfg_AIType_Row::clear_skill_id() {
  skill_id_.Clear();
}
::google::protobuf::uint32 Cfg_AIType_Row::skill_id(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.skill_id)
  return skill_id_.Get(index);
}
void Cfg_AIType_Row::set_skill_id(int index, ::google::protobuf::uint32 value) {
  skill_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.skill_id)
}
void Cfg_AIType_Row::add_skill_id(::google::protobuf::uint32 value) {
  skill_id_.Add(value);
  // @@protoc_insertion_point(field_add:Cfg_AIType.Row.skill_id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Cfg_AIType_Row::skill_id() const {
  // @@protoc_insertion_point(field_list:Cfg_AIType.Row.skill_id)
  return skill_id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Cfg_AIType_Row::mutable_skill_id() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_AIType.Row.skill_id)
  return &skill_id_;
}

// optional uint32 follow_path = 22;
void Cfg_AIType_Row::clear_follow_path() {
  follow_path_ = 0u;
}
::google::protobuf::uint32 Cfg_AIType_Row::follow_path() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.follow_path)
  return follow_path_;
}
void Cfg_AIType_Row::set_follow_path(::google::protobuf::uint32 value) {
  
  follow_path_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.follow_path)
}

// optional uint32 script_id = 23;
void Cfg_AIType_Row::clear_script_id() {
  script_id_ = 0u;
}
::google::protobuf::uint32 Cfg_AIType_Row::script_id() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.script_id)
  return script_id_;
}
void Cfg_AIType_Row::set_script_id(::google::protobuf::uint32 value) {
  
  script_id_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.script_id)
}

// optional bool ai_debug = 24;
void Cfg_AIType_Row::clear_ai_debug() {
  ai_debug_ = false;
}
bool Cfg_AIType_Row::ai_debug() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.ai_debug)
  return ai_debug_;
}
void Cfg_AIType_Row::set_ai_debug(bool value) {
  
  ai_debug_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.ai_debug)
}

inline const Cfg_AIType_Row* Cfg_AIType_Row::internal_default_instance() {
  return &Cfg_AIType_Row_default_instance_.get();
}
// -------------------------------------------------------------------

// Cfg_AIType

// repeated .Cfg_AIType.Row rows = 1;
int Cfg_AIType::rows_size() const {
  return rows_.size();
}
void Cfg_AIType::clear_rows() {
  rows_.Clear();
}
const ::Cfg_AIType_Row& Cfg_AIType::rows(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.rows)
  return rows_.Get(index);
}
::Cfg_AIType_Row* Cfg_AIType::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:Cfg_AIType.rows)
  return rows_.Mutable(index);
}
::Cfg_AIType_Row* Cfg_AIType::add_rows() {
  // @@protoc_insertion_point(field_add:Cfg_AIType.rows)
  return rows_.Add();
}
::google::protobuf::RepeatedPtrField< ::Cfg_AIType_Row >*
Cfg_AIType::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_AIType.rows)
  return &rows_;
}
const ::google::protobuf::RepeatedPtrField< ::Cfg_AIType_Row >&
Cfg_AIType::rows() const {
  // @@protoc_insertion_point(field_list:Cfg_AIType.rows)
  return rows_;
}

inline const Cfg_AIType* Cfg_AIType::internal_default_instance() {
  return &Cfg_AIType_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
