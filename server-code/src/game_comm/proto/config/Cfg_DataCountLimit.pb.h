// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config/Cfg_DataCountLimit.proto

#ifndef PROTOBUF_config_2fCfg_5fDataCountLimit_2eproto__INCLUDED
#define PROTOBUF_config_2fCfg_5fDataCountLimit_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_config_2fCfg_5fDataCountLimit_2eproto();
void protobuf_InitDefaults_config_2fCfg_5fDataCountLimit_2eproto();
void protobuf_AssignDesc_config_2fCfg_5fDataCountLimit_2eproto();
void protobuf_ShutdownFile_config_2fCfg_5fDataCountLimit_2eproto();

class Cfg_DataCountLimit;
class Cfg_DataCountLimit_Row;

// ===================================================================

class Cfg_DataCountLimit_Row : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cfg_DataCountLimit.Row) */ {
 public:
  Cfg_DataCountLimit_Row();
  virtual ~Cfg_DataCountLimit_Row();

  Cfg_DataCountLimit_Row(const Cfg_DataCountLimit_Row& from);

  inline Cfg_DataCountLimit_Row& operator=(const Cfg_DataCountLimit_Row& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cfg_DataCountLimit_Row& default_instance();

  static const Cfg_DataCountLimit_Row* internal_default_instance();

  void Swap(Cfg_DataCountLimit_Row* other);

  // implements Message ----------------------------------------------

  inline Cfg_DataCountLimit_Row* New() const { return New(NULL); }

  Cfg_DataCountLimit_Row* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cfg_DataCountLimit_Row* other);
  void UnsafeMergeFrom(const Cfg_DataCountLimit_Row& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 keyidx = 2;
  void clear_keyidx();
  static const int kKeyidxFieldNumber = 2;
  ::google::protobuf::uint32 keyidx() const;
  void set_keyidx(::google::protobuf::uint32 value);

  // optional uint32 max_count = 3;
  void clear_max_count();
  static const int kMaxCountFieldNumber = 3;
  ::google::protobuf::uint32 max_count() const;
  void set_max_count(::google::protobuf::uint32 value);

  // optional uint32 reset_time = 4;
  void clear_reset_time();
  static const int kResetTimeFieldNumber = 4;
  ::google::protobuf::uint32 reset_time() const;
  void set_reset_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cfg_DataCountLimit.Row)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 keyidx_;
  ::google::protobuf::uint32 max_count_;
  ::google::protobuf::uint32 reset_time_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_config_2fCfg_5fDataCountLimit_2eproto_impl();
  friend void  protobuf_AddDesc_config_2fCfg_5fDataCountLimit_2eproto_impl();
  friend void protobuf_AssignDesc_config_2fCfg_5fDataCountLimit_2eproto();
  friend void protobuf_ShutdownFile_config_2fCfg_5fDataCountLimit_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Cfg_DataCountLimit_Row> Cfg_DataCountLimit_Row_default_instance_;

// -------------------------------------------------------------------

class Cfg_DataCountLimit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cfg_DataCountLimit) */ {
 public:
  Cfg_DataCountLimit();
  virtual ~Cfg_DataCountLimit();

  Cfg_DataCountLimit(const Cfg_DataCountLimit& from);

  inline Cfg_DataCountLimit& operator=(const Cfg_DataCountLimit& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cfg_DataCountLimit& default_instance();

  static const Cfg_DataCountLimit* internal_default_instance();

  void Swap(Cfg_DataCountLimit* other);

  // implements Message ----------------------------------------------

  inline Cfg_DataCountLimit* New() const { return New(NULL); }

  Cfg_DataCountLimit* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cfg_DataCountLimit* other);
  void UnsafeMergeFrom(const Cfg_DataCountLimit& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Cfg_DataCountLimit_Row Row;

  // accessors -------------------------------------------------------

  // repeated .Cfg_DataCountLimit.Row rows = 1;
  int rows_size() const;
  void clear_rows();
  static const int kRowsFieldNumber = 1;
  const ::Cfg_DataCountLimit_Row& rows(int index) const;
  ::Cfg_DataCountLimit_Row* mutable_rows(int index);
  ::Cfg_DataCountLimit_Row* add_rows();
  ::google::protobuf::RepeatedPtrField< ::Cfg_DataCountLimit_Row >*
      mutable_rows();
  const ::google::protobuf::RepeatedPtrField< ::Cfg_DataCountLimit_Row >&
      rows() const;

  // @@protoc_insertion_point(class_scope:Cfg_DataCountLimit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Cfg_DataCountLimit_Row > rows_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_config_2fCfg_5fDataCountLimit_2eproto_impl();
  friend void  protobuf_AddDesc_config_2fCfg_5fDataCountLimit_2eproto_impl();
  friend void protobuf_AssignDesc_config_2fCfg_5fDataCountLimit_2eproto();
  friend void protobuf_ShutdownFile_config_2fCfg_5fDataCountLimit_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Cfg_DataCountLimit> Cfg_DataCountLimit_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Cfg_DataCountLimit_Row

// optional uint32 type = 1;
inline void Cfg_DataCountLimit_Row::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_DataCountLimit_Row::type() const {
  // @@protoc_insertion_point(field_get:Cfg_DataCountLimit.Row.type)
  return type_;
}
inline void Cfg_DataCountLimit_Row::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Cfg_DataCountLimit.Row.type)
}

// optional uint32 keyidx = 2;
inline void Cfg_DataCountLimit_Row::clear_keyidx() {
  keyidx_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_DataCountLimit_Row::keyidx() const {
  // @@protoc_insertion_point(field_get:Cfg_DataCountLimit.Row.keyidx)
  return keyidx_;
}
inline void Cfg_DataCountLimit_Row::set_keyidx(::google::protobuf::uint32 value) {
  
  keyidx_ = value;
  // @@protoc_insertion_point(field_set:Cfg_DataCountLimit.Row.keyidx)
}

// optional uint32 max_count = 3;
inline void Cfg_DataCountLimit_Row::clear_max_count() {
  max_count_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_DataCountLimit_Row::max_count() const {
  // @@protoc_insertion_point(field_get:Cfg_DataCountLimit.Row.max_count)
  return max_count_;
}
inline void Cfg_DataCountLimit_Row::set_max_count(::google::protobuf::uint32 value) {
  
  max_count_ = value;
  // @@protoc_insertion_point(field_set:Cfg_DataCountLimit.Row.max_count)
}

// optional uint32 reset_time = 4;
inline void Cfg_DataCountLimit_Row::clear_reset_time() {
  reset_time_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_DataCountLimit_Row::reset_time() const {
  // @@protoc_insertion_point(field_get:Cfg_DataCountLimit.Row.reset_time)
  return reset_time_;
}
inline void Cfg_DataCountLimit_Row::set_reset_time(::google::protobuf::uint32 value) {
  
  reset_time_ = value;
  // @@protoc_insertion_point(field_set:Cfg_DataCountLimit.Row.reset_time)
}

inline const Cfg_DataCountLimit_Row* Cfg_DataCountLimit_Row::internal_default_instance() {
  return &Cfg_DataCountLimit_Row_default_instance_.get();
}
// -------------------------------------------------------------------

// Cfg_DataCountLimit

// repeated .Cfg_DataCountLimit.Row rows = 1;
inline int Cfg_DataCountLimit::rows_size() const {
  return rows_.size();
}
inline void Cfg_DataCountLimit::clear_rows() {
  rows_.Clear();
}
inline const ::Cfg_DataCountLimit_Row& Cfg_DataCountLimit::rows(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_DataCountLimit.rows)
  return rows_.Get(index);
}
inline ::Cfg_DataCountLimit_Row* Cfg_DataCountLimit::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:Cfg_DataCountLimit.rows)
  return rows_.Mutable(index);
}
inline ::Cfg_DataCountLimit_Row* Cfg_DataCountLimit::add_rows() {
  // @@protoc_insertion_point(field_add:Cfg_DataCountLimit.rows)
  return rows_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Cfg_DataCountLimit_Row >*
Cfg_DataCountLimit::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_DataCountLimit.rows)
  return &rows_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Cfg_DataCountLimit_Row >&
Cfg_DataCountLimit::rows() const {
  // @@protoc_insertion_point(field_list:Cfg_DataCountLimit.rows)
  return rows_;
}

inline const Cfg_DataCountLimit* Cfg_DataCountLimit::internal_default_instance() {
  return &Cfg_DataCountLimit_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_config_2fCfg_5fDataCountLimit_2eproto__INCLUDED
