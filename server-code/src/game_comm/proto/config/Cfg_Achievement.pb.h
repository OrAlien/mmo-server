// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config/Cfg_Achievement.proto

#ifndef PROTOBUF_config_2fCfg_5fAchievement_2eproto__INCLUDED
#define PROTOBUF_config_2fCfg_5fAchievement_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_config_2fCfg_5fAchievement_2eproto();
void protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto();
void protobuf_AssignDesc_config_2fCfg_5fAchievement_2eproto();
void protobuf_ShutdownFile_config_2fCfg_5fAchievement_2eproto();

class Cfg_Achievement;
class Cfg_Achievement_Row;
class Cfg_Achievement_Row_AwardData;
class Cfg_Achievement_Row_CheckData;

enum AchiConditionType {
  CONDITION_NONE = 0,
  CONDITION_LEVEL = 1,
  CONDITION_MONEY = 2,
  CONDITION_ACHIPOINT = 3,
  CONDITION_COMBATPOWER = 4,
  CONDITION_USER_FRIEND = 5,
  CONDITION_VIP = 6,
  CONDITION_TASK = 10,
  CONDITION_SKILL_LEARN = 11,
  CONDITION_EQUIPMENT = 20,
  CONDITION_EQUIPMENT_SUIT = 21,
  CONDITION_EQUIPMENT_QUILITY = 22,
  CONDITION_EQUIPMENT_ADDITION = 23,
  CONDITION_UPGRADE_ADDITION = 24,
  CONDITION_FORMULAITEM = 25,
  CONDITION_UPGRADEITEM = 26,
  CONDITION_FINISH_ACHI = 27,
  CONDITION_DATA_COUNT = 30,
  AchiConditionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AchiConditionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AchiConditionType_IsValid(int value);
const AchiConditionType AchiConditionType_MIN = CONDITION_NONE;
const AchiConditionType AchiConditionType_MAX = CONDITION_DATA_COUNT;
const int AchiConditionType_ARRAYSIZE = AchiConditionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AchiConditionType_descriptor();
inline const ::std::string& AchiConditionType_Name(AchiConditionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AchiConditionType_descriptor(), value);
}
inline bool AchiConditionType_Parse(
    const ::std::string& name, AchiConditionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AchiConditionType>(
    AchiConditionType_descriptor(), name, value);
}
// ===================================================================

class Cfg_Achievement_Row_CheckData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cfg_Achievement.Row.CheckData) */ {
 public:
  Cfg_Achievement_Row_CheckData();
  virtual ~Cfg_Achievement_Row_CheckData();

  Cfg_Achievement_Row_CheckData(const Cfg_Achievement_Row_CheckData& from);

  inline Cfg_Achievement_Row_CheckData& operator=(const Cfg_Achievement_Row_CheckData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cfg_Achievement_Row_CheckData& default_instance();

  static const Cfg_Achievement_Row_CheckData* internal_default_instance();

  void Swap(Cfg_Achievement_Row_CheckData* other);

  // implements Message ----------------------------------------------

  inline Cfg_Achievement_Row_CheckData* New() const { return New(NULL); }

  Cfg_Achievement_Row_CheckData* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cfg_Achievement_Row_CheckData* other);
  void UnsafeMergeFrom(const Cfg_Achievement_Row_CheckData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .AchiConditionType check_type = 1;
  void clear_check_type();
  static const int kCheckTypeFieldNumber = 1;
  ::AchiConditionType check_type() const;
  void set_check_type(::AchiConditionType value);

  // optional uint32 val0 = 2;
  void clear_val0();
  static const int kVal0FieldNumber = 2;
  ::google::protobuf::uint32 val0() const;
  void set_val0(::google::protobuf::uint32 value);

  // optional uint32 val1 = 3;
  void clear_val1();
  static const int kVal1FieldNumber = 3;
  ::google::protobuf::uint32 val1() const;
  void set_val1(::google::protobuf::uint32 value);

  // optional uint32 val2 = 4;
  void clear_val2();
  static const int kVal2FieldNumber = 4;
  ::google::protobuf::uint32 val2() const;
  void set_val2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cfg_Achievement.Row.CheckData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int check_type_;
  ::google::protobuf::uint32 val0_;
  ::google::protobuf::uint32 val1_;
  ::google::protobuf::uint32 val2_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto_impl();
  friend void  protobuf_AddDesc_config_2fCfg_5fAchievement_2eproto_impl();
  friend void protobuf_AssignDesc_config_2fCfg_5fAchievement_2eproto();
  friend void protobuf_ShutdownFile_config_2fCfg_5fAchievement_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Cfg_Achievement_Row_CheckData> Cfg_Achievement_Row_CheckData_default_instance_;

// -------------------------------------------------------------------

class Cfg_Achievement_Row_AwardData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cfg_Achievement.Row.AwardData) */ {
 public:
  Cfg_Achievement_Row_AwardData();
  virtual ~Cfg_Achievement_Row_AwardData();

  Cfg_Achievement_Row_AwardData(const Cfg_Achievement_Row_AwardData& from);

  inline Cfg_Achievement_Row_AwardData& operator=(const Cfg_Achievement_Row_AwardData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cfg_Achievement_Row_AwardData& default_instance();

  static const Cfg_Achievement_Row_AwardData* internal_default_instance();

  void Swap(Cfg_Achievement_Row_AwardData* other);

  // implements Message ----------------------------------------------

  inline Cfg_Achievement_Row_AwardData* New() const { return New(NULL); }

  Cfg_Achievement_Row_AwardData* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cfg_Achievement_Row_AwardData* other);
  void UnsafeMergeFrom(const Cfg_Achievement_Row_AwardData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 num = 2;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::uint32 num() const;
  void set_num(::google::protobuf::uint32 value);

  // optional uint32 flag = 3;
  void clear_flag();
  static const int kFlagFieldNumber = 3;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cfg_Achievement.Row.AwardData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 flag_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto_impl();
  friend void  protobuf_AddDesc_config_2fCfg_5fAchievement_2eproto_impl();
  friend void protobuf_AssignDesc_config_2fCfg_5fAchievement_2eproto();
  friend void protobuf_ShutdownFile_config_2fCfg_5fAchievement_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Cfg_Achievement_Row_AwardData> Cfg_Achievement_Row_AwardData_default_instance_;

// -------------------------------------------------------------------

class Cfg_Achievement_Row : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cfg_Achievement.Row) */ {
 public:
  Cfg_Achievement_Row();
  virtual ~Cfg_Achievement_Row();

  Cfg_Achievement_Row(const Cfg_Achievement_Row& from);

  inline Cfg_Achievement_Row& operator=(const Cfg_Achievement_Row& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cfg_Achievement_Row& default_instance();

  static const Cfg_Achievement_Row* internal_default_instance();

  void Swap(Cfg_Achievement_Row* other);

  // implements Message ----------------------------------------------

  inline Cfg_Achievement_Row* New() const { return New(NULL); }

  Cfg_Achievement_Row* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cfg_Achievement_Row* other);
  void UnsafeMergeFrom(const Cfg_Achievement_Row& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Cfg_Achievement_Row_CheckData CheckData;
  typedef Cfg_Achievement_Row_AwardData AwardData;

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 sort = 2;
  void clear_sort();
  static const int kSortFieldNumber = 2;
  ::google::protobuf::uint32 sort() const;
  void set_sort(::google::protobuf::uint32 value);

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string desc = 4;
  void clear_desc();
  static const int kDescFieldNumber = 4;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // optional uint32 lev_req = 5;
  void clear_lev_req();
  static const int kLevReqFieldNumber = 5;
  ::google::protobuf::uint32 lev_req() const;
  void set_lev_req(::google::protobuf::uint32 value);

  // optional uint32 prof_req = 6;
  void clear_prof_req();
  static const int kProfReqFieldNumber = 6;
  ::google::protobuf::uint32 prof_req() const;
  void set_prof_req(::google::protobuf::uint32 value);

  // optional uint32 group_id = 7;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 7;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // optional .Cfg_Achievement.Row.CheckData check_data = 8;
  bool has_check_data() const;
  void clear_check_data();
  static const int kCheckDataFieldNumber = 8;
  const ::Cfg_Achievement_Row_CheckData& check_data() const;
  ::Cfg_Achievement_Row_CheckData* mutable_check_data();
  ::Cfg_Achievement_Row_CheckData* release_check_data();
  void set_allocated_check_data(::Cfg_Achievement_Row_CheckData* check_data);

  // repeated .Cfg_Achievement.Row.AwardData award_list = 9;
  int award_list_size() const;
  void clear_award_list();
  static const int kAwardListFieldNumber = 9;
  const ::Cfg_Achievement_Row_AwardData& award_list(int index) const;
  ::Cfg_Achievement_Row_AwardData* mutable_award_list(int index);
  ::Cfg_Achievement_Row_AwardData* add_award_list();
  ::google::protobuf::RepeatedPtrField< ::Cfg_Achievement_Row_AwardData >*
      mutable_award_list();
  const ::google::protobuf::RepeatedPtrField< ::Cfg_Achievement_Row_AwardData >&
      award_list() const;

  // optional uint32 award_exp = 10;
  void clear_award_exp();
  static const int kAwardExpFieldNumber = 10;
  ::google::protobuf::uint32 award_exp() const;
  void set_award_exp(::google::protobuf::uint32 value);

  // optional uint32 award_achipoint = 11;
  void clear_award_achipoint();
  static const int kAwardAchipointFieldNumber = 11;
  ::google::protobuf::uint32 award_achipoint() const;
  void set_award_achipoint(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cfg_Achievement.Row)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Cfg_Achievement_Row_AwardData > award_list_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::Cfg_Achievement_Row_CheckData* check_data_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 sort_;
  ::google::protobuf::uint32 lev_req_;
  ::google::protobuf::uint32 prof_req_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 award_exp_;
  ::google::protobuf::uint32 award_achipoint_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto_impl();
  friend void  protobuf_AddDesc_config_2fCfg_5fAchievement_2eproto_impl();
  friend void protobuf_AssignDesc_config_2fCfg_5fAchievement_2eproto();
  friend void protobuf_ShutdownFile_config_2fCfg_5fAchievement_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Cfg_Achievement_Row> Cfg_Achievement_Row_default_instance_;

// -------------------------------------------------------------------

class Cfg_Achievement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cfg_Achievement) */ {
 public:
  Cfg_Achievement();
  virtual ~Cfg_Achievement();

  Cfg_Achievement(const Cfg_Achievement& from);

  inline Cfg_Achievement& operator=(const Cfg_Achievement& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cfg_Achievement& default_instance();

  static const Cfg_Achievement* internal_default_instance();

  void Swap(Cfg_Achievement* other);

  // implements Message ----------------------------------------------

  inline Cfg_Achievement* New() const { return New(NULL); }

  Cfg_Achievement* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cfg_Achievement* other);
  void UnsafeMergeFrom(const Cfg_Achievement& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Cfg_Achievement_Row Row;

  // accessors -------------------------------------------------------

  // repeated .Cfg_Achievement.Row rows = 1;
  int rows_size() const;
  void clear_rows();
  static const int kRowsFieldNumber = 1;
  const ::Cfg_Achievement_Row& rows(int index) const;
  ::Cfg_Achievement_Row* mutable_rows(int index);
  ::Cfg_Achievement_Row* add_rows();
  ::google::protobuf::RepeatedPtrField< ::Cfg_Achievement_Row >*
      mutable_rows();
  const ::google::protobuf::RepeatedPtrField< ::Cfg_Achievement_Row >&
      rows() const;

  // @@protoc_insertion_point(class_scope:Cfg_Achievement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Cfg_Achievement_Row > rows_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_config_2fCfg_5fAchievement_2eproto_impl();
  friend void  protobuf_AddDesc_config_2fCfg_5fAchievement_2eproto_impl();
  friend void protobuf_AssignDesc_config_2fCfg_5fAchievement_2eproto();
  friend void protobuf_ShutdownFile_config_2fCfg_5fAchievement_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Cfg_Achievement> Cfg_Achievement_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Cfg_Achievement_Row_CheckData

// optional .AchiConditionType check_type = 1;
inline void Cfg_Achievement_Row_CheckData::clear_check_type() {
  check_type_ = 0;
}
inline ::AchiConditionType Cfg_Achievement_Row_CheckData::check_type() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.CheckData.check_type)
  return static_cast< ::AchiConditionType >(check_type_);
}
inline void Cfg_Achievement_Row_CheckData::set_check_type(::AchiConditionType value) {
  
  check_type_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.CheckData.check_type)
}

// optional uint32 val0 = 2;
inline void Cfg_Achievement_Row_CheckData::clear_val0() {
  val0_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Achievement_Row_CheckData::val0() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.CheckData.val0)
  return val0_;
}
inline void Cfg_Achievement_Row_CheckData::set_val0(::google::protobuf::uint32 value) {
  
  val0_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.CheckData.val0)
}

// optional uint32 val1 = 3;
inline void Cfg_Achievement_Row_CheckData::clear_val1() {
  val1_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Achievement_Row_CheckData::val1() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.CheckData.val1)
  return val1_;
}
inline void Cfg_Achievement_Row_CheckData::set_val1(::google::protobuf::uint32 value) {
  
  val1_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.CheckData.val1)
}

// optional uint32 val2 = 4;
inline void Cfg_Achievement_Row_CheckData::clear_val2() {
  val2_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Achievement_Row_CheckData::val2() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.CheckData.val2)
  return val2_;
}
inline void Cfg_Achievement_Row_CheckData::set_val2(::google::protobuf::uint32 value) {
  
  val2_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.CheckData.val2)
}

inline const Cfg_Achievement_Row_CheckData* Cfg_Achievement_Row_CheckData::internal_default_instance() {
  return &Cfg_Achievement_Row_CheckData_default_instance_.get();
}
// -------------------------------------------------------------------

// Cfg_Achievement_Row_AwardData

// optional uint32 type = 1;
inline void Cfg_Achievement_Row_AwardData::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Achievement_Row_AwardData::type() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.AwardData.type)
  return type_;
}
inline void Cfg_Achievement_Row_AwardData::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.AwardData.type)
}

// optional uint32 num = 2;
inline void Cfg_Achievement_Row_AwardData::clear_num() {
  num_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Achievement_Row_AwardData::num() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.AwardData.num)
  return num_;
}
inline void Cfg_Achievement_Row_AwardData::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.AwardData.num)
}

// optional uint32 flag = 3;
inline void Cfg_Achievement_Row_AwardData::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Achievement_Row_AwardData::flag() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.AwardData.flag)
  return flag_;
}
inline void Cfg_Achievement_Row_AwardData::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.AwardData.flag)
}

inline const Cfg_Achievement_Row_AwardData* Cfg_Achievement_Row_AwardData::internal_default_instance() {
  return &Cfg_Achievement_Row_AwardData_default_instance_.get();
}
// -------------------------------------------------------------------

// Cfg_Achievement_Row

// optional uint32 id = 1;
inline void Cfg_Achievement_Row::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Achievement_Row::id() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.id)
  return id_;
}
inline void Cfg_Achievement_Row::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.id)
}

// optional uint32 sort = 2;
inline void Cfg_Achievement_Row::clear_sort() {
  sort_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Achievement_Row::sort() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.sort)
  return sort_;
}
inline void Cfg_Achievement_Row::set_sort(::google::protobuf::uint32 value) {
  
  sort_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.sort)
}

// optional string name = 3;
inline void Cfg_Achievement_Row::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Cfg_Achievement_Row::name() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Achievement_Row::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.name)
}
inline void Cfg_Achievement_Row::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cfg_Achievement.Row.name)
}
inline void Cfg_Achievement_Row::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cfg_Achievement.Row.name)
}
inline ::std::string* Cfg_Achievement_Row::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Cfg_Achievement.Row.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Cfg_Achievement_Row::release_name() {
  // @@protoc_insertion_point(field_release:Cfg_Achievement.Row.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Achievement_Row::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Cfg_Achievement.Row.name)
}

// optional string desc = 4;
inline void Cfg_Achievement_Row::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Cfg_Achievement_Row::desc() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.desc)
  return desc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Achievement_Row::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.desc)
}
inline void Cfg_Achievement_Row::set_desc(const char* value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Cfg_Achievement.Row.desc)
}
inline void Cfg_Achievement_Row::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Cfg_Achievement.Row.desc)
}
inline ::std::string* Cfg_Achievement_Row::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:Cfg_Achievement.Row.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Cfg_Achievement_Row::release_desc() {
  // @@protoc_insertion_point(field_release:Cfg_Achievement.Row.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Cfg_Achievement_Row::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:Cfg_Achievement.Row.desc)
}

// optional uint32 lev_req = 5;
inline void Cfg_Achievement_Row::clear_lev_req() {
  lev_req_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Achievement_Row::lev_req() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.lev_req)
  return lev_req_;
}
inline void Cfg_Achievement_Row::set_lev_req(::google::protobuf::uint32 value) {
  
  lev_req_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.lev_req)
}

// optional uint32 prof_req = 6;
inline void Cfg_Achievement_Row::clear_prof_req() {
  prof_req_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Achievement_Row::prof_req() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.prof_req)
  return prof_req_;
}
inline void Cfg_Achievement_Row::set_prof_req(::google::protobuf::uint32 value) {
  
  prof_req_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.prof_req)
}

// optional uint32 group_id = 7;
inline void Cfg_Achievement_Row::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Achievement_Row::group_id() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.group_id)
  return group_id_;
}
inline void Cfg_Achievement_Row::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.group_id)
}

// optional .Cfg_Achievement.Row.CheckData check_data = 8;
inline bool Cfg_Achievement_Row::has_check_data() const {
  return this != internal_default_instance() && check_data_ != NULL;
}
inline void Cfg_Achievement_Row::clear_check_data() {
  if (GetArenaNoVirtual() == NULL && check_data_ != NULL) delete check_data_;
  check_data_ = NULL;
}
inline const ::Cfg_Achievement_Row_CheckData& Cfg_Achievement_Row::check_data() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.check_data)
  return check_data_ != NULL ? *check_data_
                         : *::Cfg_Achievement_Row_CheckData::internal_default_instance();
}
inline ::Cfg_Achievement_Row_CheckData* Cfg_Achievement_Row::mutable_check_data() {
  
  if (check_data_ == NULL) {
    check_data_ = new ::Cfg_Achievement_Row_CheckData;
  }
  // @@protoc_insertion_point(field_mutable:Cfg_Achievement.Row.check_data)
  return check_data_;
}
inline ::Cfg_Achievement_Row_CheckData* Cfg_Achievement_Row::release_check_data() {
  // @@protoc_insertion_point(field_release:Cfg_Achievement.Row.check_data)
  
  ::Cfg_Achievement_Row_CheckData* temp = check_data_;
  check_data_ = NULL;
  return temp;
}
inline void Cfg_Achievement_Row::set_allocated_check_data(::Cfg_Achievement_Row_CheckData* check_data) {
  delete check_data_;
  check_data_ = check_data;
  if (check_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Cfg_Achievement.Row.check_data)
}

// repeated .Cfg_Achievement.Row.AwardData award_list = 9;
inline int Cfg_Achievement_Row::award_list_size() const {
  return award_list_.size();
}
inline void Cfg_Achievement_Row::clear_award_list() {
  award_list_.Clear();
}
inline const ::Cfg_Achievement_Row_AwardData& Cfg_Achievement_Row::award_list(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.award_list)
  return award_list_.Get(index);
}
inline ::Cfg_Achievement_Row_AwardData* Cfg_Achievement_Row::mutable_award_list(int index) {
  // @@protoc_insertion_point(field_mutable:Cfg_Achievement.Row.award_list)
  return award_list_.Mutable(index);
}
inline ::Cfg_Achievement_Row_AwardData* Cfg_Achievement_Row::add_award_list() {
  // @@protoc_insertion_point(field_add:Cfg_Achievement.Row.award_list)
  return award_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Cfg_Achievement_Row_AwardData >*
Cfg_Achievement_Row::mutable_award_list() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_Achievement.Row.award_list)
  return &award_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Cfg_Achievement_Row_AwardData >&
Cfg_Achievement_Row::award_list() const {
  // @@protoc_insertion_point(field_list:Cfg_Achievement.Row.award_list)
  return award_list_;
}

// optional uint32 award_exp = 10;
inline void Cfg_Achievement_Row::clear_award_exp() {
  award_exp_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Achievement_Row::award_exp() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.award_exp)
  return award_exp_;
}
inline void Cfg_Achievement_Row::set_award_exp(::google::protobuf::uint32 value) {
  
  award_exp_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.award_exp)
}

// optional uint32 award_achipoint = 11;
inline void Cfg_Achievement_Row::clear_award_achipoint() {
  award_achipoint_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_Achievement_Row::award_achipoint() const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.Row.award_achipoint)
  return award_achipoint_;
}
inline void Cfg_Achievement_Row::set_award_achipoint(::google::protobuf::uint32 value) {
  
  award_achipoint_ = value;
  // @@protoc_insertion_point(field_set:Cfg_Achievement.Row.award_achipoint)
}

inline const Cfg_Achievement_Row* Cfg_Achievement_Row::internal_default_instance() {
  return &Cfg_Achievement_Row_default_instance_.get();
}
// -------------------------------------------------------------------

// Cfg_Achievement

// repeated .Cfg_Achievement.Row rows = 1;
inline int Cfg_Achievement::rows_size() const {
  return rows_.size();
}
inline void Cfg_Achievement::clear_rows() {
  rows_.Clear();
}
inline const ::Cfg_Achievement_Row& Cfg_Achievement::rows(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_Achievement.rows)
  return rows_.Get(index);
}
inline ::Cfg_Achievement_Row* Cfg_Achievement::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:Cfg_Achievement.rows)
  return rows_.Mutable(index);
}
inline ::Cfg_Achievement_Row* Cfg_Achievement::add_rows() {
  // @@protoc_insertion_point(field_add:Cfg_Achievement.rows)
  return rows_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Cfg_Achievement_Row >*
Cfg_Achievement::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_Achievement.rows)
  return &rows_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Cfg_Achievement_Row >&
Cfg_Achievement::rows() const {
  // @@protoc_insertion_point(field_list:Cfg_Achievement.rows)
  return rows_;
}

inline const Cfg_Achievement* Cfg_Achievement::internal_default_instance() {
  return &Cfg_Achievement_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::AchiConditionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AchiConditionType>() {
  return ::AchiConditionType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_config_2fCfg_5fAchievement_2eproto__INCLUDED
