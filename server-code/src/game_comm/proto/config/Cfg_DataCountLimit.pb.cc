// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config/Cfg_DataCountLimit.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "config/Cfg_DataCountLimit.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Cfg_DataCountLimit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Cfg_DataCountLimit_reflection_ = NULL;
const ::google::protobuf::Descriptor* Cfg_DataCountLimit_Row_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Cfg_DataCountLimit_Row_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_config_2fCfg_5fDataCountLimit_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_config_2fCfg_5fDataCountLimit_2eproto() {
  protobuf_AddDesc_config_2fCfg_5fDataCountLimit_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "config/Cfg_DataCountLimit.proto");
  GOOGLE_CHECK(file != NULL);
  Cfg_DataCountLimit_descriptor_ = file->message_type(0);
  static const int Cfg_DataCountLimit_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_DataCountLimit, rows_),
  };
  Cfg_DataCountLimit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Cfg_DataCountLimit_descriptor_,
      Cfg_DataCountLimit::internal_default_instance(),
      Cfg_DataCountLimit_offsets_,
      -1,
      -1,
      -1,
      sizeof(Cfg_DataCountLimit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_DataCountLimit, _internal_metadata_));
  Cfg_DataCountLimit_Row_descriptor_ = Cfg_DataCountLimit_descriptor_->nested_type(0);
  static const int Cfg_DataCountLimit_Row_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_DataCountLimit_Row, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_DataCountLimit_Row, keyidx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_DataCountLimit_Row, max_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_DataCountLimit_Row, reset_time_),
  };
  Cfg_DataCountLimit_Row_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Cfg_DataCountLimit_Row_descriptor_,
      Cfg_DataCountLimit_Row::internal_default_instance(),
      Cfg_DataCountLimit_Row_offsets_,
      -1,
      -1,
      -1,
      sizeof(Cfg_DataCountLimit_Row),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Cfg_DataCountLimit_Row, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_config_2fCfg_5fDataCountLimit_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Cfg_DataCountLimit_descriptor_, Cfg_DataCountLimit::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Cfg_DataCountLimit_Row_descriptor_, Cfg_DataCountLimit_Row::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_config_2fCfg_5fDataCountLimit_2eproto() {
  Cfg_DataCountLimit_default_instance_.Shutdown();
  delete Cfg_DataCountLimit_reflection_;
  Cfg_DataCountLimit_Row_default_instance_.Shutdown();
  delete Cfg_DataCountLimit_Row_reflection_;
}

void protobuf_InitDefaults_config_2fCfg_5fDataCountLimit_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  Cfg_DataCountLimit_default_instance_.DefaultConstruct();
  Cfg_DataCountLimit_Row_default_instance_.DefaultConstruct();
  Cfg_DataCountLimit_default_instance_.get_mutable()->InitAsDefaultInstance();
  Cfg_DataCountLimit_Row_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_config_2fCfg_5fDataCountLimit_2eproto_once_);
void protobuf_InitDefaults_config_2fCfg_5fDataCountLimit_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_config_2fCfg_5fDataCountLimit_2eproto_once_,
                 &protobuf_InitDefaults_config_2fCfg_5fDataCountLimit_2eproto_impl);
}
void protobuf_AddDesc_config_2fCfg_5fDataCountLimit_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_config_2fCfg_5fDataCountLimit_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037config/Cfg_DataCountLimit.proto\"\207\001\n\022Cf"
    "g_DataCountLimit\022%\n\004rows\030\001 \003(\0132\027.Cfg_Dat"
    "aCountLimit.Row\032J\n\003Row\022\014\n\004type\030\001 \001(\r\022\016\n\006"
    "keyidx\030\002 \001(\r\022\021\n\tmax_count\030\003 \001(\r\022\022\n\nreset"
    "_time\030\004 \001(\rB\002H\002b\006proto3", 183);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "config/Cfg_DataCountLimit.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_config_2fCfg_5fDataCountLimit_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_config_2fCfg_5fDataCountLimit_2eproto_once_);
void protobuf_AddDesc_config_2fCfg_5fDataCountLimit_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_config_2fCfg_5fDataCountLimit_2eproto_once_,
                 &protobuf_AddDesc_config_2fCfg_5fDataCountLimit_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_config_2fCfg_5fDataCountLimit_2eproto {
  StaticDescriptorInitializer_config_2fCfg_5fDataCountLimit_2eproto() {
    protobuf_AddDesc_config_2fCfg_5fDataCountLimit_2eproto();
  }
} static_descriptor_initializer_config_2fCfg_5fDataCountLimit_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cfg_DataCountLimit_Row::kTypeFieldNumber;
const int Cfg_DataCountLimit_Row::kKeyidxFieldNumber;
const int Cfg_DataCountLimit_Row::kMaxCountFieldNumber;
const int Cfg_DataCountLimit_Row::kResetTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cfg_DataCountLimit_Row::Cfg_DataCountLimit_Row()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_config_2fCfg_5fDataCountLimit_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cfg_DataCountLimit.Row)
}

void Cfg_DataCountLimit_Row::InitAsDefaultInstance() {
}

Cfg_DataCountLimit_Row::Cfg_DataCountLimit_Row(const Cfg_DataCountLimit_Row& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cfg_DataCountLimit.Row)
}

void Cfg_DataCountLimit_Row::SharedCtor() {
  ::memset(&type_, 0, reinterpret_cast<char*>(&reset_time_) -
    reinterpret_cast<char*>(&type_) + sizeof(reset_time_));
  _cached_size_ = 0;
}

Cfg_DataCountLimit_Row::~Cfg_DataCountLimit_Row() {
  // @@protoc_insertion_point(destructor:Cfg_DataCountLimit.Row)
  SharedDtor();
}

void Cfg_DataCountLimit_Row::SharedDtor() {
}

void Cfg_DataCountLimit_Row::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cfg_DataCountLimit_Row::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Cfg_DataCountLimit_Row_descriptor_;
}

const Cfg_DataCountLimit_Row& Cfg_DataCountLimit_Row::default_instance() {
  protobuf_InitDefaults_config_2fCfg_5fDataCountLimit_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Cfg_DataCountLimit_Row> Cfg_DataCountLimit_Row_default_instance_;

Cfg_DataCountLimit_Row* Cfg_DataCountLimit_Row::New(::google::protobuf::Arena* arena) const {
  Cfg_DataCountLimit_Row* n = new Cfg_DataCountLimit_Row;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cfg_DataCountLimit_Row::UnsafeMergeFrom(const Cfg_DataCountLimit_Row& from) {
  MergeFrom(from);
}
void Cfg_DataCountLimit_Row::Swap(Cfg_DataCountLimit_Row* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cfg_DataCountLimit_Row::InternalSwap(Cfg_DataCountLimit_Row* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Cfg_DataCountLimit_Row::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Cfg_DataCountLimit_Row_descriptor_;
  metadata.reflection = Cfg_DataCountLimit_Row_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cfg_DataCountLimit::kRowsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cfg_DataCountLimit::Cfg_DataCountLimit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_config_2fCfg_5fDataCountLimit_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cfg_DataCountLimit)
}

void Cfg_DataCountLimit::InitAsDefaultInstance() {
}

Cfg_DataCountLimit::Cfg_DataCountLimit(const Cfg_DataCountLimit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Cfg_DataCountLimit)
}

void Cfg_DataCountLimit::SharedCtor() {
  _cached_size_ = 0;
}

Cfg_DataCountLimit::~Cfg_DataCountLimit() {
  // @@protoc_insertion_point(destructor:Cfg_DataCountLimit)
  SharedDtor();
}

void Cfg_DataCountLimit::SharedDtor() {
}

void Cfg_DataCountLimit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cfg_DataCountLimit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Cfg_DataCountLimit_descriptor_;
}

const Cfg_DataCountLimit& Cfg_DataCountLimit::default_instance() {
  protobuf_InitDefaults_config_2fCfg_5fDataCountLimit_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Cfg_DataCountLimit> Cfg_DataCountLimit_default_instance_;

Cfg_DataCountLimit* Cfg_DataCountLimit::New(::google::protobuf::Arena* arena) const {
  Cfg_DataCountLimit* n = new Cfg_DataCountLimit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cfg_DataCountLimit::UnsafeMergeFrom(const Cfg_DataCountLimit& from) {
  MergeFrom(from);
}
void Cfg_DataCountLimit::Swap(Cfg_DataCountLimit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cfg_DataCountLimit::InternalSwap(Cfg_DataCountLimit* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Cfg_DataCountLimit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Cfg_DataCountLimit_descriptor_;
  metadata.reflection = Cfg_DataCountLimit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Cfg_DataCountLimit_Row

// optional uint32 type = 1;
void Cfg_DataCountLimit_Row::clear_type() {
  type_ = 0u;
}
::google::protobuf::uint32 Cfg_DataCountLimit_Row::type() const {
  // @@protoc_insertion_point(field_get:Cfg_DataCountLimit.Row.type)
  return type_;
}
void Cfg_DataCountLimit_Row::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Cfg_DataCountLimit.Row.type)
}

// optional uint32 keyidx = 2;
void Cfg_DataCountLimit_Row::clear_keyidx() {
  keyidx_ = 0u;
}
::google::protobuf::uint32 Cfg_DataCountLimit_Row::keyidx() const {
  // @@protoc_insertion_point(field_get:Cfg_DataCountLimit.Row.keyidx)
  return keyidx_;
}
void Cfg_DataCountLimit_Row::set_keyidx(::google::protobuf::uint32 value) {
  
  keyidx_ = value;
  // @@protoc_insertion_point(field_set:Cfg_DataCountLimit.Row.keyidx)
}

// optional uint32 max_count = 3;
void Cfg_DataCountLimit_Row::clear_max_count() {
  max_count_ = 0u;
}
::google::protobuf::uint32 Cfg_DataCountLimit_Row::max_count() const {
  // @@protoc_insertion_point(field_get:Cfg_DataCountLimit.Row.max_count)
  return max_count_;
}
void Cfg_DataCountLimit_Row::set_max_count(::google::protobuf::uint32 value) {
  
  max_count_ = value;
  // @@protoc_insertion_point(field_set:Cfg_DataCountLimit.Row.max_count)
}

// optional uint32 reset_time = 4;
void Cfg_DataCountLimit_Row::clear_reset_time() {
  reset_time_ = 0u;
}
::google::protobuf::uint32 Cfg_DataCountLimit_Row::reset_time() const {
  // @@protoc_insertion_point(field_get:Cfg_DataCountLimit.Row.reset_time)
  return reset_time_;
}
void Cfg_DataCountLimit_Row::set_reset_time(::google::protobuf::uint32 value) {
  
  reset_time_ = value;
  // @@protoc_insertion_point(field_set:Cfg_DataCountLimit.Row.reset_time)
}

inline const Cfg_DataCountLimit_Row* Cfg_DataCountLimit_Row::internal_default_instance() {
  return &Cfg_DataCountLimit_Row_default_instance_.get();
}
// -------------------------------------------------------------------

// Cfg_DataCountLimit

// repeated .Cfg_DataCountLimit.Row rows = 1;
int Cfg_DataCountLimit::rows_size() const {
  return rows_.size();
}
void Cfg_DataCountLimit::clear_rows() {
  rows_.Clear();
}
const ::Cfg_DataCountLimit_Row& Cfg_DataCountLimit::rows(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_DataCountLimit.rows)
  return rows_.Get(index);
}
::Cfg_DataCountLimit_Row* Cfg_DataCountLimit::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:Cfg_DataCountLimit.rows)
  return rows_.Mutable(index);
}
::Cfg_DataCountLimit_Row* Cfg_DataCountLimit::add_rows() {
  // @@protoc_insertion_point(field_add:Cfg_DataCountLimit.rows)
  return rows_.Add();
}
::google::protobuf::RepeatedPtrField< ::Cfg_DataCountLimit_Row >*
Cfg_DataCountLimit::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_DataCountLimit.rows)
  return &rows_;
}
const ::google::protobuf::RepeatedPtrField< ::Cfg_DataCountLimit_Row >&
Cfg_DataCountLimit::rows() const {
  // @@protoc_insertion_point(field_list:Cfg_DataCountLimit.rows)
  return rows_;
}

inline const Cfg_DataCountLimit* Cfg_DataCountLimit::internal_default_instance() {
  return &Cfg_DataCountLimit_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
