// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config/Cfg_AIType.proto

#ifndef PROTOBUF_config_2fCfg_5fAIType_2eproto__INCLUDED
#define PROTOBUF_config_2fCfg_5fAIType_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_config_2fCfg_5fAIType_2eproto();
void protobuf_InitDefaults_config_2fCfg_5fAIType_2eproto();
void protobuf_AssignDesc_config_2fCfg_5fAIType_2eproto();
void protobuf_ShutdownFile_config_2fCfg_5fAIType_2eproto();

class Cfg_AIType;
class Cfg_AIType_Row;

// ===================================================================

class Cfg_AIType_Row : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cfg_AIType.Row) */ {
 public:
  Cfg_AIType_Row();
  virtual ~Cfg_AIType_Row();

  Cfg_AIType_Row(const Cfg_AIType_Row& from);

  inline Cfg_AIType_Row& operator=(const Cfg_AIType_Row& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cfg_AIType_Row& default_instance();

  static const Cfg_AIType_Row* internal_default_instance();

  void Swap(Cfg_AIType_Row* other);

  // implements Message ----------------------------------------------

  inline Cfg_AIType_Row* New() const { return New(NULL); }

  Cfg_AIType_Row* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cfg_AIType_Row* other);
  void UnsafeMergeFrom(const Cfg_AIType_Row& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 idmonster = 1;
  void clear_idmonster();
  static const int kIdmonsterFieldNumber = 1;
  ::google::protobuf::uint32 idmonster() const;
  void set_idmonster(::google::protobuf::uint32 value);

  // optional uint32 ai_type = 2;
  void clear_ai_type();
  static const int kAiTypeFieldNumber = 2;
  ::google::protobuf::uint32 ai_type() const;
  void set_ai_type(::google::protobuf::uint32 value);

  // optional uint32 idle_randomwalk_ms_min = 3;
  void clear_idle_randomwalk_ms_min();
  static const int kIdleRandomwalkMsMinFieldNumber = 3;
  ::google::protobuf::uint32 idle_randomwalk_ms_min() const;
  void set_idle_randomwalk_ms_min(::google::protobuf::uint32 value);

  // optional uint32 idle_randomwalk_ms_max = 4;
  void clear_idle_randomwalk_ms_max();
  static const int kIdleRandomwalkMsMaxFieldNumber = 4;
  ::google::protobuf::uint32 idle_randomwalk_ms_max() const;
  void set_idle_randomwalk_ms_max(::google::protobuf::uint32 value);

  // optional float idle_randomwalk_step_min = 5;
  void clear_idle_randomwalk_step_min();
  static const int kIdleRandomwalkStepMinFieldNumber = 5;
  float idle_randomwalk_step_min() const;
  void set_idle_randomwalk_step_min(float value);

  // optional float idle_randomwalk_step_max = 6;
  void clear_idle_randomwalk_step_max();
  static const int kIdleRandomwalkStepMaxFieldNumber = 6;
  float idle_randomwalk_step_max() const;
  void set_idle_randomwalk_step_max(float value);

  // optional float idle_randomwalk_range = 7;
  void clear_idle_randomwalk_range();
  static const int kIdleRandomwalkRangeFieldNumber = 7;
  float idle_randomwalk_range() const;
  void set_idle_randomwalk_range(float value);

  // optional float attack_pursue_selfrange = 8;
  void clear_attack_pursue_selfrange();
  static const int kAttackPursueSelfrangeFieldNumber = 8;
  float attack_pursue_selfrange() const;
  void set_attack_pursue_selfrange(float value);

  // optional float attack_target_range = 9;
  void clear_attack_target_range();
  static const int kAttackTargetRangeFieldNumber = 9;
  float attack_target_range() const;
  void set_attack_target_range(float value);

  // optional float search_enemy_range = 10;
  void clear_search_enemy_range();
  static const int kSearchEnemyRangeFieldNumber = 10;
  float search_enemy_range() const;
  void set_search_enemy_range(float value);

  // optional float search_enemy_ms_min = 11;
  void clear_search_enemy_ms_min();
  static const int kSearchEnemyMsMinFieldNumber = 11;
  float search_enemy_ms_min() const;
  void set_search_enemy_ms_min(float value);

  // optional float search_enemy_ms_max = 12;
  void clear_search_enemy_ms_max();
  static const int kSearchEnemyMsMaxFieldNumber = 12;
  float search_enemy_ms_max() const;
  void set_search_enemy_ms_max(float value);

  // optional uint32 patrol_wait_ms_min = 13;
  void clear_patrol_wait_ms_min();
  static const int kPatrolWaitMsMinFieldNumber = 13;
  ::google::protobuf::uint32 patrol_wait_ms_min() const;
  void set_patrol_wait_ms_min(::google::protobuf::uint32 value);

  // optional uint32 patrol_wait_ms_max = 14;
  void clear_patrol_wait_ms_max();
  static const int kPatrolWaitMsMaxFieldNumber = 14;
  ::google::protobuf::uint32 patrol_wait_ms_max() const;
  void set_patrol_wait_ms_max(::google::protobuf::uint32 value);

  // optional float escape_range_min = 15;
  void clear_escape_range_min();
  static const int kEscapeRangeMinFieldNumber = 15;
  float escape_range_min() const;
  void set_escape_range_min(float value);

  // optional float escape_range_max = 16;
  void clear_escape_range_max();
  static const int kEscapeRangeMaxFieldNumber = 16;
  float escape_range_max() const;
  void set_escape_range_max(float value);

  // optional bool can_approach = 17;
  void clear_can_approach();
  static const int kCanApproachFieldNumber = 17;
  bool can_approach() const;
  void set_can_approach(bool value);

  // optional uint32 attack_wait_ms = 18;
  void clear_attack_wait_ms();
  static const int kAttackWaitMsFieldNumber = 18;
  ::google::protobuf::uint32 attack_wait_ms() const;
  void set_attack_wait_ms(::google::protobuf::uint32 value);

  // optional uint32 targetfam_id = 20;
  void clear_targetfam_id();
  static const int kTargetfamIdFieldNumber = 20;
  ::google::protobuf::uint32 targetfam_id() const;
  void set_targetfam_id(::google::protobuf::uint32 value);

  // repeated uint32 skill_id = 21;
  int skill_id_size() const;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 21;
  ::google::protobuf::uint32 skill_id(int index) const;
  void set_skill_id(int index, ::google::protobuf::uint32 value);
  void add_skill_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill_id();

  // optional uint32 follow_path = 22;
  void clear_follow_path();
  static const int kFollowPathFieldNumber = 22;
  ::google::protobuf::uint32 follow_path() const;
  void set_follow_path(::google::protobuf::uint32 value);

  // optional uint32 script_id = 23;
  void clear_script_id();
  static const int kScriptIdFieldNumber = 23;
  ::google::protobuf::uint32 script_id() const;
  void set_script_id(::google::protobuf::uint32 value);

  // optional bool ai_debug = 24;
  void clear_ai_debug();
  static const int kAiDebugFieldNumber = 24;
  bool ai_debug() const;
  void set_ai_debug(bool value);

  // @@protoc_insertion_point(class_scope:Cfg_AIType.Row)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_id_;
  ::google::protobuf::uint32 idmonster_;
  ::google::protobuf::uint32 ai_type_;
  ::google::protobuf::uint32 idle_randomwalk_ms_min_;
  ::google::protobuf::uint32 idle_randomwalk_ms_max_;
  float idle_randomwalk_step_min_;
  float idle_randomwalk_step_max_;
  float idle_randomwalk_range_;
  float attack_pursue_selfrange_;
  float attack_target_range_;
  float search_enemy_range_;
  float search_enemy_ms_min_;
  float search_enemy_ms_max_;
  ::google::protobuf::uint32 patrol_wait_ms_min_;
  ::google::protobuf::uint32 patrol_wait_ms_max_;
  float escape_range_min_;
  float escape_range_max_;
  ::google::protobuf::uint32 attack_wait_ms_;
  ::google::protobuf::uint32 targetfam_id_;
  bool can_approach_;
  bool ai_debug_;
  ::google::protobuf::uint32 follow_path_;
  ::google::protobuf::uint32 script_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_config_2fCfg_5fAIType_2eproto_impl();
  friend void  protobuf_AddDesc_config_2fCfg_5fAIType_2eproto_impl();
  friend void protobuf_AssignDesc_config_2fCfg_5fAIType_2eproto();
  friend void protobuf_ShutdownFile_config_2fCfg_5fAIType_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Cfg_AIType_Row> Cfg_AIType_Row_default_instance_;

// -------------------------------------------------------------------

class Cfg_AIType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Cfg_AIType) */ {
 public:
  Cfg_AIType();
  virtual ~Cfg_AIType();

  Cfg_AIType(const Cfg_AIType& from);

  inline Cfg_AIType& operator=(const Cfg_AIType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cfg_AIType& default_instance();

  static const Cfg_AIType* internal_default_instance();

  void Swap(Cfg_AIType* other);

  // implements Message ----------------------------------------------

  inline Cfg_AIType* New() const { return New(NULL); }

  Cfg_AIType* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cfg_AIType* other);
  void UnsafeMergeFrom(const Cfg_AIType& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Cfg_AIType_Row Row;

  // accessors -------------------------------------------------------

  // repeated .Cfg_AIType.Row rows = 1;
  int rows_size() const;
  void clear_rows();
  static const int kRowsFieldNumber = 1;
  const ::Cfg_AIType_Row& rows(int index) const;
  ::Cfg_AIType_Row* mutable_rows(int index);
  ::Cfg_AIType_Row* add_rows();
  ::google::protobuf::RepeatedPtrField< ::Cfg_AIType_Row >*
      mutable_rows();
  const ::google::protobuf::RepeatedPtrField< ::Cfg_AIType_Row >&
      rows() const;

  // @@protoc_insertion_point(class_scope:Cfg_AIType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Cfg_AIType_Row > rows_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_config_2fCfg_5fAIType_2eproto_impl();
  friend void  protobuf_AddDesc_config_2fCfg_5fAIType_2eproto_impl();
  friend void protobuf_AssignDesc_config_2fCfg_5fAIType_2eproto();
  friend void protobuf_ShutdownFile_config_2fCfg_5fAIType_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Cfg_AIType> Cfg_AIType_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Cfg_AIType_Row

// optional uint32 idmonster = 1;
inline void Cfg_AIType_Row::clear_idmonster() {
  idmonster_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_AIType_Row::idmonster() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.idmonster)
  return idmonster_;
}
inline void Cfg_AIType_Row::set_idmonster(::google::protobuf::uint32 value) {
  
  idmonster_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.idmonster)
}

// optional uint32 ai_type = 2;
inline void Cfg_AIType_Row::clear_ai_type() {
  ai_type_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_AIType_Row::ai_type() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.ai_type)
  return ai_type_;
}
inline void Cfg_AIType_Row::set_ai_type(::google::protobuf::uint32 value) {
  
  ai_type_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.ai_type)
}

// optional uint32 idle_randomwalk_ms_min = 3;
inline void Cfg_AIType_Row::clear_idle_randomwalk_ms_min() {
  idle_randomwalk_ms_min_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_AIType_Row::idle_randomwalk_ms_min() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.idle_randomwalk_ms_min)
  return idle_randomwalk_ms_min_;
}
inline void Cfg_AIType_Row::set_idle_randomwalk_ms_min(::google::protobuf::uint32 value) {
  
  idle_randomwalk_ms_min_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.idle_randomwalk_ms_min)
}

// optional uint32 idle_randomwalk_ms_max = 4;
inline void Cfg_AIType_Row::clear_idle_randomwalk_ms_max() {
  idle_randomwalk_ms_max_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_AIType_Row::idle_randomwalk_ms_max() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.idle_randomwalk_ms_max)
  return idle_randomwalk_ms_max_;
}
inline void Cfg_AIType_Row::set_idle_randomwalk_ms_max(::google::protobuf::uint32 value) {
  
  idle_randomwalk_ms_max_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.idle_randomwalk_ms_max)
}

// optional float idle_randomwalk_step_min = 5;
inline void Cfg_AIType_Row::clear_idle_randomwalk_step_min() {
  idle_randomwalk_step_min_ = 0;
}
inline float Cfg_AIType_Row::idle_randomwalk_step_min() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.idle_randomwalk_step_min)
  return idle_randomwalk_step_min_;
}
inline void Cfg_AIType_Row::set_idle_randomwalk_step_min(float value) {
  
  idle_randomwalk_step_min_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.idle_randomwalk_step_min)
}

// optional float idle_randomwalk_step_max = 6;
inline void Cfg_AIType_Row::clear_idle_randomwalk_step_max() {
  idle_randomwalk_step_max_ = 0;
}
inline float Cfg_AIType_Row::idle_randomwalk_step_max() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.idle_randomwalk_step_max)
  return idle_randomwalk_step_max_;
}
inline void Cfg_AIType_Row::set_idle_randomwalk_step_max(float value) {
  
  idle_randomwalk_step_max_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.idle_randomwalk_step_max)
}

// optional float idle_randomwalk_range = 7;
inline void Cfg_AIType_Row::clear_idle_randomwalk_range() {
  idle_randomwalk_range_ = 0;
}
inline float Cfg_AIType_Row::idle_randomwalk_range() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.idle_randomwalk_range)
  return idle_randomwalk_range_;
}
inline void Cfg_AIType_Row::set_idle_randomwalk_range(float value) {
  
  idle_randomwalk_range_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.idle_randomwalk_range)
}

// optional float attack_pursue_selfrange = 8;
inline void Cfg_AIType_Row::clear_attack_pursue_selfrange() {
  attack_pursue_selfrange_ = 0;
}
inline float Cfg_AIType_Row::attack_pursue_selfrange() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.attack_pursue_selfrange)
  return attack_pursue_selfrange_;
}
inline void Cfg_AIType_Row::set_attack_pursue_selfrange(float value) {
  
  attack_pursue_selfrange_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.attack_pursue_selfrange)
}

// optional float attack_target_range = 9;
inline void Cfg_AIType_Row::clear_attack_target_range() {
  attack_target_range_ = 0;
}
inline float Cfg_AIType_Row::attack_target_range() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.attack_target_range)
  return attack_target_range_;
}
inline void Cfg_AIType_Row::set_attack_target_range(float value) {
  
  attack_target_range_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.attack_target_range)
}

// optional float search_enemy_range = 10;
inline void Cfg_AIType_Row::clear_search_enemy_range() {
  search_enemy_range_ = 0;
}
inline float Cfg_AIType_Row::search_enemy_range() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.search_enemy_range)
  return search_enemy_range_;
}
inline void Cfg_AIType_Row::set_search_enemy_range(float value) {
  
  search_enemy_range_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.search_enemy_range)
}

// optional float search_enemy_ms_min = 11;
inline void Cfg_AIType_Row::clear_search_enemy_ms_min() {
  search_enemy_ms_min_ = 0;
}
inline float Cfg_AIType_Row::search_enemy_ms_min() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.search_enemy_ms_min)
  return search_enemy_ms_min_;
}
inline void Cfg_AIType_Row::set_search_enemy_ms_min(float value) {
  
  search_enemy_ms_min_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.search_enemy_ms_min)
}

// optional float search_enemy_ms_max = 12;
inline void Cfg_AIType_Row::clear_search_enemy_ms_max() {
  search_enemy_ms_max_ = 0;
}
inline float Cfg_AIType_Row::search_enemy_ms_max() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.search_enemy_ms_max)
  return search_enemy_ms_max_;
}
inline void Cfg_AIType_Row::set_search_enemy_ms_max(float value) {
  
  search_enemy_ms_max_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.search_enemy_ms_max)
}

// optional uint32 patrol_wait_ms_min = 13;
inline void Cfg_AIType_Row::clear_patrol_wait_ms_min() {
  patrol_wait_ms_min_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_AIType_Row::patrol_wait_ms_min() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.patrol_wait_ms_min)
  return patrol_wait_ms_min_;
}
inline void Cfg_AIType_Row::set_patrol_wait_ms_min(::google::protobuf::uint32 value) {
  
  patrol_wait_ms_min_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.patrol_wait_ms_min)
}

// optional uint32 patrol_wait_ms_max = 14;
inline void Cfg_AIType_Row::clear_patrol_wait_ms_max() {
  patrol_wait_ms_max_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_AIType_Row::patrol_wait_ms_max() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.patrol_wait_ms_max)
  return patrol_wait_ms_max_;
}
inline void Cfg_AIType_Row::set_patrol_wait_ms_max(::google::protobuf::uint32 value) {
  
  patrol_wait_ms_max_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.patrol_wait_ms_max)
}

// optional float escape_range_min = 15;
inline void Cfg_AIType_Row::clear_escape_range_min() {
  escape_range_min_ = 0;
}
inline float Cfg_AIType_Row::escape_range_min() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.escape_range_min)
  return escape_range_min_;
}
inline void Cfg_AIType_Row::set_escape_range_min(float value) {
  
  escape_range_min_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.escape_range_min)
}

// optional float escape_range_max = 16;
inline void Cfg_AIType_Row::clear_escape_range_max() {
  escape_range_max_ = 0;
}
inline float Cfg_AIType_Row::escape_range_max() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.escape_range_max)
  return escape_range_max_;
}
inline void Cfg_AIType_Row::set_escape_range_max(float value) {
  
  escape_range_max_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.escape_range_max)
}

// optional bool can_approach = 17;
inline void Cfg_AIType_Row::clear_can_approach() {
  can_approach_ = false;
}
inline bool Cfg_AIType_Row::can_approach() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.can_approach)
  return can_approach_;
}
inline void Cfg_AIType_Row::set_can_approach(bool value) {
  
  can_approach_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.can_approach)
}

// optional uint32 attack_wait_ms = 18;
inline void Cfg_AIType_Row::clear_attack_wait_ms() {
  attack_wait_ms_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_AIType_Row::attack_wait_ms() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.attack_wait_ms)
  return attack_wait_ms_;
}
inline void Cfg_AIType_Row::set_attack_wait_ms(::google::protobuf::uint32 value) {
  
  attack_wait_ms_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.attack_wait_ms)
}

// optional uint32 targetfam_id = 20;
inline void Cfg_AIType_Row::clear_targetfam_id() {
  targetfam_id_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_AIType_Row::targetfam_id() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.targetfam_id)
  return targetfam_id_;
}
inline void Cfg_AIType_Row::set_targetfam_id(::google::protobuf::uint32 value) {
  
  targetfam_id_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.targetfam_id)
}

// repeated uint32 skill_id = 21;
inline int Cfg_AIType_Row::skill_id_size() const {
  return skill_id_.size();
}
inline void Cfg_AIType_Row::clear_skill_id() {
  skill_id_.Clear();
}
inline ::google::protobuf::uint32 Cfg_AIType_Row::skill_id(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.skill_id)
  return skill_id_.Get(index);
}
inline void Cfg_AIType_Row::set_skill_id(int index, ::google::protobuf::uint32 value) {
  skill_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.skill_id)
}
inline void Cfg_AIType_Row::add_skill_id(::google::protobuf::uint32 value) {
  skill_id_.Add(value);
  // @@protoc_insertion_point(field_add:Cfg_AIType.Row.skill_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Cfg_AIType_Row::skill_id() const {
  // @@protoc_insertion_point(field_list:Cfg_AIType.Row.skill_id)
  return skill_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Cfg_AIType_Row::mutable_skill_id() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_AIType.Row.skill_id)
  return &skill_id_;
}

// optional uint32 follow_path = 22;
inline void Cfg_AIType_Row::clear_follow_path() {
  follow_path_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_AIType_Row::follow_path() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.follow_path)
  return follow_path_;
}
inline void Cfg_AIType_Row::set_follow_path(::google::protobuf::uint32 value) {
  
  follow_path_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.follow_path)
}

// optional uint32 script_id = 23;
inline void Cfg_AIType_Row::clear_script_id() {
  script_id_ = 0u;
}
inline ::google::protobuf::uint32 Cfg_AIType_Row::script_id() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.script_id)
  return script_id_;
}
inline void Cfg_AIType_Row::set_script_id(::google::protobuf::uint32 value) {
  
  script_id_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.script_id)
}

// optional bool ai_debug = 24;
inline void Cfg_AIType_Row::clear_ai_debug() {
  ai_debug_ = false;
}
inline bool Cfg_AIType_Row::ai_debug() const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.Row.ai_debug)
  return ai_debug_;
}
inline void Cfg_AIType_Row::set_ai_debug(bool value) {
  
  ai_debug_ = value;
  // @@protoc_insertion_point(field_set:Cfg_AIType.Row.ai_debug)
}

inline const Cfg_AIType_Row* Cfg_AIType_Row::internal_default_instance() {
  return &Cfg_AIType_Row_default_instance_.get();
}
// -------------------------------------------------------------------

// Cfg_AIType

// repeated .Cfg_AIType.Row rows = 1;
inline int Cfg_AIType::rows_size() const {
  return rows_.size();
}
inline void Cfg_AIType::clear_rows() {
  rows_.Clear();
}
inline const ::Cfg_AIType_Row& Cfg_AIType::rows(int index) const {
  // @@protoc_insertion_point(field_get:Cfg_AIType.rows)
  return rows_.Get(index);
}
inline ::Cfg_AIType_Row* Cfg_AIType::mutable_rows(int index) {
  // @@protoc_insertion_point(field_mutable:Cfg_AIType.rows)
  return rows_.Mutable(index);
}
inline ::Cfg_AIType_Row* Cfg_AIType::add_rows() {
  // @@protoc_insertion_point(field_add:Cfg_AIType.rows)
  return rows_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Cfg_AIType_Row >*
Cfg_AIType::mutable_rows() {
  // @@protoc_insertion_point(field_mutable_list:Cfg_AIType.rows)
  return &rows_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Cfg_AIType_Row >&
Cfg_AIType::rows() const {
  // @@protoc_insertion_point(field_list:Cfg_AIType.rows)
  return rows_;
}

inline const Cfg_AIType* Cfg_AIType::internal_default_instance() {
  return &Cfg_AIType_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_config_2fCfg_5fAIType_2eproto__INCLUDED
