// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/AttribChangeDataProto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "common/AttribChangeDataProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* AttribDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttribDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* AttribChangeDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttribChangeDataProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_common_2fAttribChangeDataProto_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_common_2fAttribChangeDataProto_2eproto() {
  protobuf_AddDesc_common_2fAttribChangeDataProto_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "common/AttribChangeDataProto.proto");
  GOOGLE_CHECK(file != NULL);
  AttribDataProto_descriptor_ = file->message_type(0);
  static const int AttribDataProto_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribDataProto, hp_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribDataProto, mp_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribDataProto, movespd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribDataProto, min_atk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribDataProto, max_atk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribDataProto, min_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribDataProto, max_def_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribDataProto, min_matk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribDataProto, max_matk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribDataProto, min_mdef_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribDataProto, max_mdef_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribDataProto, hit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribDataProto, dodge_),
  };
  AttribDataProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AttribDataProto_descriptor_,
      AttribDataProto::internal_default_instance(),
      AttribDataProto_offsets_,
      -1,
      -1,
      -1,
      sizeof(AttribDataProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribDataProto, _internal_metadata_));
  AttribChangeDataProto_descriptor_ = file->message_type(1);
  static const int AttribChangeDataProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribChangeDataProto, attrib_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribChangeDataProto, oplev_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribChangeDataProto, val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribChangeDataProto, factor_),
  };
  AttribChangeDataProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AttribChangeDataProto_descriptor_,
      AttribChangeDataProto::internal_default_instance(),
      AttribChangeDataProto_offsets_,
      -1,
      -1,
      -1,
      sizeof(AttribChangeDataProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttribChangeDataProto, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_common_2fAttribChangeDataProto_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AttribDataProto_descriptor_, AttribDataProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AttribChangeDataProto_descriptor_, AttribChangeDataProto::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_common_2fAttribChangeDataProto_2eproto() {
  AttribDataProto_default_instance_.Shutdown();
  delete AttribDataProto_reflection_;
  AttribChangeDataProto_default_instance_.Shutdown();
  delete AttribChangeDataProto_reflection_;
}

void protobuf_InitDefaults_common_2fAttribChangeDataProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_common_2fCommon_2eproto();
  AttribDataProto_default_instance_.DefaultConstruct();
  AttribChangeDataProto_default_instance_.DefaultConstruct();
  AttribDataProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  AttribChangeDataProto_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_common_2fAttribChangeDataProto_2eproto_once_);
void protobuf_InitDefaults_common_2fAttribChangeDataProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_common_2fAttribChangeDataProto_2eproto_once_,
                 &protobuf_InitDefaults_common_2fAttribChangeDataProto_2eproto_impl);
}
void protobuf_AddDesc_common_2fAttribChangeDataProto_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_common_2fAttribChangeDataProto_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\"common/AttribChangeDataProto.proto\032\023co"
    "mmon/Common.proto\"\352\001\n\017AttribDataProto\022\016\n"
    "\006hp_max\030\006 \001(\005\022\016\n\006mp_max\030\007 \001(\005\022\017\n\007movespd"
    "\030\010 \001(\005\022\017\n\007min_atk\030\t \001(\005\022\017\n\007max_atk\030\n \001(\005"
    "\022\017\n\007min_def\030\013 \001(\005\022\017\n\007max_def\030\014 \001(\005\022\020\n\010mi"
    "n_matk\030\r \001(\005\022\020\n\010max_matk\030\016 \001(\005\022\020\n\010min_md"
    "ef\030\017 \001(\005\022\020\n\010max_mdef\030\020 \001(\005\022\013\n\003hit\030\021 \001(\005\022"
    "\r\n\005dodge\030\022 \001(\005\"b\n\025AttribChangeDataProto\022"
    "\035\n\006attrib\030\001 \001(\0162\r.ACTOR_ATTRIB\022\r\n\005oplev\030"
    "\002 \001(\r\022\013\n\003val\030\003 \001(\005\022\016\n\006factor\030\004 \001(\005B\002H\002b\006"
    "proto3", 406);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common/AttribChangeDataProto.proto", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_common_2fCommon_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_common_2fAttribChangeDataProto_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_common_2fAttribChangeDataProto_2eproto_once_);
void protobuf_AddDesc_common_2fAttribChangeDataProto_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_common_2fAttribChangeDataProto_2eproto_once_,
                 &protobuf_AddDesc_common_2fAttribChangeDataProto_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_common_2fAttribChangeDataProto_2eproto {
  StaticDescriptorInitializer_common_2fAttribChangeDataProto_2eproto() {
    protobuf_AddDesc_common_2fAttribChangeDataProto_2eproto();
  }
} static_descriptor_initializer_common_2fAttribChangeDataProto_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttribDataProto::kHpMaxFieldNumber;
const int AttribDataProto::kMpMaxFieldNumber;
const int AttribDataProto::kMovespdFieldNumber;
const int AttribDataProto::kMinAtkFieldNumber;
const int AttribDataProto::kMaxAtkFieldNumber;
const int AttribDataProto::kMinDefFieldNumber;
const int AttribDataProto::kMaxDefFieldNumber;
const int AttribDataProto::kMinMatkFieldNumber;
const int AttribDataProto::kMaxMatkFieldNumber;
const int AttribDataProto::kMinMdefFieldNumber;
const int AttribDataProto::kMaxMdefFieldNumber;
const int AttribDataProto::kHitFieldNumber;
const int AttribDataProto::kDodgeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttribDataProto::AttribDataProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_common_2fAttribChangeDataProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:AttribDataProto)
}

void AttribDataProto::InitAsDefaultInstance() {
}

AttribDataProto::AttribDataProto(const AttribDataProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AttribDataProto)
}

void AttribDataProto::SharedCtor() {
  ::memset(&hp_max_, 0, reinterpret_cast<char*>(&dodge_) -
    reinterpret_cast<char*>(&hp_max_) + sizeof(dodge_));
  _cached_size_ = 0;
}

AttribDataProto::~AttribDataProto() {
  // @@protoc_insertion_point(destructor:AttribDataProto)
  SharedDtor();
}

void AttribDataProto::SharedDtor() {
}

void AttribDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttribDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttribDataProto_descriptor_;
}

const AttribDataProto& AttribDataProto::default_instance() {
  protobuf_InitDefaults_common_2fAttribChangeDataProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AttribDataProto> AttribDataProto_default_instance_;

AttribDataProto* AttribDataProto::New(::google::protobuf::Arena* arena) const {
  AttribDataProto* n = new AttribDataProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttribDataProto::UnsafeMergeFrom(const AttribDataProto& from) {
  MergeFrom(from);
}
void AttribDataProto::Swap(AttribDataProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttribDataProto::InternalSwap(AttribDataProto* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata AttribDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttribDataProto_descriptor_;
  metadata.reflection = AttribDataProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AttribDataProto

// optional int32 hp_max = 6;
void AttribDataProto::clear_hp_max() {
  hp_max_ = 0;
}
::google::protobuf::int32 AttribDataProto::hp_max() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.hp_max)
  return hp_max_;
}
void AttribDataProto::set_hp_max(::google::protobuf::int32 value) {
  
  hp_max_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.hp_max)
}

// optional int32 mp_max = 7;
void AttribDataProto::clear_mp_max() {
  mp_max_ = 0;
}
::google::protobuf::int32 AttribDataProto::mp_max() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.mp_max)
  return mp_max_;
}
void AttribDataProto::set_mp_max(::google::protobuf::int32 value) {
  
  mp_max_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.mp_max)
}

// optional int32 movespd = 8;
void AttribDataProto::clear_movespd() {
  movespd_ = 0;
}
::google::protobuf::int32 AttribDataProto::movespd() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.movespd)
  return movespd_;
}
void AttribDataProto::set_movespd(::google::protobuf::int32 value) {
  
  movespd_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.movespd)
}

// optional int32 min_atk = 9;
void AttribDataProto::clear_min_atk() {
  min_atk_ = 0;
}
::google::protobuf::int32 AttribDataProto::min_atk() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.min_atk)
  return min_atk_;
}
void AttribDataProto::set_min_atk(::google::protobuf::int32 value) {
  
  min_atk_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.min_atk)
}

// optional int32 max_atk = 10;
void AttribDataProto::clear_max_atk() {
  max_atk_ = 0;
}
::google::protobuf::int32 AttribDataProto::max_atk() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.max_atk)
  return max_atk_;
}
void AttribDataProto::set_max_atk(::google::protobuf::int32 value) {
  
  max_atk_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.max_atk)
}

// optional int32 min_def = 11;
void AttribDataProto::clear_min_def() {
  min_def_ = 0;
}
::google::protobuf::int32 AttribDataProto::min_def() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.min_def)
  return min_def_;
}
void AttribDataProto::set_min_def(::google::protobuf::int32 value) {
  
  min_def_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.min_def)
}

// optional int32 max_def = 12;
void AttribDataProto::clear_max_def() {
  max_def_ = 0;
}
::google::protobuf::int32 AttribDataProto::max_def() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.max_def)
  return max_def_;
}
void AttribDataProto::set_max_def(::google::protobuf::int32 value) {
  
  max_def_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.max_def)
}

// optional int32 min_matk = 13;
void AttribDataProto::clear_min_matk() {
  min_matk_ = 0;
}
::google::protobuf::int32 AttribDataProto::min_matk() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.min_matk)
  return min_matk_;
}
void AttribDataProto::set_min_matk(::google::protobuf::int32 value) {
  
  min_matk_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.min_matk)
}

// optional int32 max_matk = 14;
void AttribDataProto::clear_max_matk() {
  max_matk_ = 0;
}
::google::protobuf::int32 AttribDataProto::max_matk() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.max_matk)
  return max_matk_;
}
void AttribDataProto::set_max_matk(::google::protobuf::int32 value) {
  
  max_matk_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.max_matk)
}

// optional int32 min_mdef = 15;
void AttribDataProto::clear_min_mdef() {
  min_mdef_ = 0;
}
::google::protobuf::int32 AttribDataProto::min_mdef() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.min_mdef)
  return min_mdef_;
}
void AttribDataProto::set_min_mdef(::google::protobuf::int32 value) {
  
  min_mdef_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.min_mdef)
}

// optional int32 max_mdef = 16;
void AttribDataProto::clear_max_mdef() {
  max_mdef_ = 0;
}
::google::protobuf::int32 AttribDataProto::max_mdef() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.max_mdef)
  return max_mdef_;
}
void AttribDataProto::set_max_mdef(::google::protobuf::int32 value) {
  
  max_mdef_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.max_mdef)
}

// optional int32 hit = 17;
void AttribDataProto::clear_hit() {
  hit_ = 0;
}
::google::protobuf::int32 AttribDataProto::hit() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.hit)
  return hit_;
}
void AttribDataProto::set_hit(::google::protobuf::int32 value) {
  
  hit_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.hit)
}

// optional int32 dodge = 18;
void AttribDataProto::clear_dodge() {
  dodge_ = 0;
}
::google::protobuf::int32 AttribDataProto::dodge() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.dodge)
  return dodge_;
}
void AttribDataProto::set_dodge(::google::protobuf::int32 value) {
  
  dodge_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.dodge)
}

inline const AttribDataProto* AttribDataProto::internal_default_instance() {
  return &AttribDataProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttribChangeDataProto::kAttribFieldNumber;
const int AttribChangeDataProto::kOplevFieldNumber;
const int AttribChangeDataProto::kValFieldNumber;
const int AttribChangeDataProto::kFactorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttribChangeDataProto::AttribChangeDataProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_common_2fAttribChangeDataProto_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:AttribChangeDataProto)
}

void AttribChangeDataProto::InitAsDefaultInstance() {
}

AttribChangeDataProto::AttribChangeDataProto(const AttribChangeDataProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AttribChangeDataProto)
}

void AttribChangeDataProto::SharedCtor() {
  ::memset(&attrib_, 0, reinterpret_cast<char*>(&factor_) -
    reinterpret_cast<char*>(&attrib_) + sizeof(factor_));
  _cached_size_ = 0;
}

AttribChangeDataProto::~AttribChangeDataProto() {
  // @@protoc_insertion_point(destructor:AttribChangeDataProto)
  SharedDtor();
}

void AttribChangeDataProto::SharedDtor() {
}

void AttribChangeDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttribChangeDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttribChangeDataProto_descriptor_;
}

const AttribChangeDataProto& AttribChangeDataProto::default_instance() {
  protobuf_InitDefaults_common_2fAttribChangeDataProto_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AttribChangeDataProto> AttribChangeDataProto_default_instance_;

AttribChangeDataProto* AttribChangeDataProto::New(::google::protobuf::Arena* arena) const {
  AttribChangeDataProto* n = new AttribChangeDataProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttribChangeDataProto::UnsafeMergeFrom(const AttribChangeDataProto& from) {
  MergeFrom(from);
}
void AttribChangeDataProto::Swap(AttribChangeDataProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttribChangeDataProto::InternalSwap(AttribChangeDataProto* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata AttribChangeDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttribChangeDataProto_descriptor_;
  metadata.reflection = AttribChangeDataProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AttribChangeDataProto

// optional .ACTOR_ATTRIB attrib = 1;
void AttribChangeDataProto::clear_attrib() {
  attrib_ = 0;
}
::ACTOR_ATTRIB AttribChangeDataProto::attrib() const {
  // @@protoc_insertion_point(field_get:AttribChangeDataProto.attrib)
  return static_cast< ::ACTOR_ATTRIB >(attrib_);
}
void AttribChangeDataProto::set_attrib(::ACTOR_ATTRIB value) {
  
  attrib_ = value;
  // @@protoc_insertion_point(field_set:AttribChangeDataProto.attrib)
}

// optional uint32 oplev = 2;
void AttribChangeDataProto::clear_oplev() {
  oplev_ = 0u;
}
::google::protobuf::uint32 AttribChangeDataProto::oplev() const {
  // @@protoc_insertion_point(field_get:AttribChangeDataProto.oplev)
  return oplev_;
}
void AttribChangeDataProto::set_oplev(::google::protobuf::uint32 value) {
  
  oplev_ = value;
  // @@protoc_insertion_point(field_set:AttribChangeDataProto.oplev)
}

// optional int32 val = 3;
void AttribChangeDataProto::clear_val() {
  val_ = 0;
}
::google::protobuf::int32 AttribChangeDataProto::val() const {
  // @@protoc_insertion_point(field_get:AttribChangeDataProto.val)
  return val_;
}
void AttribChangeDataProto::set_val(::google::protobuf::int32 value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:AttribChangeDataProto.val)
}

// optional int32 factor = 4;
void AttribChangeDataProto::clear_factor() {
  factor_ = 0;
}
::google::protobuf::int32 AttribChangeDataProto::factor() const {
  // @@protoc_insertion_point(field_get:AttribChangeDataProto.factor)
  return factor_;
}
void AttribChangeDataProto::set_factor(::google::protobuf::int32 value) {
  
  factor_ = value;
  // @@protoc_insertion_point(field_set:AttribChangeDataProto.factor)
}

inline const AttribChangeDataProto* AttribChangeDataProto::internal_default_instance() {
  return &AttribChangeDataProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
