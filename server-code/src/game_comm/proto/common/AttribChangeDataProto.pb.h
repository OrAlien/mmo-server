// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/AttribChangeDataProto.proto

#ifndef PROTOBUF_common_2fAttribChangeDataProto_2eproto__INCLUDED
#define PROTOBUF_common_2fAttribChangeDataProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common/Common.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_common_2fAttribChangeDataProto_2eproto();
void protobuf_InitDefaults_common_2fAttribChangeDataProto_2eproto();
void protobuf_AssignDesc_common_2fAttribChangeDataProto_2eproto();
void protobuf_ShutdownFile_common_2fAttribChangeDataProto_2eproto();

class AttribChangeDataProto;
class AttribDataProto;

// ===================================================================

class AttribDataProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AttribDataProto) */ {
 public:
  AttribDataProto();
  virtual ~AttribDataProto();

  AttribDataProto(const AttribDataProto& from);

  inline AttribDataProto& operator=(const AttribDataProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttribDataProto& default_instance();

  static const AttribDataProto* internal_default_instance();

  void Swap(AttribDataProto* other);

  // implements Message ----------------------------------------------

  inline AttribDataProto* New() const { return New(NULL); }

  AttribDataProto* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AttribDataProto* other);
  void UnsafeMergeFrom(const AttribDataProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 hp_max = 6;
  void clear_hp_max();
  static const int kHpMaxFieldNumber = 6;
  ::google::protobuf::int32 hp_max() const;
  void set_hp_max(::google::protobuf::int32 value);

  // optional int32 mp_max = 7;
  void clear_mp_max();
  static const int kMpMaxFieldNumber = 7;
  ::google::protobuf::int32 mp_max() const;
  void set_mp_max(::google::protobuf::int32 value);

  // optional int32 movespd = 8;
  void clear_movespd();
  static const int kMovespdFieldNumber = 8;
  ::google::protobuf::int32 movespd() const;
  void set_movespd(::google::protobuf::int32 value);

  // optional int32 min_atk = 9;
  void clear_min_atk();
  static const int kMinAtkFieldNumber = 9;
  ::google::protobuf::int32 min_atk() const;
  void set_min_atk(::google::protobuf::int32 value);

  // optional int32 max_atk = 10;
  void clear_max_atk();
  static const int kMaxAtkFieldNumber = 10;
  ::google::protobuf::int32 max_atk() const;
  void set_max_atk(::google::protobuf::int32 value);

  // optional int32 min_def = 11;
  void clear_min_def();
  static const int kMinDefFieldNumber = 11;
  ::google::protobuf::int32 min_def() const;
  void set_min_def(::google::protobuf::int32 value);

  // optional int32 max_def = 12;
  void clear_max_def();
  static const int kMaxDefFieldNumber = 12;
  ::google::protobuf::int32 max_def() const;
  void set_max_def(::google::protobuf::int32 value);

  // optional int32 min_matk = 13;
  void clear_min_matk();
  static const int kMinMatkFieldNumber = 13;
  ::google::protobuf::int32 min_matk() const;
  void set_min_matk(::google::protobuf::int32 value);

  // optional int32 max_matk = 14;
  void clear_max_matk();
  static const int kMaxMatkFieldNumber = 14;
  ::google::protobuf::int32 max_matk() const;
  void set_max_matk(::google::protobuf::int32 value);

  // optional int32 min_mdef = 15;
  void clear_min_mdef();
  static const int kMinMdefFieldNumber = 15;
  ::google::protobuf::int32 min_mdef() const;
  void set_min_mdef(::google::protobuf::int32 value);

  // optional int32 max_mdef = 16;
  void clear_max_mdef();
  static const int kMaxMdefFieldNumber = 16;
  ::google::protobuf::int32 max_mdef() const;
  void set_max_mdef(::google::protobuf::int32 value);

  // optional int32 hit = 17;
  void clear_hit();
  static const int kHitFieldNumber = 17;
  ::google::protobuf::int32 hit() const;
  void set_hit(::google::protobuf::int32 value);

  // optional int32 dodge = 18;
  void clear_dodge();
  static const int kDodgeFieldNumber = 18;
  ::google::protobuf::int32 dodge() const;
  void set_dodge(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AttribDataProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 hp_max_;
  ::google::protobuf::int32 mp_max_;
  ::google::protobuf::int32 movespd_;
  ::google::protobuf::int32 min_atk_;
  ::google::protobuf::int32 max_atk_;
  ::google::protobuf::int32 min_def_;
  ::google::protobuf::int32 max_def_;
  ::google::protobuf::int32 min_matk_;
  ::google::protobuf::int32 max_matk_;
  ::google::protobuf::int32 min_mdef_;
  ::google::protobuf::int32 max_mdef_;
  ::google::protobuf::int32 hit_;
  ::google::protobuf::int32 dodge_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_common_2fAttribChangeDataProto_2eproto_impl();
  friend void  protobuf_AddDesc_common_2fAttribChangeDataProto_2eproto_impl();
  friend void protobuf_AssignDesc_common_2fAttribChangeDataProto_2eproto();
  friend void protobuf_ShutdownFile_common_2fAttribChangeDataProto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AttribDataProto> AttribDataProto_default_instance_;

// -------------------------------------------------------------------

class AttribChangeDataProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AttribChangeDataProto) */ {
 public:
  AttribChangeDataProto();
  virtual ~AttribChangeDataProto();

  AttribChangeDataProto(const AttribChangeDataProto& from);

  inline AttribChangeDataProto& operator=(const AttribChangeDataProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttribChangeDataProto& default_instance();

  static const AttribChangeDataProto* internal_default_instance();

  void Swap(AttribChangeDataProto* other);

  // implements Message ----------------------------------------------

  inline AttribChangeDataProto* New() const { return New(NULL); }

  AttribChangeDataProto* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AttribChangeDataProto* other);
  void UnsafeMergeFrom(const AttribChangeDataProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ACTOR_ATTRIB attrib = 1;
  void clear_attrib();
  static const int kAttribFieldNumber = 1;
  ::ACTOR_ATTRIB attrib() const;
  void set_attrib(::ACTOR_ATTRIB value);

  // optional uint32 oplev = 2;
  void clear_oplev();
  static const int kOplevFieldNumber = 2;
  ::google::protobuf::uint32 oplev() const;
  void set_oplev(::google::protobuf::uint32 value);

  // optional int32 val = 3;
  void clear_val();
  static const int kValFieldNumber = 3;
  ::google::protobuf::int32 val() const;
  void set_val(::google::protobuf::int32 value);

  // optional int32 factor = 4;
  void clear_factor();
  static const int kFactorFieldNumber = 4;
  ::google::protobuf::int32 factor() const;
  void set_factor(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AttribChangeDataProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int attrib_;
  ::google::protobuf::uint32 oplev_;
  ::google::protobuf::int32 val_;
  ::google::protobuf::int32 factor_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_common_2fAttribChangeDataProto_2eproto_impl();
  friend void  protobuf_AddDesc_common_2fAttribChangeDataProto_2eproto_impl();
  friend void protobuf_AssignDesc_common_2fAttribChangeDataProto_2eproto();
  friend void protobuf_ShutdownFile_common_2fAttribChangeDataProto_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AttribChangeDataProto> AttribChangeDataProto_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AttribDataProto

// optional int32 hp_max = 6;
inline void AttribDataProto::clear_hp_max() {
  hp_max_ = 0;
}
inline ::google::protobuf::int32 AttribDataProto::hp_max() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.hp_max)
  return hp_max_;
}
inline void AttribDataProto::set_hp_max(::google::protobuf::int32 value) {
  
  hp_max_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.hp_max)
}

// optional int32 mp_max = 7;
inline void AttribDataProto::clear_mp_max() {
  mp_max_ = 0;
}
inline ::google::protobuf::int32 AttribDataProto::mp_max() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.mp_max)
  return mp_max_;
}
inline void AttribDataProto::set_mp_max(::google::protobuf::int32 value) {
  
  mp_max_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.mp_max)
}

// optional int32 movespd = 8;
inline void AttribDataProto::clear_movespd() {
  movespd_ = 0;
}
inline ::google::protobuf::int32 AttribDataProto::movespd() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.movespd)
  return movespd_;
}
inline void AttribDataProto::set_movespd(::google::protobuf::int32 value) {
  
  movespd_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.movespd)
}

// optional int32 min_atk = 9;
inline void AttribDataProto::clear_min_atk() {
  min_atk_ = 0;
}
inline ::google::protobuf::int32 AttribDataProto::min_atk() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.min_atk)
  return min_atk_;
}
inline void AttribDataProto::set_min_atk(::google::protobuf::int32 value) {
  
  min_atk_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.min_atk)
}

// optional int32 max_atk = 10;
inline void AttribDataProto::clear_max_atk() {
  max_atk_ = 0;
}
inline ::google::protobuf::int32 AttribDataProto::max_atk() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.max_atk)
  return max_atk_;
}
inline void AttribDataProto::set_max_atk(::google::protobuf::int32 value) {
  
  max_atk_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.max_atk)
}

// optional int32 min_def = 11;
inline void AttribDataProto::clear_min_def() {
  min_def_ = 0;
}
inline ::google::protobuf::int32 AttribDataProto::min_def() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.min_def)
  return min_def_;
}
inline void AttribDataProto::set_min_def(::google::protobuf::int32 value) {
  
  min_def_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.min_def)
}

// optional int32 max_def = 12;
inline void AttribDataProto::clear_max_def() {
  max_def_ = 0;
}
inline ::google::protobuf::int32 AttribDataProto::max_def() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.max_def)
  return max_def_;
}
inline void AttribDataProto::set_max_def(::google::protobuf::int32 value) {
  
  max_def_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.max_def)
}

// optional int32 min_matk = 13;
inline void AttribDataProto::clear_min_matk() {
  min_matk_ = 0;
}
inline ::google::protobuf::int32 AttribDataProto::min_matk() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.min_matk)
  return min_matk_;
}
inline void AttribDataProto::set_min_matk(::google::protobuf::int32 value) {
  
  min_matk_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.min_matk)
}

// optional int32 max_matk = 14;
inline void AttribDataProto::clear_max_matk() {
  max_matk_ = 0;
}
inline ::google::protobuf::int32 AttribDataProto::max_matk() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.max_matk)
  return max_matk_;
}
inline void AttribDataProto::set_max_matk(::google::protobuf::int32 value) {
  
  max_matk_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.max_matk)
}

// optional int32 min_mdef = 15;
inline void AttribDataProto::clear_min_mdef() {
  min_mdef_ = 0;
}
inline ::google::protobuf::int32 AttribDataProto::min_mdef() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.min_mdef)
  return min_mdef_;
}
inline void AttribDataProto::set_min_mdef(::google::protobuf::int32 value) {
  
  min_mdef_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.min_mdef)
}

// optional int32 max_mdef = 16;
inline void AttribDataProto::clear_max_mdef() {
  max_mdef_ = 0;
}
inline ::google::protobuf::int32 AttribDataProto::max_mdef() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.max_mdef)
  return max_mdef_;
}
inline void AttribDataProto::set_max_mdef(::google::protobuf::int32 value) {
  
  max_mdef_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.max_mdef)
}

// optional int32 hit = 17;
inline void AttribDataProto::clear_hit() {
  hit_ = 0;
}
inline ::google::protobuf::int32 AttribDataProto::hit() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.hit)
  return hit_;
}
inline void AttribDataProto::set_hit(::google::protobuf::int32 value) {
  
  hit_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.hit)
}

// optional int32 dodge = 18;
inline void AttribDataProto::clear_dodge() {
  dodge_ = 0;
}
inline ::google::protobuf::int32 AttribDataProto::dodge() const {
  // @@protoc_insertion_point(field_get:AttribDataProto.dodge)
  return dodge_;
}
inline void AttribDataProto::set_dodge(::google::protobuf::int32 value) {
  
  dodge_ = value;
  // @@protoc_insertion_point(field_set:AttribDataProto.dodge)
}

inline const AttribDataProto* AttribDataProto::internal_default_instance() {
  return &AttribDataProto_default_instance_.get();
}
// -------------------------------------------------------------------

// AttribChangeDataProto

// optional .ACTOR_ATTRIB attrib = 1;
inline void AttribChangeDataProto::clear_attrib() {
  attrib_ = 0;
}
inline ::ACTOR_ATTRIB AttribChangeDataProto::attrib() const {
  // @@protoc_insertion_point(field_get:AttribChangeDataProto.attrib)
  return static_cast< ::ACTOR_ATTRIB >(attrib_);
}
inline void AttribChangeDataProto::set_attrib(::ACTOR_ATTRIB value) {
  
  attrib_ = value;
  // @@protoc_insertion_point(field_set:AttribChangeDataProto.attrib)
}

// optional uint32 oplev = 2;
inline void AttribChangeDataProto::clear_oplev() {
  oplev_ = 0u;
}
inline ::google::protobuf::uint32 AttribChangeDataProto::oplev() const {
  // @@protoc_insertion_point(field_get:AttribChangeDataProto.oplev)
  return oplev_;
}
inline void AttribChangeDataProto::set_oplev(::google::protobuf::uint32 value) {
  
  oplev_ = value;
  // @@protoc_insertion_point(field_set:AttribChangeDataProto.oplev)
}

// optional int32 val = 3;
inline void AttribChangeDataProto::clear_val() {
  val_ = 0;
}
inline ::google::protobuf::int32 AttribChangeDataProto::val() const {
  // @@protoc_insertion_point(field_get:AttribChangeDataProto.val)
  return val_;
}
inline void AttribChangeDataProto::set_val(::google::protobuf::int32 value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:AttribChangeDataProto.val)
}

// optional int32 factor = 4;
inline void AttribChangeDataProto::clear_factor() {
  factor_ = 0;
}
inline ::google::protobuf::int32 AttribChangeDataProto::factor() const {
  // @@protoc_insertion_point(field_get:AttribChangeDataProto.factor)
  return factor_;
}
inline void AttribChangeDataProto::set_factor(::google::protobuf::int32 value) {
  
  factor_ = value;
  // @@protoc_insertion_point(field_set:AttribChangeDataProto.factor)
}

inline const AttribChangeDataProto* AttribChangeDataProto::internal_default_instance() {
  return &AttribChangeDataProto_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2fAttribChangeDataProto_2eproto__INCLUDED
