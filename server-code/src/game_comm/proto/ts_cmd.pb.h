// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ts_cmd.proto

#ifndef PROTOBUF_ts_5fcmd_2eproto__INCLUDED
#define PROTOBUF_ts_5fcmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ts_5fcmd_2eproto();
void protobuf_InitDefaults_ts_5fcmd_2eproto();
void protobuf_AssignDesc_ts_5fcmd_2eproto();
void protobuf_ShutdownFile_ts_5fcmd_2eproto();


enum TS_CMD {
  CMD_BEGIN = 0,
  CMD_SC_KEY = 1,
  CMD_PING = 2,
  CMD_PONG = 3,
  CMD_CS_LOGIN = 10,
  CMD_SC_LOGIN = 11,
  CMD_SC_ACTORINFOLIST = 12,
  CMD_SC_WAITINFO = 13,
  CMD_CS_CREATEACTOR = 14,
  CMD_SC_CREATEACTOR = 15,
  CMD_CS_SELECTACTOR = 16,
  CMD_SC_SELECTACTOR = 17,
  CMD_SC_LOADMAP = 100,
  CMD_CS_LOADMAP_SUCC = 101,
  CMD_SC_ENTERMAP = 102,
  CMD_SC_PLAYERINFO = 103,
  CMD_SC_ACTORATTRIB = 104,
  CMD_SC_COMMONDATA = 105,
  CMD_SC_DATACOUNT = 106,
  CMD_SC_SYSVAR = 107,
  CMD_SC_COOLDOWN = 108,
  CMD_SC_AOI_NEW = 120,
  CMD_SC_AOI_REMOVE = 121,
  CMD_SC_AOI_UPDATE = 122,
  CMD_CS_MOVE = 123,
  CMD_CS_CHANGEMAP = 124,
  CMD_CS_CASTSKILL = 130,
  CMD_SC_CASTSKILL = 131,
  CMD_CS_SKILL_BREAK = 132,
  CMD_SC_SKILL_BREAK = 133,
  CMD_CS_SKILL_CHGTARGETPOS = 134,
  CMD_SC_SKILL_DAMAGE = 135,
  CMD_SC_SKILL_STUN = 136,
  CMD_SC_SKILL_EFFACT = 137,
  CMD_SC_DAMAGE = 138,
  CMD_SC_DEAD = 139,
  CMD_SC_ATTRIB_CHANGE = 140,
  CMD_CS_CHANGE_PKMODE = 141,
  CMD_SC_CHANGE_PKMODE = 142,
  CMD_CS_REBORN = 143,
  CMD_SC_STATUS_LIST = 150,
  CMD_SC_STATUS_INFO = 151,
  CMD_SC_STATUS_ACTION = 152,
  CMD_SC_ITEM_DELETE = 160,
  CMD_SC_ITEM_INFO = 161,
  CMD_SC_ITEM_CHANGE = 162,
  CMD_CS_ITEM_SWAP = 163,
  CMD_CS_ITEM_SPLIT = 164,
  CMD_CS_ITEM_COMBINE = 165,
  CMD_CS_ITEM_TIDY = 166,
  CMD_CS_ITEM_USE = 167,
  CMD_CS_ITEM_STORAGE_OPEN = 170,
  CMD_CS_ITEM_STORAGE_CHECKIN = 171,
  CMD_CS_ITEM_STORAGE_CHECKOUT = 172,
  CMD_CS_EQUIP = 180,
  CMD_CS_UNEQUIP = 181,
  CMD_CS_TALK = 190,
  CMD_SC_TALK = 191,
  CMD_SC_TASK_INFO = 200,
  CMD_SC_TASK_DATA = 201,
  CMD_CS_TASK_SUBMIT = 202,
  CMD_CS_ACTIVE_NPC = 205,
  CMD_SC_DIALOG = 206,
  CMD_CS_DIALOG_CLICK = 207,
  CMD_SC_ACHI_INFO = 210,
  CMD_CS_ACHI_TAKE = 211,
  CMD_SC_TEAMMEMBER_INFO = 213,
  CMD_SC_TEAMMEMBER_ACTION = 214,
  CMD_CS_TEAMCREATE = 215,
  CMD_CS_TEAMQUIT = 216,
  CMD_CS_TEAMKICKMEMBER = 217,
  CMD_CS_TEAMINVITEMEMBER = 218,
  CMD_SC_TEAMINVITEMEMBER = 219,
  CMD_CS_TEAMACCEPTINVITE = 220,
  CMD_CS_TEAMNEWLEADER = 221,
  CMD_CS_TEAMAPPLYMEMBER = 222,
  CMD_SC_TEAMAPPLYMEMBER = 223,
  CMD_CS_TEAMACCEPTAPPLY = 224,
  CMD_CLOSE = 10000,
  TS_CMD_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TS_CMD_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TS_CMD_IsValid(int value);
const TS_CMD TS_CMD_MIN = CMD_BEGIN;
const TS_CMD TS_CMD_MAX = CMD_CLOSE;
const int TS_CMD_ARRAYSIZE = TS_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* TS_CMD_descriptor();
inline const ::std::string& TS_CMD_Name(TS_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    TS_CMD_descriptor(), value);
}
inline bool TS_CMD_Parse(
    const ::std::string& name, TS_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TS_CMD>(
    TS_CMD_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::TS_CMD> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TS_CMD>() {
  return ::TS_CMD_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ts_5fcmd_2eproto__INCLUDED
